
workable.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000202  00800100  00001c94  00001d28  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c94  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800302  00800302  00001f2a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f2a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001f88  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  00001fc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000160a  00000000  00000000  000020b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009c7  00000000  00000000  000036c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cc6  00000000  00000000  00004089  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00004d50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000764  00000000  00000000  00004fec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d2f  00000000  00000000  00005750  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  0000647f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b8 00 	jmp	0x170	; 0x170 <__ctors_end>
       4:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
       8:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
       c:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      10:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      14:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      18:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      1c:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      20:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      24:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      28:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      2c:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      30:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      34:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      38:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      3c:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      40:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      44:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      48:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      4c:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      50:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      54:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      58:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      5c:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      60:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      64:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__bad_interrupt>
      68:	53 03       	mulsu	r21, r19
      6a:	6b 03       	fmul	r22, r19
      6c:	83 03       	fmuls	r16, r19
      6e:	9b 03       	fmulsu	r17, r19
      70:	b3 03       	fmuls	r19, r19
      72:	0e 04       	cpc	r0, r14
      74:	1d 04       	cpc	r1, r13

00000076 <__trampolines_end>:
      76:	00 40       	sbci	r16, 0x00	; 0
      78:	7a 10       	cpse	r7, r10
      7a:	f3 5a       	subi	r31, 0xA3	; 163
      7c:	00 a0       	ldd	r0, Z+32	; 0x20
      7e:	72 4e       	sbci	r23, 0xE2	; 226
      80:	18 09       	sbc	r17, r8
      82:	00 10       	cpse	r0, r0
      84:	a5 d4       	rcall	.+2378   	; 0x9d0 <__stack+0xd1>
      86:	e8 00       	.word	0x00e8	; ????
      88:	00 e8       	ldi	r16, 0x80	; 128
      8a:	76 48       	sbci	r23, 0x86	; 134
      8c:	17 00       	.word	0x0017	; ????
      8e:	00 e4       	ldi	r16, 0x40	; 64
      90:	0b 54       	subi	r16, 0x4B	; 75
      92:	02 00       	.word	0x0002	; ????
      94:	00 ca       	rjmp	.-3072   	; 0xfffff496 <__eeprom_end+0xff7ef496>
      96:	9a 3b       	cpi	r25, 0xBA	; 186
      98:	00 00       	nop
      9a:	00 e1       	ldi	r16, 0x10	; 16
      9c:	f5 05       	cpc	r31, r5
      9e:	00 00       	nop
      a0:	80 96       	adiw	r24, 0x20	; 32
      a2:	98 00       	.word	0x0098	; ????
      a4:	00 00       	nop
      a6:	40 42       	sbci	r20, 0x20	; 32
      a8:	0f 00       	.word	0x000f	; ????
      aa:	00 00       	nop
      ac:	a0 86       	std	Z+8, r10	; 0x08
      ae:	01 00       	.word	0x0001	; ????
      b0:	00 00       	nop
      b2:	10 27       	eor	r17, r16
      b4:	00 00       	nop
      b6:	00 00       	nop
      b8:	e8 03       	fmulsu	r22, r16
      ba:	00 00       	nop
      bc:	00 00       	nop
      be:	64 00       	.word	0x0064	; ????
      c0:	00 00       	nop
      c2:	00 00       	nop
      c4:	0a 00       	.word	0x000a	; ????
      c6:	00 00       	nop
      c8:	00 00       	nop
      ca:	01 00       	.word	0x0001	; ????
      cc:	00 00       	nop
      ce:	00 00       	nop
      d0:	2c 76       	andi	r18, 0x6C	; 108
      d2:	d8 88       	ldd	r13, Y+16	; 0x10
      d4:	dc 67       	ori	r29, 0x7C	; 124
      d6:	4f 08       	sbc	r4, r15
      d8:	23 df       	rcall	.-442    	; 0xffffff20 <__eeprom_end+0xff7eff20>
      da:	c1 df       	rcall	.-126    	; 0x5e <__SREG__+0x1f>
      dc:	ae 59       	subi	r26, 0x9E	; 158
      de:	e1 b1       	in	r30, 0x01	; 1
      e0:	b7 96       	adiw	r30, 0x27	; 39
      e2:	e5 e3       	ldi	r30, 0x35	; 53
      e4:	e4 53       	subi	r30, 0x34	; 52
      e6:	c6 3a       	cpi	r28, 0xA6	; 166
      e8:	e6 51       	subi	r30, 0x16	; 22
      ea:	99 76       	andi	r25, 0x69	; 105
      ec:	96 e8       	ldi	r25, 0x86	; 134
      ee:	e6 c2       	rjmp	.+1484   	; 0x6bc <ui_show_display+0x5a>
      f0:	84 26       	eor	r8, r20
      f2:	eb 89       	ldd	r30, Y+19	; 0x13
      f4:	8c 9b       	sbis	0x11, 4	; 17
      f6:	62 ed       	ldi	r22, 0xD2	; 210
      f8:	40 7c       	andi	r20, 0xC0	; 192
      fa:	6f fc       	.word	0xfc6f	; ????
      fc:	ef bc       	out	0x2f, r14	; 47
      fe:	9c 9f       	mul	r25, r28
     100:	40 f2       	brcs	.-112    	; 0x92 <__trampolines_end+0x1c>
     102:	ba a5       	ldd	r27, Y+42	; 0x2a
     104:	6f a5       	ldd	r22, Y+47	; 0x2f
     106:	f4 90       	lpm	r15, Z
     108:	05 5a       	subi	r16, 0xA5	; 165
     10a:	2a f7       	brpl	.-54     	; 0xd6 <__trampolines_end+0x60>
     10c:	5c 93       	st	X, r21
     10e:	6b 6c       	ori	r22, 0xCB	; 203
     110:	f9 67       	ori	r31, 0x79	; 121
     112:	6d c1       	rjmp	.+730    	; 0x3ee <DS18B20_write_bit+0x3a>
     114:	1b fc       	.word	0xfc1b	; ????
     116:	e0 e4       	ldi	r30, 0x40	; 64
     118:	0d 47       	sbci	r16, 0x7D	; 125
     11a:	fe f5       	brtc	.+126    	; 0x19a <.do_clear_bss_loop>
     11c:	20 e6       	ldi	r18, 0x60	; 96
     11e:	b5 00       	.word	0x00b5	; ????
     120:	d0 ed       	ldi	r29, 0xD0	; 208
     122:	90 2e       	mov	r9, r16
     124:	03 00       	.word	0x0003	; ????
     126:	94 35       	cpi	r25, 0x54	; 84
     128:	77 05       	cpc	r23, r7
     12a:	00 80       	ld	r0, Z
     12c:	84 1e       	adc	r8, r20
     12e:	08 00       	.word	0x0008	; ????
     130:	00 20       	and	r0, r0
     132:	4e 0a       	sbc	r4, r30
     134:	00 00       	nop
     136:	00 c8       	rjmp	.-4096   	; 0xfffff138 <__eeprom_end+0xff7ef138>
     138:	0c 33       	cpi	r16, 0x3C	; 60
     13a:	33 33       	cpi	r19, 0x33	; 51
     13c:	33 0f       	add	r19, r19
     13e:	98 6e       	ori	r25, 0xE8	; 232
     140:	12 83       	std	Z+2, r17	; 0x02
     142:	11 41       	sbci	r17, 0x11	; 17
     144:	ef 8d       	ldd	r30, Y+31	; 0x1f
     146:	21 14       	cp	r2, r1
     148:	89 3b       	cpi	r24, 0xB9	; 185
     14a:	e6 55       	subi	r30, 0x56	; 86
     14c:	16 cf       	rjmp	.-468    	; 0xffffff7a <__eeprom_end+0xff7eff7a>
     14e:	fe e6       	ldi	r31, 0x6E	; 110
     150:	db 18       	sub	r13, r11
     152:	d1 84       	ldd	r13, Z+9	; 0x09
     154:	4b 38       	cpi	r20, 0x8B	; 139
     156:	1b f7       	brvc	.-58     	; 0x11e <__trampolines_end+0xa8>
     158:	7c 1d       	adc	r23, r12
     15a:	90 1d       	adc	r25, r0
     15c:	a4 bb       	out	0x14, r26	; 20
     15e:	e4 24       	eor	r14, r4
     160:	20 32       	cpi	r18, 0x20	; 32
     162:	84 72       	andi	r24, 0x24	; 36
     164:	5e 22       	and	r5, r30
     166:	81 00       	.word	0x0081	; ????
     168:	c9 f1       	breq	.+114    	; 0x1dc <format_float+0x2e>
     16a:	24 ec       	ldi	r18, 0xC4	; 196
     16c:	a1 e5       	ldi	r26, 0x51	; 81
     16e:	3d 27       	eor	r19, r29

00000170 <__ctors_end>:
     170:	11 24       	eor	r1, r1
     172:	1f be       	out	0x3f, r1	; 63
     174:	cf ef       	ldi	r28, 0xFF	; 255
     176:	d8 e0       	ldi	r29, 0x08	; 8
     178:	de bf       	out	0x3e, r29	; 62
     17a:	cd bf       	out	0x3d, r28	; 61

0000017c <__do_copy_data>:
     17c:	13 e0       	ldi	r17, 0x03	; 3
     17e:	a0 e0       	ldi	r26, 0x00	; 0
     180:	b1 e0       	ldi	r27, 0x01	; 1
     182:	e4 e9       	ldi	r30, 0x94	; 148
     184:	fc e1       	ldi	r31, 0x1C	; 28
     186:	02 c0       	rjmp	.+4      	; 0x18c <__do_copy_data+0x10>
     188:	05 90       	lpm	r0, Z+
     18a:	0d 92       	st	X+, r0
     18c:	a2 30       	cpi	r26, 0x02	; 2
     18e:	b1 07       	cpc	r27, r17
     190:	d9 f7       	brne	.-10     	; 0x188 <__do_copy_data+0xc>

00000192 <__do_clear_bss>:
     192:	23 e0       	ldi	r18, 0x03	; 3
     194:	a2 e0       	ldi	r26, 0x02	; 2
     196:	b3 e0       	ldi	r27, 0x03	; 3
     198:	01 c0       	rjmp	.+2      	; 0x19c <.do_clear_bss_start>

0000019a <.do_clear_bss_loop>:
     19a:	1d 92       	st	X+, r1

0000019c <.do_clear_bss_start>:
     19c:	aa 31       	cpi	r26, 0x1A	; 26
     19e:	b2 07       	cpc	r27, r18
     1a0:	e1 f7       	brne	.-8      	; 0x19a <.do_clear_bss_loop>
     1a2:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <main>
     1a6:	0c 94 48 0e 	jmp	0x1c90	; 0x1c90 <_exit>

000001aa <__bad_interrupt>:
     1aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ae <format_float>:

uint16_t HCSR04_get_distance(void)
{
    HCSR04_trigger();
    return HCSR04_read();
}
     1ae:	af 92       	push	r10
     1b0:	bf 92       	push	r11
     1b2:	cf 92       	push	r12
     1b4:	df 92       	push	r13
     1b6:	ef 92       	push	r14
     1b8:	ff 92       	push	r15
     1ba:	0f 93       	push	r16
     1bc:	1f 93       	push	r17
     1be:	cf 93       	push	r28
     1c0:	df 93       	push	r29
     1c2:	cd b7       	in	r28, 0x3d	; 61
     1c4:	de b7       	in	r29, 0x3e	; 62
     1c6:	68 97       	sbiw	r28, 0x18	; 24
     1c8:	0f b6       	in	r0, 0x3f	; 63
     1ca:	f8 94       	cli
     1cc:	de bf       	out	0x3e, r29	; 62
     1ce:	0f be       	out	0x3f, r0	; 63
     1d0:	cd bf       	out	0x3d, r28	; 61
     1d2:	d8 2e       	mov	r13, r24
     1d4:	c9 2e       	mov	r12, r25
     1d6:	b6 2e       	mov	r11, r22
     1d8:	a7 2e       	mov	r10, r23
     1da:	ca 01       	movw	r24, r20
     1dc:	b9 01       	movw	r22, r18
     1de:	20 2f       	mov	r18, r16
     1e0:	8e 01       	movw	r16, r28
     1e2:	0f 5f       	subi	r16, 0xFF	; 255
     1e4:	1f 4f       	sbci	r17, 0xFF	; 255
     1e6:	40 e0       	ldi	r20, 0x00	; 0
     1e8:	0e 94 fe 08 	call	0x11fc	; 0x11fc <dtostrf>
     1ec:	e1 14       	cp	r14, r1
     1ee:	f1 04       	cpc	r15, r1
     1f0:	c1 f0       	breq	.+48     	; 0x222 <format_float+0x74>
     1f2:	f7 01       	movw	r30, r14
     1f4:	80 81       	ld	r24, Z
     1f6:	88 23       	and	r24, r24
     1f8:	a1 f0       	breq	.+40     	; 0x222 <format_float+0x74>
     1fa:	ff 92       	push	r15
     1fc:	ef 92       	push	r14
     1fe:	1f 93       	push	r17
     200:	0f 93       	push	r16
     202:	84 e4       	ldi	r24, 0x44	; 68
     204:	91 e0       	ldi	r25, 0x01	; 1
     206:	9f 93       	push	r25
     208:	8f 93       	push	r24
     20a:	af 92       	push	r10
     20c:	bf 92       	push	r11
     20e:	cf 92       	push	r12
     210:	df 92       	push	r13
     212:	0e 94 1e 09 	call	0x123c	; 0x123c <snprintf>
     216:	0f b6       	in	r0, 0x3f	; 63
     218:	f8 94       	cli
     21a:	de bf       	out	0x3e, r29	; 62
     21c:	0f be       	out	0x3f, r0	; 63
     21e:	cd bf       	out	0x3d, r28	; 61
     220:	13 c0       	rjmp	.+38     	; 0x248 <format_float+0x9a>
     222:	ce 01       	movw	r24, r28
     224:	01 96       	adiw	r24, 0x01	; 1
     226:	9f 93       	push	r25
     228:	8f 93       	push	r24
     22a:	87 e4       	ldi	r24, 0x47	; 71
     22c:	91 e0       	ldi	r25, 0x01	; 1
     22e:	9f 93       	push	r25
     230:	8f 93       	push	r24
     232:	af 92       	push	r10
     234:	bf 92       	push	r11
     236:	cf 92       	push	r12
     238:	df 92       	push	r13
     23a:	0e 94 1e 09 	call	0x123c	; 0x123c <snprintf>
     23e:	0f b6       	in	r0, 0x3f	; 63
     240:	f8 94       	cli
     242:	de bf       	out	0x3e, r29	; 62
     244:	0f be       	out	0x3f, r0	; 63
     246:	cd bf       	out	0x3d, r28	; 61
     248:	68 96       	adiw	r28, 0x18	; 24
     24a:	0f b6       	in	r0, 0x3f	; 63
     24c:	f8 94       	cli
     24e:	de bf       	out	0x3e, r29	; 62
     250:	0f be       	out	0x3f, r0	; 63
     252:	cd bf       	out	0x3d, r28	; 61
     254:	df 91       	pop	r29
     256:	cf 91       	pop	r28
     258:	1f 91       	pop	r17
     25a:	0f 91       	pop	r16
     25c:	ff 90       	pop	r15
     25e:	ef 90       	pop	r14
     260:	df 90       	pop	r13
     262:	cf 90       	pop	r12
     264:	bf 90       	pop	r11
     266:	af 90       	pop	r10
     268:	08 95       	ret

0000026a <LCD_1602A_latch>:
     26a:	85 b1       	in	r24, 0x05	; 5
     26c:	81 60       	ori	r24, 0x01	; 1
     26e:	85 b9       	out	0x05, r24	; 5
     270:	85 e0       	ldi	r24, 0x05	; 5
     272:	8a 95       	dec	r24
     274:	f1 f7       	brne	.-4      	; 0x272 <LCD_1602A_latch+0x8>
     276:	00 00       	nop
     278:	85 b1       	in	r24, 0x05	; 5
     27a:	8e 7f       	andi	r24, 0xFE	; 254
     27c:	85 b9       	out	0x05, r24	; 5
     27e:	8f e8       	ldi	r24, 0x8F	; 143
     280:	91 e0       	ldi	r25, 0x01	; 1
     282:	01 97       	sbiw	r24, 0x01	; 1
     284:	f1 f7       	brne	.-4      	; 0x282 <LCD_1602A_latch+0x18>
     286:	00 c0       	rjmp	.+0      	; 0x288 <LCD_1602A_latch+0x1e>
     288:	00 00       	nop
     28a:	08 95       	ret

0000028c <LCD_1602A_send_nibble>:
     28c:	9b b1       	in	r25, 0x0b	; 11
     28e:	9f 70       	andi	r25, 0x0F	; 15
     290:	9b b9       	out	0x0b, r25	; 11
     292:	80 ff       	sbrs	r24, 0
     294:	03 c0       	rjmp	.+6      	; 0x29c <LCD_1602A_send_nibble+0x10>
     296:	9b b1       	in	r25, 0x0b	; 11
     298:	90 61       	ori	r25, 0x10	; 16
     29a:	9b b9       	out	0x0b, r25	; 11
     29c:	81 ff       	sbrs	r24, 1
     29e:	03 c0       	rjmp	.+6      	; 0x2a6 <LCD_1602A_send_nibble+0x1a>
     2a0:	9b b1       	in	r25, 0x0b	; 11
     2a2:	90 62       	ori	r25, 0x20	; 32
     2a4:	9b b9       	out	0x0b, r25	; 11
     2a6:	82 ff       	sbrs	r24, 2
     2a8:	03 c0       	rjmp	.+6      	; 0x2b0 <LCD_1602A_send_nibble+0x24>
     2aa:	9b b1       	in	r25, 0x0b	; 11
     2ac:	90 64       	ori	r25, 0x40	; 64
     2ae:	9b b9       	out	0x0b, r25	; 11
     2b0:	83 ff       	sbrs	r24, 3
     2b2:	03 c0       	rjmp	.+6      	; 0x2ba <LCD_1602A_send_nibble+0x2e>
     2b4:	8b b1       	in	r24, 0x0b	; 11
     2b6:	80 68       	ori	r24, 0x80	; 128
     2b8:	8b b9       	out	0x0b, r24	; 11
     2ba:	0e 94 35 01 	call	0x26a	; 0x26a <LCD_1602A_latch>
     2be:	08 95       	ret

000002c0 <LCD_1602A_load_command>:
     2c0:	cf 93       	push	r28
     2c2:	c8 2f       	mov	r28, r24
     2c4:	85 b1       	in	r24, 0x05	; 5
     2c6:	8d 7f       	andi	r24, 0xFD	; 253
     2c8:	85 b9       	out	0x05, r24	; 5
     2ca:	8c 2f       	mov	r24, r28
     2cc:	82 95       	swap	r24
     2ce:	8f 70       	andi	r24, 0x0F	; 15
     2d0:	0e 94 46 01 	call	0x28c	; 0x28c <LCD_1602A_send_nibble>
     2d4:	8c 2f       	mov	r24, r28
     2d6:	8f 70       	andi	r24, 0x0F	; 15
     2d8:	0e 94 46 01 	call	0x28c	; 0x28c <LCD_1602A_send_nibble>
     2dc:	cf 91       	pop	r28
     2de:	08 95       	ret

000002e0 <LCD_1602A_load_data>:
     2e0:	cf 93       	push	r28
     2e2:	c8 2f       	mov	r28, r24
     2e4:	85 b1       	in	r24, 0x05	; 5
     2e6:	82 60       	ori	r24, 0x02	; 2
     2e8:	85 b9       	out	0x05, r24	; 5
     2ea:	8c 2f       	mov	r24, r28
     2ec:	82 95       	swap	r24
     2ee:	8f 70       	andi	r24, 0x0F	; 15
     2f0:	0e 94 46 01 	call	0x28c	; 0x28c <LCD_1602A_send_nibble>
     2f4:	8c 2f       	mov	r24, r28
     2f6:	8f 70       	andi	r24, 0x0F	; 15
     2f8:	0e 94 46 01 	call	0x28c	; 0x28c <LCD_1602A_send_nibble>
     2fc:	cf 91       	pop	r28
     2fe:	08 95       	ret

00000300 <LCD_1602A_init>:
     300:	84 b1       	in	r24, 0x04	; 4
     302:	83 60       	ori	r24, 0x03	; 3
     304:	84 b9       	out	0x04, r24	; 4
     306:	8a b1       	in	r24, 0x0a	; 10
     308:	80 6f       	ori	r24, 0xF0	; 240
     30a:	8a b9       	out	0x0a, r24	; 10
     30c:	2f ef       	ldi	r18, 0xFF	; 255
     30e:	89 ef       	ldi	r24, 0xF9	; 249
     310:	90 e0       	ldi	r25, 0x00	; 0
     312:	21 50       	subi	r18, 0x01	; 1
     314:	80 40       	sbci	r24, 0x00	; 0
     316:	90 40       	sbci	r25, 0x00	; 0
     318:	e1 f7       	brne	.-8      	; 0x312 <LCD_1602A_init+0x12>
     31a:	00 c0       	rjmp	.+0      	; 0x31c <LCD_1602A_init+0x1c>
     31c:	00 00       	nop
     31e:	83 e0       	ldi	r24, 0x03	; 3
     320:	0e 94 46 01 	call	0x28c	; 0x28c <LCD_1602A_send_nibble>
     324:	8f e1       	ldi	r24, 0x1F	; 31
     326:	9e e4       	ldi	r25, 0x4E	; 78
     328:	01 97       	sbiw	r24, 0x01	; 1
     32a:	f1 f7       	brne	.-4      	; 0x328 <LCD_1602A_init+0x28>
     32c:	00 c0       	rjmp	.+0      	; 0x32e <LCD_1602A_init+0x2e>
     32e:	00 00       	nop
     330:	83 e0       	ldi	r24, 0x03	; 3
     332:	0e 94 46 01 	call	0x28c	; 0x28c <LCD_1602A_send_nibble>
     336:	87 e5       	ldi	r24, 0x57	; 87
     338:	92 e0       	ldi	r25, 0x02	; 2
     33a:	01 97       	sbiw	r24, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <LCD_1602A_init+0x3a>
     33e:	00 c0       	rjmp	.+0      	; 0x340 <LCD_1602A_init+0x40>
     340:	00 00       	nop
     342:	83 e0       	ldi	r24, 0x03	; 3
     344:	0e 94 46 01 	call	0x28c	; 0x28c <LCD_1602A_send_nibble>
     348:	82 e0       	ldi	r24, 0x02	; 2
     34a:	0e 94 46 01 	call	0x28c	; 0x28c <LCD_1602A_send_nibble>
     34e:	88 e2       	ldi	r24, 0x28	; 40
     350:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_1602A_load_command>
     354:	8c e0       	ldi	r24, 0x0C	; 12
     356:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_1602A_load_command>
     35a:	86 e0       	ldi	r24, 0x06	; 6
     35c:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_1602A_load_command>
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_1602A_load_command>
     366:	8f e3       	ldi	r24, 0x3F	; 63
     368:	9f e1       	ldi	r25, 0x1F	; 31
     36a:	01 97       	sbiw	r24, 0x01	; 1
     36c:	f1 f7       	brne	.-4      	; 0x36a <LCD_1602A_init+0x6a>
     36e:	00 c0       	rjmp	.+0      	; 0x370 <LCD_1602A_init+0x70>
     370:	00 00       	nop
     372:	08 95       	ret

00000374 <DS18B20_reset>:
     374:	87 b1       	in	r24, 0x07	; 7
     376:	81 60       	ori	r24, 0x01	; 1
     378:	87 b9       	out	0x07, r24	; 7
     37a:	88 b1       	in	r24, 0x08	; 8
     37c:	8e 7f       	andi	r24, 0xFE	; 254
     37e:	88 b9       	out	0x08, r24	; 8
     380:	8f e7       	ldi	r24, 0x7F	; 127
     382:	97 e0       	ldi	r25, 0x07	; 7
     384:	01 97       	sbiw	r24, 0x01	; 1
     386:	f1 f7       	brne	.-4      	; 0x384 <DS18B20_reset+0x10>
     388:	00 c0       	rjmp	.+0      	; 0x38a <DS18B20_reset+0x16>
     38a:	00 00       	nop
     38c:	87 b1       	in	r24, 0x07	; 7
     38e:	8e 7f       	andi	r24, 0xFE	; 254
     390:	87 b9       	out	0x07, r24	; 7
     392:	ef ee       	ldi	r30, 0xEF	; 239
     394:	f0 e0       	ldi	r31, 0x00	; 0
     396:	31 97       	sbiw	r30, 0x01	; 1
     398:	f1 f7       	brne	.-4      	; 0x396 <DS18B20_reset+0x22>
     39a:	00 c0       	rjmp	.+0      	; 0x39c <DS18B20_reset+0x28>
     39c:	00 00       	nop
     39e:	96 b1       	in	r25, 0x06	; 6
     3a0:	81 e0       	ldi	r24, 0x01	; 1
     3a2:	89 27       	eor	r24, r25
     3a4:	81 70       	andi	r24, 0x01	; 1
     3a6:	ef e8       	ldi	r30, 0x8F	; 143
     3a8:	f6 e0       	ldi	r31, 0x06	; 6
     3aa:	31 97       	sbiw	r30, 0x01	; 1
     3ac:	f1 f7       	brne	.-4      	; 0x3aa <DS18B20_reset+0x36>
     3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <DS18B20_reset+0x3c>
     3b0:	00 00       	nop
     3b2:	08 95       	ret

000003b4 <DS18B20_write_bit>:
     3b4:	97 b1       	in	r25, 0x07	; 7
     3b6:	91 60       	ori	r25, 0x01	; 1
     3b8:	97 b9       	out	0x07, r25	; 7
     3ba:	98 b1       	in	r25, 0x08	; 8
     3bc:	9e 7f       	andi	r25, 0xFE	; 254
     3be:	98 b9       	out	0x08, r25	; 8
     3c0:	88 23       	and	r24, r24
     3c2:	71 f0       	breq	.+28     	; 0x3e0 <DS18B20_write_bit+0x2c>
     3c4:	85 e0       	ldi	r24, 0x05	; 5
     3c6:	8a 95       	dec	r24
     3c8:	f1 f7       	brne	.-4      	; 0x3c6 <DS18B20_write_bit+0x12>
     3ca:	00 00       	nop
     3cc:	87 b1       	in	r24, 0x07	; 7
     3ce:	8e 7f       	andi	r24, 0xFE	; 254
     3d0:	87 b9       	out	0x07, r24	; 7
     3d2:	8f ee       	ldi	r24, 0xEF	; 239
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	01 97       	sbiw	r24, 0x01	; 1
     3d8:	f1 f7       	brne	.-4      	; 0x3d6 <DS18B20_write_bit+0x22>
     3da:	00 c0       	rjmp	.+0      	; 0x3dc <DS18B20_write_bit+0x28>
     3dc:	00 00       	nop
     3de:	08 95       	ret
     3e0:	8f ee       	ldi	r24, 0xEF	; 239
     3e2:	90 e0       	ldi	r25, 0x00	; 0
     3e4:	01 97       	sbiw	r24, 0x01	; 1
     3e6:	f1 f7       	brne	.-4      	; 0x3e4 <DS18B20_write_bit+0x30>
     3e8:	00 c0       	rjmp	.+0      	; 0x3ea <DS18B20_write_bit+0x36>
     3ea:	00 00       	nop
     3ec:	87 b1       	in	r24, 0x07	; 7
     3ee:	8e 7f       	andi	r24, 0xFE	; 254
     3f0:	87 b9       	out	0x07, r24	; 7
     3f2:	08 95       	ret

000003f4 <DS18B20_write_byte>:
     3f4:	cf 93       	push	r28
     3f6:	df 93       	push	r29
     3f8:	d8 2f       	mov	r29, r24
     3fa:	c0 e0       	ldi	r28, 0x00	; 0
     3fc:	06 c0       	rjmp	.+12     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
     3fe:	8d 2f       	mov	r24, r29
     400:	81 70       	andi	r24, 0x01	; 1
     402:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DS18B20_write_bit>
     406:	d6 95       	lsr	r29
     408:	cf 5f       	subi	r28, 0xFF	; 255
     40a:	c8 30       	cpi	r28, 0x08	; 8
     40c:	c0 f3       	brcs	.-16     	; 0x3fe <DS18B20_write_byte+0xa>
     40e:	df 91       	pop	r29
     410:	cf 91       	pop	r28
     412:	08 95       	ret

00000414 <DS18B20_read_bit>:
     414:	87 b1       	in	r24, 0x07	; 7
     416:	81 60       	ori	r24, 0x01	; 1
     418:	87 b9       	out	0x07, r24	; 7
     41a:	88 b1       	in	r24, 0x08	; 8
     41c:	8e 7f       	andi	r24, 0xFE	; 254
     41e:	88 b9       	out	0x08, r24	; 8
     420:	8a e0       	ldi	r24, 0x0A	; 10
     422:	8a 95       	dec	r24
     424:	f1 f7       	brne	.-4      	; 0x422 <DS18B20_read_bit+0xe>
     426:	00 c0       	rjmp	.+0      	; 0x428 <DS18B20_read_bit+0x14>
     428:	87 b1       	in	r24, 0x07	; 7
     42a:	8e 7f       	andi	r24, 0xFE	; 254
     42c:	87 b9       	out	0x07, r24	; 7
     42e:	e5 e3       	ldi	r30, 0x35	; 53
     430:	ea 95       	dec	r30
     432:	f1 f7       	brne	.-4      	; 0x430 <DS18B20_read_bit+0x1c>
     434:	00 00       	nop
     436:	86 b1       	in	r24, 0x06	; 6
     438:	81 70       	andi	r24, 0x01	; 1
     43a:	e7 ec       	ldi	r30, 0xC7	; 199
     43c:	f0 e0       	ldi	r31, 0x00	; 0
     43e:	31 97       	sbiw	r30, 0x01	; 1
     440:	f1 f7       	brne	.-4      	; 0x43e <DS18B20_read_bit+0x2a>
     442:	00 c0       	rjmp	.+0      	; 0x444 <DS18B20_read_bit+0x30>
     444:	00 00       	nop
     446:	08 95       	ret

00000448 <DS18B20_read_byte>:
     448:	cf 93       	push	r28
     44a:	df 93       	push	r29
     44c:	c0 e0       	ldi	r28, 0x00	; 0
     44e:	d0 e0       	ldi	r29, 0x00	; 0
     450:	06 c0       	rjmp	.+12     	; 0x45e <DS18B20_read_byte+0x16>
     452:	d6 95       	lsr	r29
     454:	0e 94 0a 02 	call	0x414	; 0x414 <DS18B20_read_bit>
     458:	81 11       	cpse	r24, r1
     45a:	d0 68       	ori	r29, 0x80	; 128
     45c:	cf 5f       	subi	r28, 0xFF	; 255
     45e:	c8 30       	cpi	r28, 0x08	; 8
     460:	c0 f3       	brcs	.-16     	; 0x452 <DS18B20_read_byte+0xa>
     462:	8d 2f       	mov	r24, r29
     464:	df 91       	pop	r29
     466:	cf 91       	pop	r28
     468:	08 95       	ret

0000046a <DS18B20_read_temperature>:
     46a:	cf 93       	push	r28
     46c:	0e 94 ba 01 	call	0x374	; 0x374 <DS18B20_reset>
     470:	8c ec       	ldi	r24, 0xCC	; 204
     472:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <DS18B20_write_byte>
     476:	84 e4       	ldi	r24, 0x44	; 68
     478:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <DS18B20_write_byte>
     47c:	2f ef       	ldi	r18, 0xFF	; 255
     47e:	8e e9       	ldi	r24, 0x9E	; 158
     480:	94 e2       	ldi	r25, 0x24	; 36
     482:	21 50       	subi	r18, 0x01	; 1
     484:	80 40       	sbci	r24, 0x00	; 0
     486:	90 40       	sbci	r25, 0x00	; 0
     488:	e1 f7       	brne	.-8      	; 0x482 <DS18B20_read_temperature+0x18>
     48a:	00 c0       	rjmp	.+0      	; 0x48c <DS18B20_read_temperature+0x22>
     48c:	00 00       	nop
     48e:	0e 94 ba 01 	call	0x374	; 0x374 <DS18B20_reset>
     492:	8c ec       	ldi	r24, 0xCC	; 204
     494:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <DS18B20_write_byte>
     498:	8e eb       	ldi	r24, 0xBE	; 190
     49a:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <DS18B20_write_byte>
     49e:	0e 94 24 02 	call	0x448	; 0x448 <DS18B20_read_byte>
     4a2:	c8 2f       	mov	r28, r24
     4a4:	0e 94 24 02 	call	0x448	; 0x448 <DS18B20_read_byte>
     4a8:	68 2f       	mov	r22, r24
     4aa:	70 e0       	ldi	r23, 0x00	; 0
     4ac:	76 2f       	mov	r23, r22
     4ae:	66 27       	eor	r22, r22
     4b0:	6c 2b       	or	r22, r28
     4b2:	07 2e       	mov	r0, r23
     4b4:	00 0c       	add	r0, r0
     4b6:	88 0b       	sbc	r24, r24
     4b8:	99 0b       	sbc	r25, r25
     4ba:	0e 94 ff 07 	call	0xffe	; 0xffe <__floatsisf>
     4be:	20 e0       	ldi	r18, 0x00	; 0
     4c0:	30 e0       	ldi	r19, 0x00	; 0
     4c2:	40 e8       	ldi	r20, 0x80	; 128
     4c4:	5d e3       	ldi	r21, 0x3D	; 61
     4c6:	0e 94 8b 08 	call	0x1116	; 0x1116 <__mulsf3>
     4ca:	cf 91       	pop	r28
     4cc:	08 95       	ret

000004ce <HCSR04_init>:
     4ce:	8a b1       	in	r24, 0x0a	; 10
     4d0:	84 60       	ori	r24, 0x04	; 4
     4d2:	8a b9       	out	0x0a, r24	; 10
     4d4:	8a b1       	in	r24, 0x0a	; 10
     4d6:	87 7f       	andi	r24, 0xF7	; 247
     4d8:	8a b9       	out	0x0a, r24	; 10
     4da:	08 95       	ret

000004dc <KEYPAD_init>:


// keypad -1x4 matrix firmware functions
void KEYPAD_init()
{
    KEYPAD_DDR &= ~((1 << KEYPAD_KEY_1) | (1 << KEYPAD_KEY_2) | (1 << KEYPAD_KEY_3) | (1 << KEYPAD_KEY_4));
     4dc:	84 b1       	in	r24, 0x04	; 4
     4de:	83 7c       	andi	r24, 0xC3	; 195
     4e0:	84 b9       	out	0x04, r24	; 4
    KEYPAD_PORT |= (1 << KEYPAD_KEY_1) | (1 << KEYPAD_KEY_2) | (1 << KEYPAD_KEY_3) | (1 << KEYPAD_KEY_4);
     4e2:	85 b1       	in	r24, 0x05	; 5
     4e4:	8c 63       	ori	r24, 0x3C	; 60
     4e6:	85 b9       	out	0x05, r24	; 5
     4e8:	08 95       	ret

000004ea <KEYPAD_read>:
}

uint8_t KEYPAD_read(void)
{
    if (!(KEYPAD_PIN & (1 << KEYPAD_KEY_1))) return 1;
     4ea:	1a 9b       	sbis	0x03, 2	; 3
     4ec:	08 c0       	rjmp	.+16     	; 0x4fe <KEYPAD_read+0x14>
    if (!(KEYPAD_PIN & (1 << KEYPAD_KEY_2))) return 2;
     4ee:	1b 9b       	sbis	0x03, 3	; 3
     4f0:	08 c0       	rjmp	.+16     	; 0x502 <KEYPAD_read+0x18>
    if (!(KEYPAD_PIN & (1 << KEYPAD_KEY_3))) return 3;
     4f2:	1c 9b       	sbis	0x03, 4	; 3
     4f4:	08 c0       	rjmp	.+16     	; 0x506 <KEYPAD_read+0x1c>
    if (!(KEYPAD_PIN & (1 << KEYPAD_KEY_4))) return 4;
     4f6:	1d 99       	sbic	0x03, 5	; 3
     4f8:	08 c0       	rjmp	.+16     	; 0x50a <KEYPAD_read+0x20>
     4fa:	84 e0       	ldi	r24, 0x04	; 4
     4fc:	08 95       	ret
    KEYPAD_PORT |= (1 << KEYPAD_KEY_1) | (1 << KEYPAD_KEY_2) | (1 << KEYPAD_KEY_3) | (1 << KEYPAD_KEY_4);
}

uint8_t KEYPAD_read(void)
{
    if (!(KEYPAD_PIN & (1 << KEYPAD_KEY_1))) return 1;
     4fe:	81 e0       	ldi	r24, 0x01	; 1
     500:	08 95       	ret
    if (!(KEYPAD_PIN & (1 << KEYPAD_KEY_2))) return 2;
     502:	82 e0       	ldi	r24, 0x02	; 2
     504:	08 95       	ret
    if (!(KEYPAD_PIN & (1 << KEYPAD_KEY_3))) return 3;
     506:	83 e0       	ldi	r24, 0x03	; 3
     508:	08 95       	ret
    if (!(KEYPAD_PIN & (1 << KEYPAD_KEY_4))) return 4;
    return KEYPAD_NO_KEY;
     50a:	85 e0       	ldi	r24, 0x05	; 5
}
     50c:	08 95       	ret

0000050e <display_set>:
        snprintf(dest, dest_size, "%s", num);
    }
}

void display_set(const unsigned char *title, const unsigned char *data)
{
     50e:	0f 93       	push	r16
     510:	1f 93       	push	r17
     512:	cf 93       	push	r28
     514:	df 93       	push	r29
     516:	cd b7       	in	r28, 0x3d	; 61
     518:	de b7       	in	r29, 0x3e	; 62
     51a:	a0 97       	sbiw	r28, 0x20	; 32
     51c:	0f b6       	in	r0, 0x3f	; 63
     51e:	f8 94       	cli
     520:	de bf       	out	0x3e, r29	; 62
     522:	0f be       	out	0x3f, r0	; 63
     524:	cd bf       	out	0x3d, r28	; 61
     526:	db 01       	movw	r26, r22
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     528:	ef e3       	ldi	r30, 0x3F	; 63
     52a:	ff e1       	ldi	r31, 0x1F	; 31
     52c:	31 97       	sbiw	r30, 0x01	; 1
     52e:	f1 f7       	brne	.-4      	; 0x52c <display_set+0x1e>
     530:	00 c0       	rjmp	.+0      	; 0x532 <display_set+0x24>
     532:	00 00       	nop

    unsigned char line1[16];
    unsigned char line2[16];

    // prepare line1: copy up to 12 chars from title, pad with spaces
    int i = 0;
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	30 e0       	ldi	r19, 0x00	; 0
    for (; i < 12 && *title; ++i)
     538:	0a c0       	rjmp	.+20     	; 0x54e <display_set+0x40>
        line1[i] = *title++;
     53a:	01 96       	adiw	r24, 0x01	; 1
     53c:	e1 e0       	ldi	r30, 0x01	; 1
     53e:	f0 e0       	ldi	r31, 0x00	; 0
     540:	ec 0f       	add	r30, r28
     542:	fd 1f       	adc	r31, r29
     544:	e2 0f       	add	r30, r18
     546:	f3 1f       	adc	r31, r19
     548:	40 83       	st	Z, r20
    unsigned char line1[16];
    unsigned char line2[16];

    // prepare line1: copy up to 12 chars from title, pad with spaces
    int i = 0;
    for (; i < 12 && *title; ++i)
     54a:	2f 5f       	subi	r18, 0xFF	; 255
     54c:	3f 4f       	sbci	r19, 0xFF	; 255
     54e:	2c 30       	cpi	r18, 0x0C	; 12
     550:	31 05       	cpc	r19, r1
     552:	7c f4       	brge	.+30     	; 0x572 <display_set+0x64>
     554:	fc 01       	movw	r30, r24
     556:	40 81       	ld	r20, Z
     558:	41 11       	cpse	r20, r1
     55a:	ef cf       	rjmp	.-34     	; 0x53a <display_set+0x2c>
     55c:	0a c0       	rjmp	.+20     	; 0x572 <display_set+0x64>
        line1[i] = *title++;
    for (; i < 12; ++i)
        line1[i] = ' ';
     55e:	e1 e0       	ldi	r30, 0x01	; 1
     560:	f0 e0       	ldi	r31, 0x00	; 0
     562:	ec 0f       	add	r30, r28
     564:	fd 1f       	adc	r31, r29
     566:	e2 0f       	add	r30, r18
     568:	f3 1f       	adc	r31, r19
     56a:	80 e2       	ldi	r24, 0x20	; 32
     56c:	80 83       	st	Z, r24

    // prepare line1: copy up to 12 chars from title, pad with spaces
    int i = 0;
    for (; i < 12 && *title; ++i)
        line1[i] = *title++;
    for (; i < 12; ++i)
     56e:	2f 5f       	subi	r18, 0xFF	; 255
     570:	3f 4f       	sbci	r19, 0xFF	; 255
     572:	2c 30       	cpi	r18, 0x0C	; 12
     574:	31 05       	cpc	r19, r1
     576:	9c f3       	brlt	.-26     	; 0x55e <display_set+0x50>
        line1[i] = ' ';

    // add control commands at the end of line1
    line1[12] = 0x7F;
     578:	8f e7       	ldi	r24, 0x7F	; 127
     57a:	8d 87       	std	Y+13, r24	; 0x0d
    line1[13] = '-';
     57c:	8d e2       	ldi	r24, 0x2D	; 45
     57e:	8e 87       	std	Y+14, r24	; 0x0e
    line1[14] = '+';
     580:	8b e2       	ldi	r24, 0x2B	; 43
     582:	8f 87       	std	Y+15, r24	; 0x0f
    line1[15] = 0x7E;
     584:	8e e7       	ldi	r24, 0x7E	; 126
     586:	88 8b       	std	Y+16, r24	; 0x10

    // prepare line2: copy up to 16 chars from data, pad with spaces
    i = 0;
     588:	80 e0       	ldi	r24, 0x00	; 0
     58a:	90 e0       	ldi	r25, 0x00	; 0
    for (; i < 16 && *data; ++i)
     58c:	09 c0       	rjmp	.+18     	; 0x5a0 <display_set+0x92>
        line2[i] = *data++;
     58e:	11 96       	adiw	r26, 0x01	; 1
     590:	e1 e1       	ldi	r30, 0x11	; 17
     592:	f0 e0       	ldi	r31, 0x00	; 0
     594:	ec 0f       	add	r30, r28
     596:	fd 1f       	adc	r31, r29
     598:	e8 0f       	add	r30, r24
     59a:	f9 1f       	adc	r31, r25
     59c:	20 83       	st	Z, r18
    line1[14] = '+';
    line1[15] = 0x7E;

    // prepare line2: copy up to 16 chars from data, pad with spaces
    i = 0;
    for (; i < 16 && *data; ++i)
     59e:	01 96       	adiw	r24, 0x01	; 1
     5a0:	80 31       	cpi	r24, 0x10	; 16
     5a2:	91 05       	cpc	r25, r1
     5a4:	6c f4       	brge	.+26     	; 0x5c0 <display_set+0xb2>
     5a6:	2c 91       	ld	r18, X
     5a8:	21 11       	cpse	r18, r1
     5aa:	f1 cf       	rjmp	.-30     	; 0x58e <display_set+0x80>
     5ac:	09 c0       	rjmp	.+18     	; 0x5c0 <display_set+0xb2>
        line2[i] = *data++;
    for (; i < 16; ++i)
        line2[i] = ' ';
     5ae:	e1 e1       	ldi	r30, 0x11	; 17
     5b0:	f0 e0       	ldi	r31, 0x00	; 0
     5b2:	ec 0f       	add	r30, r28
     5b4:	fd 1f       	adc	r31, r29
     5b6:	e8 0f       	add	r30, r24
     5b8:	f9 1f       	adc	r31, r25
     5ba:	20 e2       	ldi	r18, 0x20	; 32
     5bc:	20 83       	st	Z, r18

    // prepare line2: copy up to 16 chars from data, pad with spaces
    i = 0;
    for (; i < 16 && *data; ++i)
        line2[i] = *data++;
    for (; i < 16; ++i)
     5be:	01 96       	adiw	r24, 0x01	; 1
     5c0:	80 31       	cpi	r24, 0x10	; 16
     5c2:	91 05       	cpc	r25, r1
     5c4:	a4 f3       	brlt	.-24     	; 0x5ae <display_set+0xa0>
        line2[i] = ' ';

    // reset cursor to first line and write 16 chars
    LCD_1602A_load_command(DISPLAY_SET_CURSOR_LINE_1);
     5c6:	80 e8       	ldi	r24, 0x80	; 128
     5c8:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_1602A_load_command>
    for (i = 0; i < 16; ++i)
     5cc:	00 e0       	ldi	r16, 0x00	; 0
     5ce:	10 e0       	ldi	r17, 0x00	; 0
     5d0:	0b c0       	rjmp	.+22     	; 0x5e8 <display_set+0xda>
    {
        LCD_1602A_load_data(line1[i]);
     5d2:	e1 e0       	ldi	r30, 0x01	; 1
     5d4:	f0 e0       	ldi	r31, 0x00	; 0
     5d6:	ec 0f       	add	r30, r28
     5d8:	fd 1f       	adc	r31, r29
     5da:	e0 0f       	add	r30, r16
     5dc:	f1 1f       	adc	r31, r17
     5de:	80 81       	ld	r24, Z
     5e0:	0e 94 70 01 	call	0x2e0	; 0x2e0 <LCD_1602A_load_data>
    for (; i < 16; ++i)
        line2[i] = ' ';

    // reset cursor to first line and write 16 chars
    LCD_1602A_load_command(DISPLAY_SET_CURSOR_LINE_1);
    for (i = 0; i < 16; ++i)
     5e4:	0f 5f       	subi	r16, 0xFF	; 255
     5e6:	1f 4f       	sbci	r17, 0xFF	; 255
     5e8:	00 31       	cpi	r16, 0x10	; 16
     5ea:	11 05       	cpc	r17, r1
     5ec:	94 f3       	brlt	.-28     	; 0x5d2 <display_set+0xc4>
    {
        LCD_1602A_load_data(line1[i]);
    }

    // reset cursor to second line and write 16 chars
    LCD_1602A_load_command(DISPLAY_SET_CURSOR_LINE_2);
     5ee:	80 ec       	ldi	r24, 0xC0	; 192
     5f0:	0e 94 60 01 	call	0x2c0	; 0x2c0 <LCD_1602A_load_command>
    for (i = 0; i < 16; ++i)
     5f4:	00 e0       	ldi	r16, 0x00	; 0
     5f6:	10 e0       	ldi	r17, 0x00	; 0
     5f8:	0b c0       	rjmp	.+22     	; 0x610 <display_set+0x102>
    {
        LCD_1602A_load_data(line2[i]);
     5fa:	e1 e1       	ldi	r30, 0x11	; 17
     5fc:	f0 e0       	ldi	r31, 0x00	; 0
     5fe:	ec 0f       	add	r30, r28
     600:	fd 1f       	adc	r31, r29
     602:	e0 0f       	add	r30, r16
     604:	f1 1f       	adc	r31, r17
     606:	80 81       	ld	r24, Z
     608:	0e 94 70 01 	call	0x2e0	; 0x2e0 <LCD_1602A_load_data>
        LCD_1602A_load_data(line1[i]);
    }

    // reset cursor to second line and write 16 chars
    LCD_1602A_load_command(DISPLAY_SET_CURSOR_LINE_2);
    for (i = 0; i < 16; ++i)
     60c:	0f 5f       	subi	r16, 0xFF	; 255
     60e:	1f 4f       	sbci	r17, 0xFF	; 255
     610:	00 31       	cpi	r16, 0x10	; 16
     612:	11 05       	cpc	r17, r1
     614:	94 f3       	brlt	.-28     	; 0x5fa <display_set+0xec>
    {
        LCD_1602A_load_data(line2[i]);
    }
}
     616:	a0 96       	adiw	r28, 0x20	; 32
     618:	0f b6       	in	r0, 0x3f	; 63
     61a:	f8 94       	cli
     61c:	de bf       	out	0x3e, r29	; 62
     61e:	0f be       	out	0x3f, r0	; 63
     620:	cd bf       	out	0x3d, r28	; 61
     622:	df 91       	pop	r29
     624:	cf 91       	pop	r28
     626:	1f 91       	pop	r17
     628:	0f 91       	pop	r16
     62a:	08 95       	ret

0000062c <get_tank_capacity>:

// user application
float get_tank_capacity()
{
    return 75.5;
}
     62c:	60 e0       	ldi	r22, 0x00	; 0
     62e:	70 e0       	ldi	r23, 0x00	; 0
     630:	87 e9       	ldi	r24, 0x97	; 151
     632:	92 e4       	ldi	r25, 0x42	; 66
     634:	08 95       	ret

00000636 <get_refill_rate>:
     636:	2f ef       	ldi	r18, 0xFF	; 255
     638:	87 ea       	ldi	r24, 0xA7	; 167
     63a:	91 e6       	ldi	r25, 0x61	; 97
     63c:	21 50       	subi	r18, 0x01	; 1
     63e:	80 40       	sbci	r24, 0x00	; 0
     640:	90 40       	sbci	r25, 0x00	; 0
     642:	e1 f7       	brne	.-8      	; 0x63c <get_refill_rate+0x6>
     644:	00 c0       	rjmp	.+0      	; 0x646 <get_refill_rate+0x10>
     646:	00 00       	nop

float get_refill_rate()
{
    _delay_ms(2000);
    return 4.0;
}
     648:	60 e0       	ldi	r22, 0x00	; 0
     64a:	70 e0       	ldi	r23, 0x00	; 0
     64c:	80 e8       	ldi	r24, 0x80	; 128
     64e:	90 e4       	ldi	r25, 0x40	; 64
     650:	08 95       	ret

00000652 <get_leak_rate>:

float get_leak_rate()
{
    return 1.5;
}
     652:	60 e0       	ldi	r22, 0x00	; 0
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	80 ec       	ldi	r24, 0xC0	; 192
     658:	9f e3       	ldi	r25, 0x3F	; 63
     65a:	08 95       	ret

0000065c <get_soil_temperature>:

float get_soil_temperature()
{
    return DS18B20_read_temperature();
     65c:	0e 94 35 02 	call	0x46a	; 0x46a <DS18B20_read_temperature>
}
     660:	08 95       	ret

00000662 <ui_show_display>:

// user interface functions
void ui_show_display()
{
     662:	ef 92       	push	r14
     664:	ff 92       	push	r15
     666:	0f 93       	push	r16
    if (active_menu_index == -1)
     668:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <active_menu_index>
     66c:	f0 91 1f 01 	lds	r31, 0x011F	; 0x80011f <active_menu_index+0x1>
     670:	ef 3f       	cpi	r30, 0xFF	; 255
     672:	2f ef       	ldi	r18, 0xFF	; 255
     674:	f2 07       	cpc	r31, r18
     676:	79 f4       	brne	.+30     	; 0x696 <ui_show_display+0x34>
    {
        display_set("MAIN MENU", MENU_BUFFER[menu_hover_index]);
     678:	e0 91 08 03 	lds	r30, 0x0308	; 0x800308 <menu_hover_index>
     67c:	f0 91 09 03 	lds	r31, 0x0309	; 0x800309 <menu_hover_index+0x1>
     680:	ee 0f       	add	r30, r30
     682:	ff 1f       	adc	r31, r31
     684:	ea 5c       	subi	r30, 0xCA	; 202
     686:	fe 4f       	sbci	r31, 0xFE	; 254
     688:	60 81       	ld	r22, Z
     68a:	71 81       	ldd	r23, Z+1	; 0x01
     68c:	8b e5       	ldi	r24, 0x5B	; 91
     68e:	91 e0       	ldi	r25, 0x01	; 1
     690:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
     694:	aa c1       	rjmp	.+852    	; 0x9ea <__stack+0xeb>
    }
    else
    {
        switch (active_menu_index)
     696:	e7 30       	cpi	r30, 0x07	; 7
     698:	f1 05       	cpc	r31, r1
     69a:	08 f0       	brcs	.+2      	; 0x69e <ui_show_display+0x3c>
     69c:	a0 c1       	rjmp	.+832    	; 0x9de <__stack+0xdf>
     69e:	ec 5c       	subi	r30, 0xCC	; 204
     6a0:	ff 4f       	sbci	r31, 0xFF	; 255
     6a2:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__tablejump2__>
        {
        case 0:
            format_float(buffer, sizeof(buffer), get_tank_capacity(), 1, "Ltrs");
     6a6:	0e 94 16 03 	call	0x62c	; 0x62c <get_tank_capacity>
     6aa:	9b 01       	movw	r18, r22
     6ac:	ac 01       	movw	r20, r24
     6ae:	0f 2e       	mov	r0, r31
     6b0:	f5 e6       	ldi	r31, 0x65	; 101
     6b2:	ef 2e       	mov	r14, r31
     6b4:	f1 e0       	ldi	r31, 0x01	; 1
     6b6:	ff 2e       	mov	r15, r31
     6b8:	f0 2d       	mov	r31, r0
     6ba:	01 e0       	ldi	r16, 0x01	; 1
     6bc:	60 e1       	ldi	r22, 0x10	; 16
     6be:	70 e0       	ldi	r23, 0x00	; 0
     6c0:	8a e0       	ldi	r24, 0x0A	; 10
     6c2:	93 e0       	ldi	r25, 0x03	; 3
     6c4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
            display_set("TANK CAPACITY", buffer);
     6c8:	6a e0       	ldi	r22, 0x0A	; 10
     6ca:	73 e0       	ldi	r23, 0x03	; 3
     6cc:	8a e6       	ldi	r24, 0x6A	; 106
     6ce:	91 e0       	ldi	r25, 0x01	; 1
     6d0:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
            break;
     6d4:	8a c1       	rjmp	.+788    	; 0x9ea <__stack+0xeb>
        case 1:
            format_float(buffer, sizeof(buffer), get_refill_rate(), 1, "Ltrs per min");
     6d6:	0e 94 1b 03 	call	0x636	; 0x636 <get_refill_rate>
     6da:	9b 01       	movw	r18, r22
     6dc:	ac 01       	movw	r20, r24
     6de:	0f 2e       	mov	r0, r31
     6e0:	f8 e7       	ldi	r31, 0x78	; 120
     6e2:	ef 2e       	mov	r14, r31
     6e4:	f1 e0       	ldi	r31, 0x01	; 1
     6e6:	ff 2e       	mov	r15, r31
     6e8:	f0 2d       	mov	r31, r0
     6ea:	01 e0       	ldi	r16, 0x01	; 1
     6ec:	60 e1       	ldi	r22, 0x10	; 16
     6ee:	70 e0       	ldi	r23, 0x00	; 0
     6f0:	8a e0       	ldi	r24, 0x0A	; 10
     6f2:	93 e0       	ldi	r25, 0x03	; 3
     6f4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
            display_set("REFILL RATE", buffer);
     6f8:	6a e0       	ldi	r22, 0x0A	; 10
     6fa:	73 e0       	ldi	r23, 0x03	; 3
     6fc:	85 e8       	ldi	r24, 0x85	; 133
     6fe:	91 e0       	ldi	r25, 0x01	; 1
     700:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
            break;
     704:	72 c1       	rjmp	.+740    	; 0x9ea <__stack+0xeb>
        case 2:
            format_float(buffer, sizeof(buffer), get_leak_rate(), 1, "Ltrs per min");
     706:	0e 94 29 03 	call	0x652	; 0x652 <get_leak_rate>
     70a:	9b 01       	movw	r18, r22
     70c:	ac 01       	movw	r20, r24
     70e:	0f 2e       	mov	r0, r31
     710:	f8 e7       	ldi	r31, 0x78	; 120
     712:	ef 2e       	mov	r14, r31
     714:	f1 e0       	ldi	r31, 0x01	; 1
     716:	ff 2e       	mov	r15, r31
     718:	f0 2d       	mov	r31, r0
     71a:	01 e0       	ldi	r16, 0x01	; 1
     71c:	60 e1       	ldi	r22, 0x10	; 16
     71e:	70 e0       	ldi	r23, 0x00	; 0
     720:	8a e0       	ldi	r24, 0x0A	; 10
     722:	93 e0       	ldi	r25, 0x03	; 3
     724:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
            display_set("LEAKAGE RATE", buffer);
     728:	6a e0       	ldi	r22, 0x0A	; 10
     72a:	73 e0       	ldi	r23, 0x03	; 3
     72c:	81 e9       	ldi	r24, 0x91	; 145
     72e:	91 e0       	ldi	r25, 0x01	; 1
     730:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
            break;
     734:	5a c1       	rjmp	.+692    	; 0x9ea <__stack+0xeb>
        case 3:
            format_float(buffer, sizeof(buffer), get_soil_temperature(), 1, "degrees");
     736:	0e 94 2e 03 	call	0x65c	; 0x65c <get_soil_temperature>
     73a:	9b 01       	movw	r18, r22
     73c:	ac 01       	movw	r20, r24
     73e:	0f 2e       	mov	r0, r31
     740:	fe e9       	ldi	r31, 0x9E	; 158
     742:	ef 2e       	mov	r14, r31
     744:	f1 e0       	ldi	r31, 0x01	; 1
     746:	ff 2e       	mov	r15, r31
     748:	f0 2d       	mov	r31, r0
     74a:	01 e0       	ldi	r16, 0x01	; 1
     74c:	60 e1       	ldi	r22, 0x10	; 16
     74e:	70 e0       	ldi	r23, 0x00	; 0
     750:	8a e0       	ldi	r24, 0x0A	; 10
     752:	93 e0       	ldi	r25, 0x03	; 3
     754:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
            display_set("SOIL TEMPERATURE", buffer);
     758:	6a e0       	ldi	r22, 0x0A	; 10
     75a:	73 e0       	ldi	r23, 0x03	; 3
     75c:	86 ea       	ldi	r24, 0xA6	; 166
     75e:	91 e0       	ldi	r25, 0x01	; 1
     760:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
            break;
     764:	42 c1       	rjmp	.+644    	; 0x9ea <__stack+0xeb>
        case 4:
            if (active_trigger_index == -1)
     766:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <active_trigger_index>
     76a:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <active_trigger_index+0x1>
     76e:	8f 3f       	cpi	r24, 0xFF	; 255
     770:	2f ef       	ldi	r18, 0xFF	; 255
     772:	92 07       	cpc	r25, r18
     774:	79 f4       	brne	.+30     	; 0x794 <ui_show_display+0x132>
            {
                display_set("TRIGGERS", TRIGGERS_BUFFER[trigger_hover_index]);
     776:	e0 91 06 03 	lds	r30, 0x0306	; 0x800306 <trigger_hover_index>
     77a:	f0 91 07 03 	lds	r31, 0x0307	; 0x800307 <trigger_hover_index+0x1>
     77e:	ee 0f       	add	r30, r30
     780:	ff 1f       	adc	r31, r31
     782:	ee 5c       	subi	r30, 0xCE	; 206
     784:	fe 4f       	sbci	r31, 0xFE	; 254
     786:	60 81       	ld	r22, Z
     788:	71 81       	ldd	r23, Z+1	; 0x01
     78a:	83 e2       	ldi	r24, 0x23	; 35
     78c:	92 e0       	ldi	r25, 0x02	; 2
     78e:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
     792:	2b c1       	rjmp	.+598    	; 0x9ea <__stack+0xeb>
            }
            else
            {
                switch (active_trigger_index)
     794:	00 97       	sbiw	r24, 0x00	; 0
     796:	19 f0       	breq	.+6      	; 0x79e <ui_show_display+0x13c>
     798:	01 97       	sbiw	r24, 0x01	; 1
     79a:	e9 f0       	breq	.+58     	; 0x7d6 <ui_show_display+0x174>
     79c:	38 c0       	rjmp	.+112    	; 0x80e <__DATA_REGION_LENGTH__+0xe>
                {
                case 0:
                    format_float(buffer, sizeof(buffer), MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER, 1, "Ltrs");
     79e:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER>
     7a2:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x1>
     7a6:	40 91 18 01 	lds	r20, 0x0118	; 0x800118 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x2>
     7aa:	50 91 19 01 	lds	r21, 0x0119	; 0x800119 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x3>
     7ae:	0f 2e       	mov	r0, r31
     7b0:	f5 e6       	ldi	r31, 0x65	; 101
     7b2:	ef 2e       	mov	r14, r31
     7b4:	f1 e0       	ldi	r31, 0x01	; 1
     7b6:	ff 2e       	mov	r15, r31
     7b8:	f0 2d       	mov	r31, r0
     7ba:	01 e0       	ldi	r16, 0x01	; 1
     7bc:	60 e1       	ldi	r22, 0x10	; 16
     7be:	70 e0       	ldi	r23, 0x00	; 0
     7c0:	8a e0       	ldi	r24, 0x0A	; 10
     7c2:	93 e0       	ldi	r25, 0x03	; 3
     7c4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
                    display_set("MIN CAPACITY", buffer);
     7c8:	6a e0       	ldi	r22, 0x0A	; 10
     7ca:	73 e0       	ldi	r23, 0x03	; 3
     7cc:	87 eb       	ldi	r24, 0xB7	; 183
     7ce:	91 e0       	ldi	r25, 0x01	; 1
     7d0:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     7d4:	0a c1       	rjmp	.+532    	; 0x9ea <__stack+0xeb>
                case 1:
                    format_float(buffer, sizeof(buffer), MAXIMUM_TEMPERATURE_BEFORE_PUMPING, 2, "degrees");
     7d6:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING>
     7da:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x1>
     7de:	40 91 14 01 	lds	r20, 0x0114	; 0x800114 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x2>
     7e2:	50 91 15 01 	lds	r21, 0x0115	; 0x800115 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x3>
     7e6:	0f 2e       	mov	r0, r31
     7e8:	fe e9       	ldi	r31, 0x9E	; 158
     7ea:	ef 2e       	mov	r14, r31
     7ec:	f1 e0       	ldi	r31, 0x01	; 1
     7ee:	ff 2e       	mov	r15, r31
     7f0:	f0 2d       	mov	r31, r0
     7f2:	02 e0       	ldi	r16, 0x02	; 2
     7f4:	60 e1       	ldi	r22, 0x10	; 16
     7f6:	70 e0       	ldi	r23, 0x00	; 0
     7f8:	8a e0       	ldi	r24, 0x0A	; 10
     7fa:	93 e0       	ldi	r25, 0x03	; 3
     7fc:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
                    display_set("MAX TEMP", buffer);
     800:	6a e0       	ldi	r22, 0x0A	; 10
     802:	73 e0       	ldi	r23, 0x03	; 3
     804:	84 ec       	ldi	r24, 0xC4	; 196
     806:	91 e0       	ldi	r25, 0x01	; 1
     808:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     80c:	ee c0       	rjmp	.+476    	; 0x9ea <__stack+0xeb>
                default:
                    display_set("ERROR", "Invalid trigger");
     80e:	6d ec       	ldi	r22, 0xCD	; 205
     810:	71 e0       	ldi	r23, 0x01	; 1
     812:	8d ed       	ldi	r24, 0xDD	; 221
     814:	91 e0       	ldi	r25, 0x01	; 1
     816:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     81a:	e7 c0       	rjmp	.+462    	; 0x9ea <__stack+0xeb>
                }
            }
            break;

        case 5:
            display_set("MESSAGES", MESSAGES_BUFFER[message_hover_index]);
     81c:	e0 91 02 03 	lds	r30, 0x0302	; 0x800302 <__data_end>
     820:	f0 91 03 03 	lds	r31, 0x0303	; 0x800303 <__data_end+0x1>
     824:	ee 0f       	add	r30, r30
     826:	ff 1f       	adc	r31, r31
     828:	e0 5e       	subi	r30, 0xE0	; 224
     82a:	fe 4f       	sbci	r31, 0xFE	; 254
     82c:	60 81       	ld	r22, Z
     82e:	71 81       	ldd	r23, Z+1	; 0x01
     830:	83 ee       	ldi	r24, 0xE3	; 227
     832:	91 e0       	ldi	r25, 0x01	; 1
     834:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
            break;
     838:	d8 c0       	rjmp	.+432    	; 0x9ea <__stack+0xeb>
        case 6:
            if (active_config_index == -1)
     83a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <active_config_index>
     83e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <active_config_index+0x1>
     842:	8f 3f       	cpi	r24, 0xFF	; 255
     844:	2f ef       	ldi	r18, 0xFF	; 255
     846:	92 07       	cpc	r25, r18
     848:	79 f4       	brne	.+30     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
            {
                display_set("CONFIG", CONFIG_BUFFER[config_hover_index]);
     84a:	e0 91 04 03 	lds	r30, 0x0304	; 0x800304 <config_hover_index>
     84e:	f0 91 05 03 	lds	r31, 0x0305	; 0x800305 <config_hover_index+0x1>
     852:	ee 0f       	add	r30, r30
     854:	ff 1f       	adc	r31, r31
     856:	e8 5d       	subi	r30, 0xD8	; 216
     858:	fe 4f       	sbci	r31, 0xFE	; 254
     85a:	60 81       	ld	r22, Z
     85c:	71 81       	ldd	r23, Z+1	; 0x01
     85e:	8c ee       	ldi	r24, 0xEC	; 236
     860:	91 e0       	ldi	r25, 0x01	; 1
     862:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
     866:	c1 c0       	rjmp	.+386    	; 0x9ea <__stack+0xeb>
            }
            else
            {
                switch (active_config_index)
     868:	82 30       	cpi	r24, 0x02	; 2
     86a:	91 05       	cpc	r25, r1
     86c:	09 f4       	brne	.+2      	; 0x870 <__DATA_REGION_LENGTH__+0x70>
     86e:	46 c0       	rjmp	.+140    	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
     870:	2c f4       	brge	.+10     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
     872:	00 97       	sbiw	r24, 0x00	; 0
     874:	59 f0       	breq	.+22     	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
     876:	01 97       	sbiw	r24, 0x01	; 1
     878:	29 f1       	breq	.+74     	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
     87a:	aa c0       	rjmp	.+340    	; 0x9d0 <__stack+0xd1>
     87c:	83 30       	cpi	r24, 0x03	; 3
     87e:	91 05       	cpc	r25, r1
     880:	09 f4       	brne	.+2      	; 0x884 <__DATA_REGION_LENGTH__+0x84>
     882:	58 c0       	rjmp	.+176    	; 0x934 <__stack+0x35>
     884:	04 97       	sbiw	r24, 0x04	; 4
     886:	09 f4       	brne	.+2      	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
     888:	7c c0       	rjmp	.+248    	; 0x982 <__stack+0x83>
     88a:	a2 c0       	rjmp	.+324    	; 0x9d0 <__stack+0xd1>
                {
                case 0:
                    format_float(buffer, sizeof(buffer), STEP_SIZE_FOR_INCREMENTS, 1, "Ltrs");
     88c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     890:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     894:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     898:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     89c:	0f 2e       	mov	r0, r31
     89e:	f5 e6       	ldi	r31, 0x65	; 101
     8a0:	ef 2e       	mov	r14, r31
     8a2:	f1 e0       	ldi	r31, 0x01	; 1
     8a4:	ff 2e       	mov	r15, r31
     8a6:	f0 2d       	mov	r31, r0
     8a8:	01 e0       	ldi	r16, 0x01	; 1
     8aa:	60 e1       	ldi	r22, 0x10	; 16
     8ac:	70 e0       	ldi	r23, 0x00	; 0
     8ae:	8a e0       	ldi	r24, 0x0A	; 10
     8b0:	93 e0       	ldi	r25, 0x03	; 3
     8b2:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
                    display_set("STEP SIZE", buffer);
     8b6:	6a e0       	ldi	r22, 0x0A	; 10
     8b8:	73 e0       	ldi	r23, 0x03	; 3
     8ba:	83 ef       	ldi	r24, 0xF3	; 243
     8bc:	91 e0       	ldi	r25, 0x01	; 1
     8be:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     8c2:	93 c0       	rjmp	.+294    	; 0x9ea <__stack+0xeb>
                case 1:
                    format_float(buffer, sizeof(buffer), PUMP_THRESHOLD, 1, "degrees");
     8c4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <PUMP_THRESHOLD>
     8c8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <PUMP_THRESHOLD+0x1>
     8cc:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <PUMP_THRESHOLD+0x2>
     8d0:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <PUMP_THRESHOLD+0x3>
     8d4:	0f 2e       	mov	r0, r31
     8d6:	fe e9       	ldi	r31, 0x9E	; 158
     8d8:	ef 2e       	mov	r14, r31
     8da:	f1 e0       	ldi	r31, 0x01	; 1
     8dc:	ff 2e       	mov	r15, r31
     8de:	f0 2d       	mov	r31, r0
     8e0:	01 e0       	ldi	r16, 0x01	; 1
     8e2:	60 e1       	ldi	r22, 0x10	; 16
     8e4:	70 e0       	ldi	r23, 0x00	; 0
     8e6:	8a e0       	ldi	r24, 0x0A	; 10
     8e8:	93 e0       	ldi	r25, 0x03	; 3
     8ea:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
                    display_set("PUMP THRESHOLD", buffer);
     8ee:	6a e0       	ldi	r22, 0x0A	; 10
     8f0:	73 e0       	ldi	r23, 0x03	; 3
     8f2:	8d ef       	ldi	r24, 0xFD	; 253
     8f4:	91 e0       	ldi	r25, 0x01	; 1
     8f6:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     8fa:	77 c0       	rjmp	.+238    	; 0x9ea <__stack+0xeb>
                case 2:
                    format_float(buffer, sizeof(buffer), SPRAY_THRESHOLD, 1, "degrees");
     8fc:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <SPRAY_THRESHOLD>
     900:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <SPRAY_THRESHOLD+0x1>
     904:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <SPRAY_THRESHOLD+0x2>
     908:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <SPRAY_THRESHOLD+0x3>
     90c:	0f 2e       	mov	r0, r31
     90e:	fe e9       	ldi	r31, 0x9E	; 158
     910:	ef 2e       	mov	r14, r31
     912:	f1 e0       	ldi	r31, 0x01	; 1
     914:	ff 2e       	mov	r15, r31
     916:	f0 2d       	mov	r31, r0
     918:	01 e0       	ldi	r16, 0x01	; 1
     91a:	60 e1       	ldi	r22, 0x10	; 16
     91c:	70 e0       	ldi	r23, 0x00	; 0
     91e:	8a e0       	ldi	r24, 0x0A	; 10
     920:	93 e0       	ldi	r25, 0x03	; 3
     922:	0e 94 d7 00 	call	0x1ae	; 0x1ae <format_float>
                    display_set("SPRAY THRESHOLD", buffer);
     926:	6a e0       	ldi	r22, 0x0A	; 10
     928:	73 e0       	ldi	r23, 0x03	; 3
     92a:	8c e0       	ldi	r24, 0x0C	; 12
     92c:	92 e0       	ldi	r25, 0x02	; 2
     92e:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     932:	5b c0       	rjmp	.+182    	; 0x9ea <__stack+0xeb>
                case 3:
                    snprintf(buffer, sizeof(buffer), "%s", ENABLE_TRIGGER_VALUE ? "Enabled" : "Disabled");
     934:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <ENABLE_TRIGGER_VALUE>
     938:	88 23       	and	r24, r24
     93a:	19 f0       	breq	.+6      	; 0x942 <__stack+0x43>
     93c:	8a e4       	ldi	r24, 0x4A	; 74
     93e:	91 e0       	ldi	r25, 0x01	; 1
     940:	02 c0       	rjmp	.+4      	; 0x946 <__stack+0x47>
     942:	82 e5       	ldi	r24, 0x52	; 82
     944:	91 e0       	ldi	r25, 0x01	; 1
     946:	9f 93       	push	r25
     948:	8f 93       	push	r24
     94a:	87 e4       	ldi	r24, 0x47	; 71
     94c:	91 e0       	ldi	r25, 0x01	; 1
     94e:	9f 93       	push	r25
     950:	8f 93       	push	r24
     952:	1f 92       	push	r1
     954:	80 e1       	ldi	r24, 0x10	; 16
     956:	8f 93       	push	r24
     958:	8a e0       	ldi	r24, 0x0A	; 10
     95a:	93 e0       	ldi	r25, 0x03	; 3
     95c:	9f 93       	push	r25
     95e:	8f 93       	push	r24
     960:	0e 94 1e 09 	call	0x123c	; 0x123c <snprintf>
                    display_set("ENABLE TRIGGERS", buffer);
     964:	6a e0       	ldi	r22, 0x0A	; 10
     966:	73 e0       	ldi	r23, 0x03	; 3
     968:	8c e1       	ldi	r24, 0x1C	; 28
     96a:	92 e0       	ldi	r25, 0x02	; 2
     96c:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     970:	8d b7       	in	r24, 0x3d	; 61
     972:	9e b7       	in	r25, 0x3e	; 62
     974:	08 96       	adiw	r24, 0x08	; 8
     976:	0f b6       	in	r0, 0x3f	; 63
     978:	f8 94       	cli
     97a:	9e bf       	out	0x3e, r25	; 62
     97c:	0f be       	out	0x3f, r0	; 63
     97e:	8d bf       	out	0x3d, r24	; 61
     980:	34 c0       	rjmp	.+104    	; 0x9ea <__stack+0xeb>
                case 4:
                    snprintf(buffer, sizeof(buffer), "%s", ENABLE_ALERT_VALUE ? "Enabled" : "Disabled");
     982:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     986:	88 23       	and	r24, r24
     988:	19 f0       	breq	.+6      	; 0x990 <__stack+0x91>
     98a:	8a e4       	ldi	r24, 0x4A	; 74
     98c:	91 e0       	ldi	r25, 0x01	; 1
     98e:	02 c0       	rjmp	.+4      	; 0x994 <__stack+0x95>
     990:	82 e5       	ldi	r24, 0x52	; 82
     992:	91 e0       	ldi	r25, 0x01	; 1
     994:	9f 93       	push	r25
     996:	8f 93       	push	r24
     998:	87 e4       	ldi	r24, 0x47	; 71
     99a:	91 e0       	ldi	r25, 0x01	; 1
     99c:	9f 93       	push	r25
     99e:	8f 93       	push	r24
     9a0:	1f 92       	push	r1
     9a2:	80 e1       	ldi	r24, 0x10	; 16
     9a4:	8f 93       	push	r24
     9a6:	8a e0       	ldi	r24, 0x0A	; 10
     9a8:	93 e0       	ldi	r25, 0x03	; 3
     9aa:	9f 93       	push	r25
     9ac:	8f 93       	push	r24
     9ae:	0e 94 1e 09 	call	0x123c	; 0x123c <snprintf>
                    display_set("ENABLE ALERTS", buffer);
     9b2:	6a e0       	ldi	r22, 0x0A	; 10
     9b4:	73 e0       	ldi	r23, 0x03	; 3
     9b6:	8c e2       	ldi	r24, 0x2C	; 44
     9b8:	92 e0       	ldi	r25, 0x02	; 2
     9ba:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     9be:	8d b7       	in	r24, 0x3d	; 61
     9c0:	9e b7       	in	r25, 0x3e	; 62
     9c2:	08 96       	adiw	r24, 0x08	; 8
     9c4:	0f b6       	in	r0, 0x3f	; 63
     9c6:	f8 94       	cli
     9c8:	9e bf       	out	0x3e, r25	; 62
     9ca:	0f be       	out	0x3f, r0	; 63
     9cc:	8d bf       	out	0x3d, r24	; 61
     9ce:	0d c0       	rjmp	.+26     	; 0x9ea <__stack+0xeb>
                default:
                    display_set("ERROR", "Invalid config");
     9d0:	6a e3       	ldi	r22, 0x3A	; 58
     9d2:	72 e0       	ldi	r23, 0x02	; 2
     9d4:	8d ed       	ldi	r24, 0xDD	; 221
     9d6:	91 e0       	ldi	r25, 0x01	; 1
     9d8:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
                    break;
     9dc:	06 c0       	rjmp	.+12     	; 0x9ea <__stack+0xeb>
                }
            }
            break;

        default:
            display_set("ERROR", "Invalid menu");
     9de:	69 e4       	ldi	r22, 0x49	; 73
     9e0:	72 e0       	ldi	r23, 0x02	; 2
     9e2:	8d ed       	ldi	r24, 0xDD	; 221
     9e4:	91 e0       	ldi	r25, 0x01	; 1
     9e6:	0e 94 87 02 	call	0x50e	; 0x50e <display_set>
            break;
        }
    }
}
     9ea:	0f 91       	pop	r16
     9ec:	ff 90       	pop	r15
     9ee:	ef 90       	pop	r14
     9f0:	08 95       	ret

000009f2 <ui_process_key_command>:


// user process command
void ui_process_key_command (uint8_t key) {
    if (key == 1)
     9f2:	81 30       	cpi	r24, 0x01	; 1
     9f4:	41 f5       	brne	.+80     	; 0xa46 <ui_process_key_command+0x54>
    {
        if (active_menu_index == -1)
     9f6:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <active_menu_index>
     9fa:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <active_menu_index+0x1>
     9fe:	01 96       	adiw	r24, 0x01	; 1
     a00:	09 f4       	brne	.+2      	; 0xa04 <ui_process_key_command+0x12>
     a02:	59 c2       	rjmp	.+1202   	; 0xeb6 <ui_process_key_command+0x4c4>
        {
            return;
        }
        else
        {
            if (active_trigger_index != -1)
     a04:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <active_trigger_index>
     a08:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <active_trigger_index+0x1>
     a0c:	01 96       	adiw	r24, 0x01	; 1
     a0e:	39 f0       	breq	.+14     	; 0xa1e <ui_process_key_command+0x2c>
            {
                active_trigger_index = -1;
     a10:	8f ef       	ldi	r24, 0xFF	; 255
     a12:	9f ef       	ldi	r25, 0xFF	; 255
     a14:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <active_trigger_index+0x1>
     a18:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <active_trigger_index>
     a1c:	08 95       	ret
            }
            else if (active_config_index != -1)
     a1e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <active_config_index>
     a22:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <active_config_index+0x1>
     a26:	01 96       	adiw	r24, 0x01	; 1
     a28:	39 f0       	breq	.+14     	; 0xa38 <ui_process_key_command+0x46>
            {
                active_config_index = -1;
     a2a:	8f ef       	ldi	r24, 0xFF	; 255
     a2c:	9f ef       	ldi	r25, 0xFF	; 255
     a2e:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <active_config_index+0x1>
     a32:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <active_config_index>
     a36:	08 95       	ret
            }
            else
            {
                active_menu_index = -1;
     a38:	8f ef       	ldi	r24, 0xFF	; 255
     a3a:	9f ef       	ldi	r25, 0xFF	; 255
     a3c:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <active_menu_index+0x1>
     a40:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <active_menu_index>
     a44:	08 95       	ret
            }
        }
    }
    else if (key == 2)
     a46:	82 30       	cpi	r24, 0x02	; 2
     a48:	09 f0       	breq	.+2      	; 0xa4c <ui_process_key_command+0x5a>
     a4a:	fd c0       	rjmp	.+506    	; 0xc46 <ui_process_key_command+0x254>
    {
        if (active_menu_index == -1)
     a4c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <active_menu_index>
     a50:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <active_menu_index+0x1>
     a54:	8f 3f       	cpi	r24, 0xFF	; 255
     a56:	2f ef       	ldi	r18, 0xFF	; 255
     a58:	92 07       	cpc	r25, r18
     a5a:	71 f4       	brne	.+28     	; 0xa78 <ui_process_key_command+0x86>
        {
            if (menu_hover_index < 6)
     a5c:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <menu_hover_index>
     a60:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <menu_hover_index+0x1>
     a64:	86 30       	cpi	r24, 0x06	; 6
     a66:	91 05       	cpc	r25, r1
     a68:	0c f0       	brlt	.+2      	; 0xa6c <ui_process_key_command+0x7a>
     a6a:	25 c2       	rjmp	.+1098   	; 0xeb6 <ui_process_key_command+0x4c4>
                menu_hover_index++; // navigate downwards on the main menu
     a6c:	01 96       	adiw	r24, 0x01	; 1
     a6e:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <menu_hover_index+0x1>
     a72:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <menu_hover_index>
     a76:	08 95       	ret
        }
        else if (active_menu_index == 4) 
     a78:	84 30       	cpi	r24, 0x04	; 4
     a7a:	91 05       	cpc	r25, r1
     a7c:	09 f0       	breq	.+2      	; 0xa80 <ui_process_key_command+0x8e>
     a7e:	50 c0       	rjmp	.+160    	; 0xb20 <ui_process_key_command+0x12e>
        {
            // user is in the triggers menu
            if (active_trigger_index == -1)
     a80:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <active_trigger_index>
     a84:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <active_trigger_index+0x1>
     a88:	8f 3f       	cpi	r24, 0xFF	; 255
     a8a:	2f ef       	ldi	r18, 0xFF	; 255
     a8c:	92 07       	cpc	r25, r18
     a8e:	69 f4       	brne	.+26     	; 0xaaa <ui_process_key_command+0xb8>
            {
                if (trigger_hover_index < (sizeof(TRIGGERS_BUFFER)/sizeof(TRIGGERS_BUFFER[0]) - 1))
     a90:	80 91 06 03 	lds	r24, 0x0306	; 0x800306 <trigger_hover_index>
     a94:	90 91 07 03 	lds	r25, 0x0307	; 0x800307 <trigger_hover_index+0x1>
     a98:	00 97       	sbiw	r24, 0x00	; 0
     a9a:	09 f0       	breq	.+2      	; 0xa9e <ui_process_key_command+0xac>
     a9c:	0c c2       	rjmp	.+1048   	; 0xeb6 <ui_process_key_command+0x4c4>
                    trigger_hover_index++; // navigate downwards on the triggers menu
     a9e:	01 96       	adiw	r24, 0x01	; 1
     aa0:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <trigger_hover_index+0x1>
     aa4:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <trigger_hover_index>
     aa8:	08 95       	ret
            } else {
                switch (active_trigger_index) {
     aaa:	00 97       	sbiw	r24, 0x00	; 0
     aac:	19 f0       	breq	.+6      	; 0xab4 <ui_process_key_command+0xc2>
     aae:	01 97       	sbiw	r24, 0x01	; 1
     ab0:	e1 f0       	breq	.+56     	; 0xaea <ui_process_key_command+0xf8>
     ab2:	08 95       	ret
                    case 0:
                        // adjust MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER - decrease
                        MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER -= STEP_SIZE_FOR_INCREMENTS;
     ab4:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     ab8:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     abc:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     ac0:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     ac4:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER>
     ac8:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x1>
     acc:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x2>
     ad0:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x3>
     ad4:	0e 94 90 07 	call	0xf20	; 0xf20 <__subsf3>
     ad8:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER>
     adc:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x1>
     ae0:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x2>
     ae4:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x3>
                        break;
     ae8:	08 95       	ret
                    case 1:
                        // adjust MAXIMUM_TEMPERATURE_BEFORE_PUMPING - decrease
                        MAXIMUM_TEMPERATURE_BEFORE_PUMPING -= STEP_SIZE_FOR_INCREMENTS;
     aea:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     aee:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     af2:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     af6:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     afa:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING>
     afe:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x1>
     b02:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x2>
     b06:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x3>
     b0a:	0e 94 90 07 	call	0xf20	; 0xf20 <__subsf3>
     b0e:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING>
     b12:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x1>
     b16:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x2>
     b1a:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x3>
                        break;
     b1e:	08 95       	ret
                    default:
                        break;
                }
            }
        }
        else if (active_menu_index == 5) {
     b20:	85 30       	cpi	r24, 0x05	; 5
     b22:	91 05       	cpc	r25, r1
     b24:	71 f4       	brne	.+28     	; 0xb42 <ui_process_key_command+0x150>
            if (message_hover_index < MSG_BUFFER_SIZE - 1)
     b26:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <__data_end>
     b2a:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <__data_end+0x1>
     b2e:	83 30       	cpi	r24, 0x03	; 3
     b30:	91 05       	cpc	r25, r1
     b32:	0c f0       	brlt	.+2      	; 0xb36 <ui_process_key_command+0x144>
     b34:	c0 c1       	rjmp	.+896    	; 0xeb6 <ui_process_key_command+0x4c4>
                message_hover_index++;
     b36:	01 96       	adiw	r24, 0x01	; 1
     b38:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <__data_end+0x1>
     b3c:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <__data_end>
     b40:	08 95       	ret
        }
        else if (active_menu_index == 6)
     b42:	06 97       	sbiw	r24, 0x06	; 6
     b44:	09 f0       	breq	.+2      	; 0xb48 <ui_process_key_command+0x156>
     b46:	b7 c1       	rjmp	.+878    	; 0xeb6 <ui_process_key_command+0x4c4>
        {
            if (active_config_index == -1)
     b48:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <active_config_index>
     b4c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <active_config_index+0x1>
     b50:	8f 3f       	cpi	r24, 0xFF	; 255
     b52:	2f ef       	ldi	r18, 0xFF	; 255
     b54:	92 07       	cpc	r25, r18
     b56:	71 f4       	brne	.+28     	; 0xb74 <ui_process_key_command+0x182>
            {
                if (config_hover_index < (sizeof(CONFIG_BUFFER)/sizeof(CONFIG_BUFFER[0]) - 1))
     b58:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <config_hover_index>
     b5c:	90 91 05 03 	lds	r25, 0x0305	; 0x800305 <config_hover_index+0x1>
     b60:	84 30       	cpi	r24, 0x04	; 4
     b62:	91 05       	cpc	r25, r1
     b64:	08 f0       	brcs	.+2      	; 0xb68 <ui_process_key_command+0x176>
     b66:	a7 c1       	rjmp	.+846    	; 0xeb6 <ui_process_key_command+0x4c4>
                    config_hover_index++; // navigate downwards on the config menu
     b68:	01 96       	adiw	r24, 0x01	; 1
     b6a:	90 93 05 03 	sts	0x0305, r25	; 0x800305 <config_hover_index+0x1>
     b6e:	80 93 04 03 	sts	0x0304, r24	; 0x800304 <config_hover_index>
     b72:	08 95       	ret
            } else {
                switch (active_config_index)
     b74:	82 30       	cpi	r24, 0x02	; 2
     b76:	91 05       	cpc	r25, r1
     b78:	09 f4       	brne	.+2      	; 0xb7c <ui_process_key_command+0x18a>
     b7a:	44 c0       	rjmp	.+136    	; 0xc04 <ui_process_key_command+0x212>
     b7c:	2c f4       	brge	.+10     	; 0xb88 <ui_process_key_command+0x196>
     b7e:	00 97       	sbiw	r24, 0x00	; 0
     b80:	59 f0       	breq	.+22     	; 0xb98 <ui_process_key_command+0x1a6>
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	21 f1       	breq	.+72     	; 0xbce <ui_process_key_command+0x1dc>
     b86:	08 95       	ret
     b88:	83 30       	cpi	r24, 0x03	; 3
     b8a:	91 05       	cpc	r25, r1
     b8c:	09 f4       	brne	.+2      	; 0xb90 <ui_process_key_command+0x19e>
     b8e:	55 c0       	rjmp	.+170    	; 0xc3a <ui_process_key_command+0x248>
     b90:	04 97       	sbiw	r24, 0x04	; 4
     b92:	09 f4       	brne	.+2      	; 0xb96 <ui_process_key_command+0x1a4>
     b94:	55 c0       	rjmp	.+170    	; 0xc40 <ui_process_key_command+0x24e>
     b96:	08 95       	ret
                {
                case 0:
                    // adjust STEP_SIZE_FOR_INCREMENTS - decrease
                    STEP_SIZE_FOR_INCREMENTS -= STEP_INCREMENT;
     b98:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <STEP_INCREMENT>
     b9c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <STEP_INCREMENT+0x1>
     ba0:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <STEP_INCREMENT+0x2>
     ba4:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <STEP_INCREMENT+0x3>
     ba8:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     bac:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     bb0:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     bb4:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     bb8:	0e 94 90 07 	call	0xf20	; 0xf20 <__subsf3>
     bbc:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     bc0:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     bc4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     bc8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
                    break;
     bcc:	08 95       	ret
                case 1:
                    // adjust PUMP_THRESHOLD - decrease
                    PUMP_THRESHOLD -= STEP_SIZE_FOR_INCREMENTS;
     bce:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     bd2:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     bd6:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     bda:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     bde:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <PUMP_THRESHOLD>
     be2:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <PUMP_THRESHOLD+0x1>
     be6:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <PUMP_THRESHOLD+0x2>
     bea:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <PUMP_THRESHOLD+0x3>
     bee:	0e 94 90 07 	call	0xf20	; 0xf20 <__subsf3>
     bf2:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <PUMP_THRESHOLD>
     bf6:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <PUMP_THRESHOLD+0x1>
     bfa:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <PUMP_THRESHOLD+0x2>
     bfe:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <PUMP_THRESHOLD+0x3>
                    break;
     c02:	08 95       	ret
                case 2:
                    // adjust SPRAY_THRESHOLD - decrease
                    SPRAY_THRESHOLD -= STEP_SIZE_FOR_INCREMENTS;
     c04:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     c08:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     c0c:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     c10:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     c14:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <SPRAY_THRESHOLD>
     c18:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <SPRAY_THRESHOLD+0x1>
     c1c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <SPRAY_THRESHOLD+0x2>
     c20:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <SPRAY_THRESHOLD+0x3>
     c24:	0e 94 90 07 	call	0xf20	; 0xf20 <__subsf3>
     c28:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <SPRAY_THRESHOLD>
     c2c:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <SPRAY_THRESHOLD+0x1>
     c30:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <SPRAY_THRESHOLD+0x2>
     c34:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <SPRAY_THRESHOLD+0x3>
                    break;
     c38:	08 95       	ret
                case 3:
                    // adjust ENABLE_TRIGGER_VALUE - toggle
                    ENABLE_TRIGGER_VALUE = 0;
     c3a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <ENABLE_TRIGGER_VALUE>
                    break;
     c3e:	08 95       	ret
                case 4:
                    // adjust ENABLE_ALERT_VALUE - toggle
                    ENABLE_ALERT_VALUE = 0;
     c40:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
                    break;
     c44:	08 95       	ret
                    break;
                }
            }
        }
    }
    else if (key == 3)
     c46:	83 30       	cpi	r24, 0x03	; 3
     c48:	09 f0       	breq	.+2      	; 0xc4c <ui_process_key_command+0x25a>
     c4a:	00 c1       	rjmp	.+512    	; 0xe4c <ui_process_key_command+0x45a>
    {
        if (active_menu_index == -1)
     c4c:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <active_menu_index>
     c50:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <active_menu_index+0x1>
     c54:	8f 3f       	cpi	r24, 0xFF	; 255
     c56:	2f ef       	ldi	r18, 0xFF	; 255
     c58:	92 07       	cpc	r25, r18
     c5a:	71 f4       	brne	.+28     	; 0xc78 <ui_process_key_command+0x286>
        {
            if (menu_hover_index > 0)
     c5c:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <menu_hover_index>
     c60:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <menu_hover_index+0x1>
     c64:	18 16       	cp	r1, r24
     c66:	19 06       	cpc	r1, r25
     c68:	0c f0       	brlt	.+2      	; 0xc6c <ui_process_key_command+0x27a>
     c6a:	25 c1       	rjmp	.+586    	; 0xeb6 <ui_process_key_command+0x4c4>
                menu_hover_index--;
     c6c:	01 97       	sbiw	r24, 0x01	; 1
     c6e:	90 93 09 03 	sts	0x0309, r25	; 0x800309 <menu_hover_index+0x1>
     c72:	80 93 08 03 	sts	0x0308, r24	; 0x800308 <menu_hover_index>
     c76:	08 95       	ret
        }
        else if (active_menu_index == 4)
     c78:	84 30       	cpi	r24, 0x04	; 4
     c7a:	91 05       	cpc	r25, r1
     c7c:	09 f0       	breq	.+2      	; 0xc80 <ui_process_key_command+0x28e>
     c7e:	51 c0       	rjmp	.+162    	; 0xd22 <ui_process_key_command+0x330>
        {
            if (active_trigger_index == -1)
     c80:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <active_trigger_index>
     c84:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <active_trigger_index+0x1>
     c88:	8f 3f       	cpi	r24, 0xFF	; 255
     c8a:	2f ef       	ldi	r18, 0xFF	; 255
     c8c:	92 07       	cpc	r25, r18
     c8e:	71 f4       	brne	.+28     	; 0xcac <ui_process_key_command+0x2ba>
            {
                if (trigger_hover_index > 0)
     c90:	80 91 06 03 	lds	r24, 0x0306	; 0x800306 <trigger_hover_index>
     c94:	90 91 07 03 	lds	r25, 0x0307	; 0x800307 <trigger_hover_index+0x1>
     c98:	18 16       	cp	r1, r24
     c9a:	19 06       	cpc	r1, r25
     c9c:	0c f0       	brlt	.+2      	; 0xca0 <ui_process_key_command+0x2ae>
     c9e:	0b c1       	rjmp	.+534    	; 0xeb6 <ui_process_key_command+0x4c4>
                    trigger_hover_index--;
     ca0:	01 97       	sbiw	r24, 0x01	; 1
     ca2:	90 93 07 03 	sts	0x0307, r25	; 0x800307 <trigger_hover_index+0x1>
     ca6:	80 93 06 03 	sts	0x0306, r24	; 0x800306 <trigger_hover_index>
     caa:	08 95       	ret
            } else {
                switch (active_trigger_index) {
     cac:	00 97       	sbiw	r24, 0x00	; 0
     cae:	19 f0       	breq	.+6      	; 0xcb6 <ui_process_key_command+0x2c4>
     cb0:	01 97       	sbiw	r24, 0x01	; 1
     cb2:	e1 f0       	breq	.+56     	; 0xcec <ui_process_key_command+0x2fa>
     cb4:	08 95       	ret
                    case 0:
                        // adjust MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER - decrease
                        MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER += STEP_SIZE_FOR_INCREMENTS;
     cb6:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     cba:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     cbe:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     cc2:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     cc6:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER>
     cca:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x1>
     cce:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x2>
     cd2:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x3>
     cd6:	0e 94 91 07 	call	0xf22	; 0xf22 <__addsf3>
     cda:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER>
     cde:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x1>
     ce2:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x2>
     ce6:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <MINIMUM_CAPACITY_BEFORE_REFILLING_TRIGGER+0x3>
                        break;
     cea:	08 95       	ret
                    case 1:
                        // adjust MAXIMUM_TEMPERATURE_BEFORE_PUMPING - decrease
                        MAXIMUM_TEMPERATURE_BEFORE_PUMPING += STEP_SIZE_FOR_INCREMENTS;
     cec:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     cf0:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     cf4:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     cf8:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     cfc:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING>
     d00:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x1>
     d04:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x2>
     d08:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x3>
     d0c:	0e 94 91 07 	call	0xf22	; 0xf22 <__addsf3>
     d10:	60 93 12 01 	sts	0x0112, r22	; 0x800112 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING>
     d14:	70 93 13 01 	sts	0x0113, r23	; 0x800113 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x1>
     d18:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x2>
     d1c:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <MAXIMUM_TEMPERATURE_BEFORE_PUMPING+0x3>
                        break;
     d20:	08 95       	ret
                    default:
                        break;
                }
            }
        } 
        else if (active_menu_index == 5) {
     d22:	85 30       	cpi	r24, 0x05	; 5
     d24:	91 05       	cpc	r25, r1
     d26:	71 f4       	brne	.+28     	; 0xd44 <ui_process_key_command+0x352>
            if (message_hover_index > 0)
     d28:	80 91 02 03 	lds	r24, 0x0302	; 0x800302 <__data_end>
     d2c:	90 91 03 03 	lds	r25, 0x0303	; 0x800303 <__data_end+0x1>
     d30:	18 16       	cp	r1, r24
     d32:	19 06       	cpc	r1, r25
     d34:	0c f0       	brlt	.+2      	; 0xd38 <ui_process_key_command+0x346>
     d36:	bf c0       	rjmp	.+382    	; 0xeb6 <ui_process_key_command+0x4c4>
                message_hover_index--;
     d38:	01 97       	sbiw	r24, 0x01	; 1
     d3a:	90 93 03 03 	sts	0x0303, r25	; 0x800303 <__data_end+0x1>
     d3e:	80 93 02 03 	sts	0x0302, r24	; 0x800302 <__data_end>
     d42:	08 95       	ret
        }
        else if (active_menu_index == 6)
     d44:	06 97       	sbiw	r24, 0x06	; 6
     d46:	09 f0       	breq	.+2      	; 0xd4a <ui_process_key_command+0x358>
     d48:	b6 c0       	rjmp	.+364    	; 0xeb6 <ui_process_key_command+0x4c4>
        {
            if (active_config_index == -1)
     d4a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <active_config_index>
     d4e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <active_config_index+0x1>
     d52:	8f 3f       	cpi	r24, 0xFF	; 255
     d54:	2f ef       	ldi	r18, 0xFF	; 255
     d56:	92 07       	cpc	r25, r18
     d58:	71 f4       	brne	.+28     	; 0xd76 <ui_process_key_command+0x384>
            {
                if (config_hover_index > 0)
     d5a:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <config_hover_index>
     d5e:	90 91 05 03 	lds	r25, 0x0305	; 0x800305 <config_hover_index+0x1>
     d62:	18 16       	cp	r1, r24
     d64:	19 06       	cpc	r1, r25
     d66:	0c f0       	brlt	.+2      	; 0xd6a <ui_process_key_command+0x378>
     d68:	a6 c0       	rjmp	.+332    	; 0xeb6 <ui_process_key_command+0x4c4>
                    config_hover_index--;
     d6a:	01 97       	sbiw	r24, 0x01	; 1
     d6c:	90 93 05 03 	sts	0x0305, r25	; 0x800305 <config_hover_index+0x1>
     d70:	80 93 04 03 	sts	0x0304, r24	; 0x800304 <config_hover_index>
     d74:	08 95       	ret
            } else {
            switch (active_config_index)
     d76:	82 30       	cpi	r24, 0x02	; 2
     d78:	91 05       	cpc	r25, r1
     d7a:	09 f4       	brne	.+2      	; 0xd7e <ui_process_key_command+0x38c>
     d7c:	44 c0       	rjmp	.+136    	; 0xe06 <ui_process_key_command+0x414>
     d7e:	2c f4       	brge	.+10     	; 0xd8a <ui_process_key_command+0x398>
     d80:	00 97       	sbiw	r24, 0x00	; 0
     d82:	59 f0       	breq	.+22     	; 0xd9a <ui_process_key_command+0x3a8>
     d84:	01 97       	sbiw	r24, 0x01	; 1
     d86:	21 f1       	breq	.+72     	; 0xdd0 <ui_process_key_command+0x3de>
     d88:	08 95       	ret
     d8a:	83 30       	cpi	r24, 0x03	; 3
     d8c:	91 05       	cpc	r25, r1
     d8e:	09 f4       	brne	.+2      	; 0xd92 <ui_process_key_command+0x3a0>
     d90:	55 c0       	rjmp	.+170    	; 0xe3c <ui_process_key_command+0x44a>
     d92:	04 97       	sbiw	r24, 0x04	; 4
     d94:	09 f4       	brne	.+2      	; 0xd98 <ui_process_key_command+0x3a6>
     d96:	56 c0       	rjmp	.+172    	; 0xe44 <ui_process_key_command+0x452>
     d98:	08 95       	ret
                {
                case 0:
                    // adjust STEP_SIZE_FOR_INCREMENTS - decrease
                    STEP_SIZE_FOR_INCREMENTS += STEP_INCREMENT;
     d9a:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <STEP_INCREMENT>
     d9e:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <STEP_INCREMENT+0x1>
     da2:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <STEP_INCREMENT+0x2>
     da6:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <STEP_INCREMENT+0x3>
     daa:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     dae:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     db2:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     db6:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     dba:	0e 94 91 07 	call	0xf22	; 0xf22 <__addsf3>
     dbe:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     dc2:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     dc6:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     dca:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
                    break;
     dce:	08 95       	ret
                case 1:
                    // adjust PUMP_THRESHOLD - decrease
                    PUMP_THRESHOLD += STEP_SIZE_FOR_INCREMENTS;
     dd0:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     dd4:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     dd8:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     ddc:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     de0:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <PUMP_THRESHOLD>
     de4:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <PUMP_THRESHOLD+0x1>
     de8:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <PUMP_THRESHOLD+0x2>
     dec:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <PUMP_THRESHOLD+0x3>
     df0:	0e 94 91 07 	call	0xf22	; 0xf22 <__addsf3>
     df4:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <PUMP_THRESHOLD>
     df8:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <PUMP_THRESHOLD+0x1>
     dfc:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <PUMP_THRESHOLD+0x2>
     e00:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <PUMP_THRESHOLD+0x3>
                    break;
     e04:	08 95       	ret
                case 2:
                    // adjust SPRAY_THRESHOLD - decrease
                    SPRAY_THRESHOLD += STEP_SIZE_FOR_INCREMENTS;
     e06:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <STEP_SIZE_FOR_INCREMENTS>
     e0a:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <STEP_SIZE_FOR_INCREMENTS+0x1>
     e0e:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <STEP_SIZE_FOR_INCREMENTS+0x2>
     e12:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <STEP_SIZE_FOR_INCREMENTS+0x3>
     e16:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <SPRAY_THRESHOLD>
     e1a:	70 91 03 01 	lds	r23, 0x0103	; 0x800103 <SPRAY_THRESHOLD+0x1>
     e1e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <SPRAY_THRESHOLD+0x2>
     e22:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <SPRAY_THRESHOLD+0x3>
     e26:	0e 94 91 07 	call	0xf22	; 0xf22 <__addsf3>
     e2a:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <SPRAY_THRESHOLD>
     e2e:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <SPRAY_THRESHOLD+0x1>
     e32:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <SPRAY_THRESHOLD+0x2>
     e36:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <SPRAY_THRESHOLD+0x3>
                    break;
     e3a:	08 95       	ret
                case 3:
                    // adjust ENABLE_TRIGGER_VALUE - toggle
                    ENABLE_TRIGGER_VALUE = 1;
     e3c:	81 e0       	ldi	r24, 0x01	; 1
     e3e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <ENABLE_TRIGGER_VALUE>
                    break;
     e42:	08 95       	ret
                case 4:
                    // adjust ENABLE_ALERT_VALUE - toggle
                    ENABLE_ALERT_VALUE = 1;
     e44:	81 e0       	ldi	r24, 0x01	; 1
     e46:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
                    break;
     e4a:	08 95       	ret
                    break;
                }
            }
        }
    }
    else if (key == 4)
     e4c:	84 30       	cpi	r24, 0x04	; 4
     e4e:	99 f5       	brne	.+102    	; 0xeb6 <ui_process_key_command+0x4c4>
    {
        if (active_menu_index == -1)
     e50:	80 91 1e 01 	lds	r24, 0x011E	; 0x80011e <active_menu_index>
     e54:	90 91 1f 01 	lds	r25, 0x011F	; 0x80011f <active_menu_index+0x1>
     e58:	8f 3f       	cpi	r24, 0xFF	; 255
     e5a:	2f ef       	ldi	r18, 0xFF	; 255
     e5c:	92 07       	cpc	r25, r18
     e5e:	49 f4       	brne	.+18     	; 0xe72 <ui_process_key_command+0x480>
        {
            active_menu_index = menu_hover_index;
     e60:	80 91 08 03 	lds	r24, 0x0308	; 0x800308 <menu_hover_index>
     e64:	90 91 09 03 	lds	r25, 0x0309	; 0x800309 <menu_hover_index+0x1>
     e68:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <active_menu_index+0x1>
     e6c:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <active_menu_index>
     e70:	08 95       	ret
        }
        else if (active_menu_index == 4)
     e72:	84 30       	cpi	r24, 0x04	; 4
     e74:	91 05       	cpc	r25, r1
     e76:	79 f4       	brne	.+30     	; 0xe96 <ui_process_key_command+0x4a4>
        {
            if (active_trigger_index == -1)
     e78:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <active_trigger_index>
     e7c:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <active_trigger_index+0x1>
     e80:	01 96       	adiw	r24, 0x01	; 1
     e82:	c9 f4       	brne	.+50     	; 0xeb6 <ui_process_key_command+0x4c4>
            {
                active_trigger_index = trigger_hover_index;
     e84:	80 91 06 03 	lds	r24, 0x0306	; 0x800306 <trigger_hover_index>
     e88:	90 91 07 03 	lds	r25, 0x0307	; 0x800307 <trigger_hover_index+0x1>
     e8c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <active_trigger_index+0x1>
     e90:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <active_trigger_index>
     e94:	08 95       	ret
            }
        }
        else if (active_menu_index == 6)
     e96:	06 97       	sbiw	r24, 0x06	; 6
     e98:	71 f4       	brne	.+28     	; 0xeb6 <ui_process_key_command+0x4c4>
        {
            if (active_config_index == -1)
     e9a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <active_config_index>
     e9e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <active_config_index+0x1>
     ea2:	01 96       	adiw	r24, 0x01	; 1
     ea4:	41 f4       	brne	.+16     	; 0xeb6 <ui_process_key_command+0x4c4>
            {
                active_config_index = config_hover_index;
     ea6:	80 91 04 03 	lds	r24, 0x0304	; 0x800304 <config_hover_index>
     eaa:	90 91 05 03 	lds	r25, 0x0305	; 0x800305 <config_hover_index+0x1>
     eae:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <active_config_index+0x1>
     eb2:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <active_config_index>
     eb6:	08 95       	ret

00000eb8 <main>:



int main(void)
{
    LCD_1602A_init();
     eb8:	0e 94 80 01 	call	0x300	; 0x300 <LCD_1602A_init>
    HCSR04_init();
     ebc:	0e 94 67 02 	call	0x4ce	; 0x4ce <HCSR04_init>
    KEYPAD_init();
     ec0:	0e 94 6e 02 	call	0x4dc	; 0x4dc <KEYPAD_init>
    uint16_t distance;
    uint8_t pressed_key;

    while (1)
    {
        ui_show_display();
     ec4:	0e 94 31 03 	call	0x662	; 0x662 <ui_show_display>
     ec8:	2f ef       	ldi	r18, 0xFF	; 255
     eca:	89 ef       	ldi	r24, 0xF9	; 249
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	21 50       	subi	r18, 0x01	; 1
     ed0:	80 40       	sbci	r24, 0x00	; 0
     ed2:	90 40       	sbci	r25, 0x00	; 0
     ed4:	e1 f7       	brne	.-8      	; 0xece <main+0x16>
     ed6:	00 c0       	rjmp	.+0      	; 0xed8 <main+0x20>
     ed8:	00 00       	nop
        _delay_ms(20);

        // wait for key press (blocking)
        while ((pressed_key = KEYPAD_read()) == KEYPAD_NO_KEY);
     eda:	0e 94 75 02 	call	0x4ea	; 0x4ea <KEYPAD_read>
     ede:	c8 2f       	mov	r28, r24
     ee0:	85 30       	cpi	r24, 0x05	; 5
     ee2:	d9 f3       	breq	.-10     	; 0xeda <main+0x22>
     ee4:	2f ef       	ldi	r18, 0xFF	; 255
     ee6:	89 ef       	ldi	r24, 0xF9	; 249
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	21 50       	subi	r18, 0x01	; 1
     eec:	80 40       	sbci	r24, 0x00	; 0
     eee:	90 40       	sbci	r25, 0x00	; 0
     ef0:	e1 f7       	brne	.-8      	; 0xeea <main+0x32>
     ef2:	00 c0       	rjmp	.+0      	; 0xef4 <main+0x3c>
     ef4:	00 00       	nop
        // simple debounce: short delay and verify the key is still pressed
        _delay_ms(20);
        if (KEYPAD_read() == pressed_key)
     ef6:	0e 94 75 02 	call	0x4ea	; 0x4ea <KEYPAD_read>
     efa:	c8 13       	cpse	r28, r24
     efc:	e3 cf       	rjmp	.-58     	; 0xec4 <main+0xc>
        {
            ui_process_key_command(pressed_key);
     efe:	8c 2f       	mov	r24, r28
     f00:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <ui_process_key_command>
            // wait for key release to avoid repeated processing while key is held
            while (KEYPAD_read() != KEYPAD_NO_KEY);
     f04:	0e 94 75 02 	call	0x4ea	; 0x4ea <KEYPAD_read>
     f08:	85 30       	cpi	r24, 0x05	; 5
     f0a:	e1 f7       	brne	.-8      	; 0xf04 <main+0x4c>
     f0c:	2f ef       	ldi	r18, 0xFF	; 255
     f0e:	89 ef       	ldi	r24, 0xF9	; 249
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	21 50       	subi	r18, 0x01	; 1
     f14:	80 40       	sbci	r24, 0x00	; 0
     f16:	90 40       	sbci	r25, 0x00	; 0
     f18:	e1 f7       	brne	.-8      	; 0xf12 <main+0x5a>
     f1a:	00 c0       	rjmp	.+0      	; 0xf1c <main+0x64>
     f1c:	00 00       	nop
     f1e:	d2 cf       	rjmp	.-92     	; 0xec4 <main+0xc>

00000f20 <__subsf3>:
     f20:	50 58       	subi	r21, 0x80	; 128

00000f22 <__addsf3>:
     f22:	bb 27       	eor	r27, r27
     f24:	aa 27       	eor	r26, r26
     f26:	0e 94 a8 07 	call	0xf50	; 0xf50 <__addsf3x>
     f2a:	0c 94 51 08 	jmp	0x10a2	; 0x10a2 <__fp_round>
     f2e:	0e 94 43 08 	call	0x1086	; 0x1086 <__fp_pscA>
     f32:	38 f0       	brcs	.+14     	; 0xf42 <__addsf3+0x20>
     f34:	0e 94 4a 08 	call	0x1094	; 0x1094 <__fp_pscB>
     f38:	20 f0       	brcs	.+8      	; 0xf42 <__addsf3+0x20>
     f3a:	39 f4       	brne	.+14     	; 0xf4a <__addsf3+0x28>
     f3c:	9f 3f       	cpi	r25, 0xFF	; 255
     f3e:	19 f4       	brne	.+6      	; 0xf46 <__addsf3+0x24>
     f40:	26 f4       	brtc	.+8      	; 0xf4a <__addsf3+0x28>
     f42:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__fp_nan>
     f46:	0e f4       	brtc	.+2      	; 0xf4a <__addsf3+0x28>
     f48:	e0 95       	com	r30
     f4a:	e7 fb       	bst	r30, 7
     f4c:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__fp_inf>

00000f50 <__addsf3x>:
     f50:	e9 2f       	mov	r30, r25
     f52:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__fp_split3>
     f56:	58 f3       	brcs	.-42     	; 0xf2e <__addsf3+0xc>
     f58:	ba 17       	cp	r27, r26
     f5a:	62 07       	cpc	r22, r18
     f5c:	73 07       	cpc	r23, r19
     f5e:	84 07       	cpc	r24, r20
     f60:	95 07       	cpc	r25, r21
     f62:	20 f0       	brcs	.+8      	; 0xf6c <__addsf3x+0x1c>
     f64:	79 f4       	brne	.+30     	; 0xf84 <__addsf3x+0x34>
     f66:	a6 f5       	brtc	.+104    	; 0xfd0 <__addsf3x+0x80>
     f68:	0c 94 84 08 	jmp	0x1108	; 0x1108 <__fp_zero>
     f6c:	0e f4       	brtc	.+2      	; 0xf70 <__addsf3x+0x20>
     f6e:	e0 95       	com	r30
     f70:	0b 2e       	mov	r0, r27
     f72:	ba 2f       	mov	r27, r26
     f74:	a0 2d       	mov	r26, r0
     f76:	0b 01       	movw	r0, r22
     f78:	b9 01       	movw	r22, r18
     f7a:	90 01       	movw	r18, r0
     f7c:	0c 01       	movw	r0, r24
     f7e:	ca 01       	movw	r24, r20
     f80:	a0 01       	movw	r20, r0
     f82:	11 24       	eor	r1, r1
     f84:	ff 27       	eor	r31, r31
     f86:	59 1b       	sub	r21, r25
     f88:	99 f0       	breq	.+38     	; 0xfb0 <__addsf3x+0x60>
     f8a:	59 3f       	cpi	r21, 0xF9	; 249
     f8c:	50 f4       	brcc	.+20     	; 0xfa2 <__addsf3x+0x52>
     f8e:	50 3e       	cpi	r21, 0xE0	; 224
     f90:	68 f1       	brcs	.+90     	; 0xfec <__addsf3x+0x9c>
     f92:	1a 16       	cp	r1, r26
     f94:	f0 40       	sbci	r31, 0x00	; 0
     f96:	a2 2f       	mov	r26, r18
     f98:	23 2f       	mov	r18, r19
     f9a:	34 2f       	mov	r19, r20
     f9c:	44 27       	eor	r20, r20
     f9e:	58 5f       	subi	r21, 0xF8	; 248
     fa0:	f3 cf       	rjmp	.-26     	; 0xf88 <__addsf3x+0x38>
     fa2:	46 95       	lsr	r20
     fa4:	37 95       	ror	r19
     fa6:	27 95       	ror	r18
     fa8:	a7 95       	ror	r26
     faa:	f0 40       	sbci	r31, 0x00	; 0
     fac:	53 95       	inc	r21
     fae:	c9 f7       	brne	.-14     	; 0xfa2 <__addsf3x+0x52>
     fb0:	7e f4       	brtc	.+30     	; 0xfd0 <__addsf3x+0x80>
     fb2:	1f 16       	cp	r1, r31
     fb4:	ba 0b       	sbc	r27, r26
     fb6:	62 0b       	sbc	r22, r18
     fb8:	73 0b       	sbc	r23, r19
     fba:	84 0b       	sbc	r24, r20
     fbc:	ba f0       	brmi	.+46     	; 0xfec <__addsf3x+0x9c>
     fbe:	91 50       	subi	r25, 0x01	; 1
     fc0:	a1 f0       	breq	.+40     	; 0xfea <__addsf3x+0x9a>
     fc2:	ff 0f       	add	r31, r31
     fc4:	bb 1f       	adc	r27, r27
     fc6:	66 1f       	adc	r22, r22
     fc8:	77 1f       	adc	r23, r23
     fca:	88 1f       	adc	r24, r24
     fcc:	c2 f7       	brpl	.-16     	; 0xfbe <__addsf3x+0x6e>
     fce:	0e c0       	rjmp	.+28     	; 0xfec <__addsf3x+0x9c>
     fd0:	ba 0f       	add	r27, r26
     fd2:	62 1f       	adc	r22, r18
     fd4:	73 1f       	adc	r23, r19
     fd6:	84 1f       	adc	r24, r20
     fd8:	48 f4       	brcc	.+18     	; 0xfec <__addsf3x+0x9c>
     fda:	87 95       	ror	r24
     fdc:	77 95       	ror	r23
     fde:	67 95       	ror	r22
     fe0:	b7 95       	ror	r27
     fe2:	f7 95       	ror	r31
     fe4:	9e 3f       	cpi	r25, 0xFE	; 254
     fe6:	08 f0       	brcs	.+2      	; 0xfea <__addsf3x+0x9a>
     fe8:	b0 cf       	rjmp	.-160    	; 0xf4a <__addsf3+0x28>
     fea:	93 95       	inc	r25
     fec:	88 0f       	add	r24, r24
     fee:	08 f0       	brcs	.+2      	; 0xff2 <__addsf3x+0xa2>
     ff0:	99 27       	eor	r25, r25
     ff2:	ee 0f       	add	r30, r30
     ff4:	97 95       	ror	r25
     ff6:	87 95       	ror	r24
     ff8:	08 95       	ret

00000ffa <__floatunsisf>:
     ffa:	e8 94       	clt
     ffc:	09 c0       	rjmp	.+18     	; 0x1010 <__floatsisf+0x12>

00000ffe <__floatsisf>:
     ffe:	97 fb       	bst	r25, 7
    1000:	3e f4       	brtc	.+14     	; 0x1010 <__floatsisf+0x12>
    1002:	90 95       	com	r25
    1004:	80 95       	com	r24
    1006:	70 95       	com	r23
    1008:	61 95       	neg	r22
    100a:	7f 4f       	sbci	r23, 0xFF	; 255
    100c:	8f 4f       	sbci	r24, 0xFF	; 255
    100e:	9f 4f       	sbci	r25, 0xFF	; 255
    1010:	99 23       	and	r25, r25
    1012:	a9 f0       	breq	.+42     	; 0x103e <__floatsisf+0x40>
    1014:	f9 2f       	mov	r31, r25
    1016:	96 e9       	ldi	r25, 0x96	; 150
    1018:	bb 27       	eor	r27, r27
    101a:	93 95       	inc	r25
    101c:	f6 95       	lsr	r31
    101e:	87 95       	ror	r24
    1020:	77 95       	ror	r23
    1022:	67 95       	ror	r22
    1024:	b7 95       	ror	r27
    1026:	f1 11       	cpse	r31, r1
    1028:	f8 cf       	rjmp	.-16     	; 0x101a <__floatsisf+0x1c>
    102a:	fa f4       	brpl	.+62     	; 0x106a <__floatsisf+0x6c>
    102c:	bb 0f       	add	r27, r27
    102e:	11 f4       	brne	.+4      	; 0x1034 <__floatsisf+0x36>
    1030:	60 ff       	sbrs	r22, 0
    1032:	1b c0       	rjmp	.+54     	; 0x106a <__floatsisf+0x6c>
    1034:	6f 5f       	subi	r22, 0xFF	; 255
    1036:	7f 4f       	sbci	r23, 0xFF	; 255
    1038:	8f 4f       	sbci	r24, 0xFF	; 255
    103a:	9f 4f       	sbci	r25, 0xFF	; 255
    103c:	16 c0       	rjmp	.+44     	; 0x106a <__floatsisf+0x6c>
    103e:	88 23       	and	r24, r24
    1040:	11 f0       	breq	.+4      	; 0x1046 <__floatsisf+0x48>
    1042:	96 e9       	ldi	r25, 0x96	; 150
    1044:	11 c0       	rjmp	.+34     	; 0x1068 <__floatsisf+0x6a>
    1046:	77 23       	and	r23, r23
    1048:	21 f0       	breq	.+8      	; 0x1052 <__floatsisf+0x54>
    104a:	9e e8       	ldi	r25, 0x8E	; 142
    104c:	87 2f       	mov	r24, r23
    104e:	76 2f       	mov	r23, r22
    1050:	05 c0       	rjmp	.+10     	; 0x105c <__floatsisf+0x5e>
    1052:	66 23       	and	r22, r22
    1054:	71 f0       	breq	.+28     	; 0x1072 <__floatsisf+0x74>
    1056:	96 e8       	ldi	r25, 0x86	; 134
    1058:	86 2f       	mov	r24, r22
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	60 e0       	ldi	r22, 0x00	; 0
    105e:	2a f0       	brmi	.+10     	; 0x106a <__floatsisf+0x6c>
    1060:	9a 95       	dec	r25
    1062:	66 0f       	add	r22, r22
    1064:	77 1f       	adc	r23, r23
    1066:	88 1f       	adc	r24, r24
    1068:	da f7       	brpl	.-10     	; 0x1060 <__floatsisf+0x62>
    106a:	88 0f       	add	r24, r24
    106c:	96 95       	lsr	r25
    106e:	87 95       	ror	r24
    1070:	97 f9       	bld	r25, 7
    1072:	08 95       	ret

00001074 <__fp_inf>:
    1074:	97 f9       	bld	r25, 7
    1076:	9f 67       	ori	r25, 0x7F	; 127
    1078:	80 e8       	ldi	r24, 0x80	; 128
    107a:	70 e0       	ldi	r23, 0x00	; 0
    107c:	60 e0       	ldi	r22, 0x00	; 0
    107e:	08 95       	ret

00001080 <__fp_nan>:
    1080:	9f ef       	ldi	r25, 0xFF	; 255
    1082:	80 ec       	ldi	r24, 0xC0	; 192
    1084:	08 95       	ret

00001086 <__fp_pscA>:
    1086:	00 24       	eor	r0, r0
    1088:	0a 94       	dec	r0
    108a:	16 16       	cp	r1, r22
    108c:	17 06       	cpc	r1, r23
    108e:	18 06       	cpc	r1, r24
    1090:	09 06       	cpc	r0, r25
    1092:	08 95       	ret

00001094 <__fp_pscB>:
    1094:	00 24       	eor	r0, r0
    1096:	0a 94       	dec	r0
    1098:	12 16       	cp	r1, r18
    109a:	13 06       	cpc	r1, r19
    109c:	14 06       	cpc	r1, r20
    109e:	05 06       	cpc	r0, r21
    10a0:	08 95       	ret

000010a2 <__fp_round>:
    10a2:	09 2e       	mov	r0, r25
    10a4:	03 94       	inc	r0
    10a6:	00 0c       	add	r0, r0
    10a8:	11 f4       	brne	.+4      	; 0x10ae <__fp_round+0xc>
    10aa:	88 23       	and	r24, r24
    10ac:	52 f0       	brmi	.+20     	; 0x10c2 <__fp_round+0x20>
    10ae:	bb 0f       	add	r27, r27
    10b0:	40 f4       	brcc	.+16     	; 0x10c2 <__fp_round+0x20>
    10b2:	bf 2b       	or	r27, r31
    10b4:	11 f4       	brne	.+4      	; 0x10ba <__fp_round+0x18>
    10b6:	60 ff       	sbrs	r22, 0
    10b8:	04 c0       	rjmp	.+8      	; 0x10c2 <__fp_round+0x20>
    10ba:	6f 5f       	subi	r22, 0xFF	; 255
    10bc:	7f 4f       	sbci	r23, 0xFF	; 255
    10be:	8f 4f       	sbci	r24, 0xFF	; 255
    10c0:	9f 4f       	sbci	r25, 0xFF	; 255
    10c2:	08 95       	ret

000010c4 <__fp_split3>:
    10c4:	57 fd       	sbrc	r21, 7
    10c6:	90 58       	subi	r25, 0x80	; 128
    10c8:	44 0f       	add	r20, r20
    10ca:	55 1f       	adc	r21, r21
    10cc:	59 f0       	breq	.+22     	; 0x10e4 <__fp_splitA+0x10>
    10ce:	5f 3f       	cpi	r21, 0xFF	; 255
    10d0:	71 f0       	breq	.+28     	; 0x10ee <__fp_splitA+0x1a>
    10d2:	47 95       	ror	r20

000010d4 <__fp_splitA>:
    10d4:	88 0f       	add	r24, r24
    10d6:	97 fb       	bst	r25, 7
    10d8:	99 1f       	adc	r25, r25
    10da:	61 f0       	breq	.+24     	; 0x10f4 <__fp_splitA+0x20>
    10dc:	9f 3f       	cpi	r25, 0xFF	; 255
    10de:	79 f0       	breq	.+30     	; 0x10fe <__fp_splitA+0x2a>
    10e0:	87 95       	ror	r24
    10e2:	08 95       	ret
    10e4:	12 16       	cp	r1, r18
    10e6:	13 06       	cpc	r1, r19
    10e8:	14 06       	cpc	r1, r20
    10ea:	55 1f       	adc	r21, r21
    10ec:	f2 cf       	rjmp	.-28     	; 0x10d2 <__fp_split3+0xe>
    10ee:	46 95       	lsr	r20
    10f0:	f1 df       	rcall	.-30     	; 0x10d4 <__fp_splitA>
    10f2:	08 c0       	rjmp	.+16     	; 0x1104 <__fp_splitA+0x30>
    10f4:	16 16       	cp	r1, r22
    10f6:	17 06       	cpc	r1, r23
    10f8:	18 06       	cpc	r1, r24
    10fa:	99 1f       	adc	r25, r25
    10fc:	f1 cf       	rjmp	.-30     	; 0x10e0 <__fp_splitA+0xc>
    10fe:	86 95       	lsr	r24
    1100:	71 05       	cpc	r23, r1
    1102:	61 05       	cpc	r22, r1
    1104:	08 94       	sec
    1106:	08 95       	ret

00001108 <__fp_zero>:
    1108:	e8 94       	clt

0000110a <__fp_szero>:
    110a:	bb 27       	eor	r27, r27
    110c:	66 27       	eor	r22, r22
    110e:	77 27       	eor	r23, r23
    1110:	cb 01       	movw	r24, r22
    1112:	97 f9       	bld	r25, 7
    1114:	08 95       	ret

00001116 <__mulsf3>:
    1116:	0e 94 9e 08 	call	0x113c	; 0x113c <__mulsf3x>
    111a:	0c 94 51 08 	jmp	0x10a2	; 0x10a2 <__fp_round>
    111e:	0e 94 43 08 	call	0x1086	; 0x1086 <__fp_pscA>
    1122:	38 f0       	brcs	.+14     	; 0x1132 <__mulsf3+0x1c>
    1124:	0e 94 4a 08 	call	0x1094	; 0x1094 <__fp_pscB>
    1128:	20 f0       	brcs	.+8      	; 0x1132 <__mulsf3+0x1c>
    112a:	95 23       	and	r25, r21
    112c:	11 f0       	breq	.+4      	; 0x1132 <__mulsf3+0x1c>
    112e:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__fp_inf>
    1132:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__fp_nan>
    1136:	11 24       	eor	r1, r1
    1138:	0c 94 85 08 	jmp	0x110a	; 0x110a <__fp_szero>

0000113c <__mulsf3x>:
    113c:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__fp_split3>
    1140:	70 f3       	brcs	.-36     	; 0x111e <__mulsf3+0x8>

00001142 <__mulsf3_pse>:
    1142:	95 9f       	mul	r25, r21
    1144:	c1 f3       	breq	.-16     	; 0x1136 <__mulsf3+0x20>
    1146:	95 0f       	add	r25, r21
    1148:	50 e0       	ldi	r21, 0x00	; 0
    114a:	55 1f       	adc	r21, r21
    114c:	62 9f       	mul	r22, r18
    114e:	f0 01       	movw	r30, r0
    1150:	72 9f       	mul	r23, r18
    1152:	bb 27       	eor	r27, r27
    1154:	f0 0d       	add	r31, r0
    1156:	b1 1d       	adc	r27, r1
    1158:	63 9f       	mul	r22, r19
    115a:	aa 27       	eor	r26, r26
    115c:	f0 0d       	add	r31, r0
    115e:	b1 1d       	adc	r27, r1
    1160:	aa 1f       	adc	r26, r26
    1162:	64 9f       	mul	r22, r20
    1164:	66 27       	eor	r22, r22
    1166:	b0 0d       	add	r27, r0
    1168:	a1 1d       	adc	r26, r1
    116a:	66 1f       	adc	r22, r22
    116c:	82 9f       	mul	r24, r18
    116e:	22 27       	eor	r18, r18
    1170:	b0 0d       	add	r27, r0
    1172:	a1 1d       	adc	r26, r1
    1174:	62 1f       	adc	r22, r18
    1176:	73 9f       	mul	r23, r19
    1178:	b0 0d       	add	r27, r0
    117a:	a1 1d       	adc	r26, r1
    117c:	62 1f       	adc	r22, r18
    117e:	83 9f       	mul	r24, r19
    1180:	a0 0d       	add	r26, r0
    1182:	61 1d       	adc	r22, r1
    1184:	22 1f       	adc	r18, r18
    1186:	74 9f       	mul	r23, r20
    1188:	33 27       	eor	r19, r19
    118a:	a0 0d       	add	r26, r0
    118c:	61 1d       	adc	r22, r1
    118e:	23 1f       	adc	r18, r19
    1190:	84 9f       	mul	r24, r20
    1192:	60 0d       	add	r22, r0
    1194:	21 1d       	adc	r18, r1
    1196:	82 2f       	mov	r24, r18
    1198:	76 2f       	mov	r23, r22
    119a:	6a 2f       	mov	r22, r26
    119c:	11 24       	eor	r1, r1
    119e:	9f 57       	subi	r25, 0x7F	; 127
    11a0:	50 40       	sbci	r21, 0x00	; 0
    11a2:	9a f0       	brmi	.+38     	; 0x11ca <__mulsf3_pse+0x88>
    11a4:	f1 f0       	breq	.+60     	; 0x11e2 <__mulsf3_pse+0xa0>
    11a6:	88 23       	and	r24, r24
    11a8:	4a f0       	brmi	.+18     	; 0x11bc <__mulsf3_pse+0x7a>
    11aa:	ee 0f       	add	r30, r30
    11ac:	ff 1f       	adc	r31, r31
    11ae:	bb 1f       	adc	r27, r27
    11b0:	66 1f       	adc	r22, r22
    11b2:	77 1f       	adc	r23, r23
    11b4:	88 1f       	adc	r24, r24
    11b6:	91 50       	subi	r25, 0x01	; 1
    11b8:	50 40       	sbci	r21, 0x00	; 0
    11ba:	a9 f7       	brne	.-22     	; 0x11a6 <__mulsf3_pse+0x64>
    11bc:	9e 3f       	cpi	r25, 0xFE	; 254
    11be:	51 05       	cpc	r21, r1
    11c0:	80 f0       	brcs	.+32     	; 0x11e2 <__mulsf3_pse+0xa0>
    11c2:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__fp_inf>
    11c6:	0c 94 85 08 	jmp	0x110a	; 0x110a <__fp_szero>
    11ca:	5f 3f       	cpi	r21, 0xFF	; 255
    11cc:	e4 f3       	brlt	.-8      	; 0x11c6 <__mulsf3_pse+0x84>
    11ce:	98 3e       	cpi	r25, 0xE8	; 232
    11d0:	d4 f3       	brlt	.-12     	; 0x11c6 <__mulsf3_pse+0x84>
    11d2:	86 95       	lsr	r24
    11d4:	77 95       	ror	r23
    11d6:	67 95       	ror	r22
    11d8:	b7 95       	ror	r27
    11da:	f7 95       	ror	r31
    11dc:	e7 95       	ror	r30
    11de:	9f 5f       	subi	r25, 0xFF	; 255
    11e0:	c1 f7       	brne	.-16     	; 0x11d2 <__mulsf3_pse+0x90>
    11e2:	fe 2b       	or	r31, r30
    11e4:	88 0f       	add	r24, r24
    11e6:	91 1d       	adc	r25, r1
    11e8:	96 95       	lsr	r25
    11ea:	87 95       	ror	r24
    11ec:	97 f9       	bld	r25, 7
    11ee:	08 95       	ret

000011f0 <__tablejump2__>:
    11f0:	ee 0f       	add	r30, r30
    11f2:	ff 1f       	adc	r31, r31
    11f4:	05 90       	lpm	r0, Z+
    11f6:	f4 91       	lpm	r31, Z
    11f8:	e0 2d       	mov	r30, r0
    11fa:	09 94       	ijmp

000011fc <dtostrf>:
    11fc:	ef 92       	push	r14
    11fe:	0f 93       	push	r16
    1200:	1f 93       	push	r17
    1202:	cf 93       	push	r28
    1204:	df 93       	push	r29
    1206:	e8 01       	movw	r28, r16
    1208:	47 fd       	sbrc	r20, 7
    120a:	02 c0       	rjmp	.+4      	; 0x1210 <dtostrf+0x14>
    120c:	34 e0       	ldi	r19, 0x04	; 4
    120e:	01 c0       	rjmp	.+2      	; 0x1212 <dtostrf+0x16>
    1210:	34 e1       	ldi	r19, 0x14	; 20
    1212:	04 2e       	mov	r0, r20
    1214:	00 0c       	add	r0, r0
    1216:	55 0b       	sbc	r21, r21
    1218:	57 ff       	sbrs	r21, 7
    121a:	03 c0       	rjmp	.+6      	; 0x1222 <dtostrf+0x26>
    121c:	51 95       	neg	r21
    121e:	41 95       	neg	r20
    1220:	51 09       	sbc	r21, r1
    1222:	e3 2e       	mov	r14, r19
    1224:	02 2f       	mov	r16, r18
    1226:	24 2f       	mov	r18, r20
    1228:	ae 01       	movw	r20, r28
    122a:	0e 94 2f 0b 	call	0x165e	; 0x165e <dtoa_prf>
    122e:	ce 01       	movw	r24, r28
    1230:	df 91       	pop	r29
    1232:	cf 91       	pop	r28
    1234:	1f 91       	pop	r17
    1236:	0f 91       	pop	r16
    1238:	ef 90       	pop	r14
    123a:	08 95       	ret

0000123c <snprintf>:
    123c:	ae e0       	ldi	r26, 0x0E	; 14
    123e:	b0 e0       	ldi	r27, 0x00	; 0
    1240:	e4 e2       	ldi	r30, 0x24	; 36
    1242:	f9 e0       	ldi	r31, 0x09	; 9
    1244:	0c 94 1f 0e 	jmp	0x1c3e	; 0x1c3e <__prologue_saves__+0x1c>
    1248:	0d 89       	ldd	r16, Y+21	; 0x15
    124a:	1e 89       	ldd	r17, Y+22	; 0x16
    124c:	8f 89       	ldd	r24, Y+23	; 0x17
    124e:	98 8d       	ldd	r25, Y+24	; 0x18
    1250:	26 e0       	ldi	r18, 0x06	; 6
    1252:	2c 83       	std	Y+4, r18	; 0x04
    1254:	1a 83       	std	Y+2, r17	; 0x02
    1256:	09 83       	std	Y+1, r16	; 0x01
    1258:	97 ff       	sbrs	r25, 7
    125a:	02 c0       	rjmp	.+4      	; 0x1260 <snprintf+0x24>
    125c:	80 e0       	ldi	r24, 0x00	; 0
    125e:	90 e8       	ldi	r25, 0x80	; 128
    1260:	01 97       	sbiw	r24, 0x01	; 1
    1262:	9e 83       	std	Y+6, r25	; 0x06
    1264:	8d 83       	std	Y+5, r24	; 0x05
    1266:	ae 01       	movw	r20, r28
    1268:	45 5e       	subi	r20, 0xE5	; 229
    126a:	5f 4f       	sbci	r21, 0xFF	; 255
    126c:	69 8d       	ldd	r22, Y+25	; 0x19
    126e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1270:	ce 01       	movw	r24, r28
    1272:	01 96       	adiw	r24, 0x01	; 1
    1274:	0e 94 4e 09 	call	0x129c	; 0x129c <vfprintf>
    1278:	4d 81       	ldd	r20, Y+5	; 0x05
    127a:	5e 81       	ldd	r21, Y+6	; 0x06
    127c:	57 fd       	sbrc	r21, 7
    127e:	0a c0       	rjmp	.+20     	; 0x1294 <snprintf+0x58>
    1280:	2f 81       	ldd	r18, Y+7	; 0x07
    1282:	38 85       	ldd	r19, Y+8	; 0x08
    1284:	42 17       	cp	r20, r18
    1286:	53 07       	cpc	r21, r19
    1288:	0c f4       	brge	.+2      	; 0x128c <snprintf+0x50>
    128a:	9a 01       	movw	r18, r20
    128c:	f8 01       	movw	r30, r16
    128e:	e2 0f       	add	r30, r18
    1290:	f3 1f       	adc	r31, r19
    1292:	10 82       	st	Z, r1
    1294:	2e 96       	adiw	r28, 0x0e	; 14
    1296:	e4 e0       	ldi	r30, 0x04	; 4
    1298:	0c 94 3b 0e 	jmp	0x1c76	; 0x1c76 <__epilogue_restores__+0x1c>

0000129c <vfprintf>:
    129c:	ab e0       	ldi	r26, 0x0B	; 11
    129e:	b0 e0       	ldi	r27, 0x00	; 0
    12a0:	e4 e5       	ldi	r30, 0x54	; 84
    12a2:	f9 e0       	ldi	r31, 0x09	; 9
    12a4:	0c 94 11 0e 	jmp	0x1c22	; 0x1c22 <__prologue_saves__>
    12a8:	6c 01       	movw	r12, r24
    12aa:	7b 01       	movw	r14, r22
    12ac:	8a 01       	movw	r16, r20
    12ae:	fc 01       	movw	r30, r24
    12b0:	17 82       	std	Z+7, r1	; 0x07
    12b2:	16 82       	std	Z+6, r1	; 0x06
    12b4:	83 81       	ldd	r24, Z+3	; 0x03
    12b6:	81 ff       	sbrs	r24, 1
    12b8:	cc c1       	rjmp	.+920    	; 0x1652 <vfprintf+0x3b6>
    12ba:	ce 01       	movw	r24, r28
    12bc:	01 96       	adiw	r24, 0x01	; 1
    12be:	3c 01       	movw	r6, r24
    12c0:	f6 01       	movw	r30, r12
    12c2:	93 81       	ldd	r25, Z+3	; 0x03
    12c4:	f7 01       	movw	r30, r14
    12c6:	93 fd       	sbrc	r25, 3
    12c8:	85 91       	lpm	r24, Z+
    12ca:	93 ff       	sbrs	r25, 3
    12cc:	81 91       	ld	r24, Z+
    12ce:	7f 01       	movw	r14, r30
    12d0:	88 23       	and	r24, r24
    12d2:	09 f4       	brne	.+2      	; 0x12d6 <vfprintf+0x3a>
    12d4:	ba c1       	rjmp	.+884    	; 0x164a <vfprintf+0x3ae>
    12d6:	85 32       	cpi	r24, 0x25	; 37
    12d8:	39 f4       	brne	.+14     	; 0x12e8 <vfprintf+0x4c>
    12da:	93 fd       	sbrc	r25, 3
    12dc:	85 91       	lpm	r24, Z+
    12de:	93 ff       	sbrs	r25, 3
    12e0:	81 91       	ld	r24, Z+
    12e2:	7f 01       	movw	r14, r30
    12e4:	85 32       	cpi	r24, 0x25	; 37
    12e6:	29 f4       	brne	.+10     	; 0x12f2 <vfprintf+0x56>
    12e8:	b6 01       	movw	r22, r12
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    12f0:	e7 cf       	rjmp	.-50     	; 0x12c0 <vfprintf+0x24>
    12f2:	91 2c       	mov	r9, r1
    12f4:	21 2c       	mov	r2, r1
    12f6:	31 2c       	mov	r3, r1
    12f8:	ff e1       	ldi	r31, 0x1F	; 31
    12fa:	f3 15       	cp	r31, r3
    12fc:	d8 f0       	brcs	.+54     	; 0x1334 <vfprintf+0x98>
    12fe:	8b 32       	cpi	r24, 0x2B	; 43
    1300:	79 f0       	breq	.+30     	; 0x1320 <vfprintf+0x84>
    1302:	38 f4       	brcc	.+14     	; 0x1312 <vfprintf+0x76>
    1304:	80 32       	cpi	r24, 0x20	; 32
    1306:	79 f0       	breq	.+30     	; 0x1326 <vfprintf+0x8a>
    1308:	83 32       	cpi	r24, 0x23	; 35
    130a:	a1 f4       	brne	.+40     	; 0x1334 <vfprintf+0x98>
    130c:	23 2d       	mov	r18, r3
    130e:	20 61       	ori	r18, 0x10	; 16
    1310:	1d c0       	rjmp	.+58     	; 0x134c <vfprintf+0xb0>
    1312:	8d 32       	cpi	r24, 0x2D	; 45
    1314:	61 f0       	breq	.+24     	; 0x132e <vfprintf+0x92>
    1316:	80 33       	cpi	r24, 0x30	; 48
    1318:	69 f4       	brne	.+26     	; 0x1334 <vfprintf+0x98>
    131a:	23 2d       	mov	r18, r3
    131c:	21 60       	ori	r18, 0x01	; 1
    131e:	16 c0       	rjmp	.+44     	; 0x134c <vfprintf+0xb0>
    1320:	83 2d       	mov	r24, r3
    1322:	82 60       	ori	r24, 0x02	; 2
    1324:	38 2e       	mov	r3, r24
    1326:	e3 2d       	mov	r30, r3
    1328:	e4 60       	ori	r30, 0x04	; 4
    132a:	3e 2e       	mov	r3, r30
    132c:	2a c0       	rjmp	.+84     	; 0x1382 <vfprintf+0xe6>
    132e:	f3 2d       	mov	r31, r3
    1330:	f8 60       	ori	r31, 0x08	; 8
    1332:	1d c0       	rjmp	.+58     	; 0x136e <vfprintf+0xd2>
    1334:	37 fc       	sbrc	r3, 7
    1336:	2d c0       	rjmp	.+90     	; 0x1392 <vfprintf+0xf6>
    1338:	20 ed       	ldi	r18, 0xD0	; 208
    133a:	28 0f       	add	r18, r24
    133c:	2a 30       	cpi	r18, 0x0A	; 10
    133e:	40 f0       	brcs	.+16     	; 0x1350 <vfprintf+0xb4>
    1340:	8e 32       	cpi	r24, 0x2E	; 46
    1342:	b9 f4       	brne	.+46     	; 0x1372 <vfprintf+0xd6>
    1344:	36 fc       	sbrc	r3, 6
    1346:	81 c1       	rjmp	.+770    	; 0x164a <vfprintf+0x3ae>
    1348:	23 2d       	mov	r18, r3
    134a:	20 64       	ori	r18, 0x40	; 64
    134c:	32 2e       	mov	r3, r18
    134e:	19 c0       	rjmp	.+50     	; 0x1382 <vfprintf+0xe6>
    1350:	36 fe       	sbrs	r3, 6
    1352:	06 c0       	rjmp	.+12     	; 0x1360 <vfprintf+0xc4>
    1354:	8a e0       	ldi	r24, 0x0A	; 10
    1356:	98 9e       	mul	r9, r24
    1358:	20 0d       	add	r18, r0
    135a:	11 24       	eor	r1, r1
    135c:	92 2e       	mov	r9, r18
    135e:	11 c0       	rjmp	.+34     	; 0x1382 <vfprintf+0xe6>
    1360:	ea e0       	ldi	r30, 0x0A	; 10
    1362:	2e 9e       	mul	r2, r30
    1364:	20 0d       	add	r18, r0
    1366:	11 24       	eor	r1, r1
    1368:	22 2e       	mov	r2, r18
    136a:	f3 2d       	mov	r31, r3
    136c:	f0 62       	ori	r31, 0x20	; 32
    136e:	3f 2e       	mov	r3, r31
    1370:	08 c0       	rjmp	.+16     	; 0x1382 <vfprintf+0xe6>
    1372:	8c 36       	cpi	r24, 0x6C	; 108
    1374:	21 f4       	brne	.+8      	; 0x137e <vfprintf+0xe2>
    1376:	83 2d       	mov	r24, r3
    1378:	80 68       	ori	r24, 0x80	; 128
    137a:	38 2e       	mov	r3, r24
    137c:	02 c0       	rjmp	.+4      	; 0x1382 <vfprintf+0xe6>
    137e:	88 36       	cpi	r24, 0x68	; 104
    1380:	41 f4       	brne	.+16     	; 0x1392 <vfprintf+0xf6>
    1382:	f7 01       	movw	r30, r14
    1384:	93 fd       	sbrc	r25, 3
    1386:	85 91       	lpm	r24, Z+
    1388:	93 ff       	sbrs	r25, 3
    138a:	81 91       	ld	r24, Z+
    138c:	7f 01       	movw	r14, r30
    138e:	81 11       	cpse	r24, r1
    1390:	b3 cf       	rjmp	.-154    	; 0x12f8 <vfprintf+0x5c>
    1392:	98 2f       	mov	r25, r24
    1394:	9f 7d       	andi	r25, 0xDF	; 223
    1396:	95 54       	subi	r25, 0x45	; 69
    1398:	93 30       	cpi	r25, 0x03	; 3
    139a:	28 f4       	brcc	.+10     	; 0x13a6 <vfprintf+0x10a>
    139c:	0c 5f       	subi	r16, 0xFC	; 252
    139e:	1f 4f       	sbci	r17, 0xFF	; 255
    13a0:	9f e3       	ldi	r25, 0x3F	; 63
    13a2:	99 83       	std	Y+1, r25	; 0x01
    13a4:	0d c0       	rjmp	.+26     	; 0x13c0 <vfprintf+0x124>
    13a6:	83 36       	cpi	r24, 0x63	; 99
    13a8:	31 f0       	breq	.+12     	; 0x13b6 <vfprintf+0x11a>
    13aa:	83 37       	cpi	r24, 0x73	; 115
    13ac:	71 f0       	breq	.+28     	; 0x13ca <vfprintf+0x12e>
    13ae:	83 35       	cpi	r24, 0x53	; 83
    13b0:	09 f0       	breq	.+2      	; 0x13b4 <vfprintf+0x118>
    13b2:	59 c0       	rjmp	.+178    	; 0x1466 <vfprintf+0x1ca>
    13b4:	21 c0       	rjmp	.+66     	; 0x13f8 <vfprintf+0x15c>
    13b6:	f8 01       	movw	r30, r16
    13b8:	80 81       	ld	r24, Z
    13ba:	89 83       	std	Y+1, r24	; 0x01
    13bc:	0e 5f       	subi	r16, 0xFE	; 254
    13be:	1f 4f       	sbci	r17, 0xFF	; 255
    13c0:	88 24       	eor	r8, r8
    13c2:	83 94       	inc	r8
    13c4:	91 2c       	mov	r9, r1
    13c6:	53 01       	movw	r10, r6
    13c8:	13 c0       	rjmp	.+38     	; 0x13f0 <vfprintf+0x154>
    13ca:	28 01       	movw	r4, r16
    13cc:	f2 e0       	ldi	r31, 0x02	; 2
    13ce:	4f 0e       	add	r4, r31
    13d0:	51 1c       	adc	r5, r1
    13d2:	f8 01       	movw	r30, r16
    13d4:	a0 80       	ld	r10, Z
    13d6:	b1 80       	ldd	r11, Z+1	; 0x01
    13d8:	36 fe       	sbrs	r3, 6
    13da:	03 c0       	rjmp	.+6      	; 0x13e2 <vfprintf+0x146>
    13dc:	69 2d       	mov	r22, r9
    13de:	70 e0       	ldi	r23, 0x00	; 0
    13e0:	02 c0       	rjmp	.+4      	; 0x13e6 <vfprintf+0x14a>
    13e2:	6f ef       	ldi	r22, 0xFF	; 255
    13e4:	7f ef       	ldi	r23, 0xFF	; 255
    13e6:	c5 01       	movw	r24, r10
    13e8:	0e 94 6c 0d 	call	0x1ad8	; 0x1ad8 <strnlen>
    13ec:	4c 01       	movw	r8, r24
    13ee:	82 01       	movw	r16, r4
    13f0:	f3 2d       	mov	r31, r3
    13f2:	ff 77       	andi	r31, 0x7F	; 127
    13f4:	3f 2e       	mov	r3, r31
    13f6:	16 c0       	rjmp	.+44     	; 0x1424 <vfprintf+0x188>
    13f8:	28 01       	movw	r4, r16
    13fa:	22 e0       	ldi	r18, 0x02	; 2
    13fc:	42 0e       	add	r4, r18
    13fe:	51 1c       	adc	r5, r1
    1400:	f8 01       	movw	r30, r16
    1402:	a0 80       	ld	r10, Z
    1404:	b1 80       	ldd	r11, Z+1	; 0x01
    1406:	36 fe       	sbrs	r3, 6
    1408:	03 c0       	rjmp	.+6      	; 0x1410 <vfprintf+0x174>
    140a:	69 2d       	mov	r22, r9
    140c:	70 e0       	ldi	r23, 0x00	; 0
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <vfprintf+0x178>
    1410:	6f ef       	ldi	r22, 0xFF	; 255
    1412:	7f ef       	ldi	r23, 0xFF	; 255
    1414:	c5 01       	movw	r24, r10
    1416:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <strnlen_P>
    141a:	4c 01       	movw	r8, r24
    141c:	f3 2d       	mov	r31, r3
    141e:	f0 68       	ori	r31, 0x80	; 128
    1420:	3f 2e       	mov	r3, r31
    1422:	82 01       	movw	r16, r4
    1424:	33 fc       	sbrc	r3, 3
    1426:	1b c0       	rjmp	.+54     	; 0x145e <vfprintf+0x1c2>
    1428:	82 2d       	mov	r24, r2
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	88 16       	cp	r8, r24
    142e:	99 06       	cpc	r9, r25
    1430:	b0 f4       	brcc	.+44     	; 0x145e <vfprintf+0x1c2>
    1432:	b6 01       	movw	r22, r12
    1434:	80 e2       	ldi	r24, 0x20	; 32
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    143c:	2a 94       	dec	r2
    143e:	f4 cf       	rjmp	.-24     	; 0x1428 <vfprintf+0x18c>
    1440:	f5 01       	movw	r30, r10
    1442:	37 fc       	sbrc	r3, 7
    1444:	85 91       	lpm	r24, Z+
    1446:	37 fe       	sbrs	r3, 7
    1448:	81 91       	ld	r24, Z+
    144a:	5f 01       	movw	r10, r30
    144c:	b6 01       	movw	r22, r12
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    1454:	21 10       	cpse	r2, r1
    1456:	2a 94       	dec	r2
    1458:	21 e0       	ldi	r18, 0x01	; 1
    145a:	82 1a       	sub	r8, r18
    145c:	91 08       	sbc	r9, r1
    145e:	81 14       	cp	r8, r1
    1460:	91 04       	cpc	r9, r1
    1462:	71 f7       	brne	.-36     	; 0x1440 <vfprintf+0x1a4>
    1464:	e8 c0       	rjmp	.+464    	; 0x1636 <vfprintf+0x39a>
    1466:	84 36       	cpi	r24, 0x64	; 100
    1468:	11 f0       	breq	.+4      	; 0x146e <vfprintf+0x1d2>
    146a:	89 36       	cpi	r24, 0x69	; 105
    146c:	41 f5       	brne	.+80     	; 0x14be <vfprintf+0x222>
    146e:	f8 01       	movw	r30, r16
    1470:	37 fe       	sbrs	r3, 7
    1472:	07 c0       	rjmp	.+14     	; 0x1482 <vfprintf+0x1e6>
    1474:	60 81       	ld	r22, Z
    1476:	71 81       	ldd	r23, Z+1	; 0x01
    1478:	82 81       	ldd	r24, Z+2	; 0x02
    147a:	93 81       	ldd	r25, Z+3	; 0x03
    147c:	0c 5f       	subi	r16, 0xFC	; 252
    147e:	1f 4f       	sbci	r17, 0xFF	; 255
    1480:	08 c0       	rjmp	.+16     	; 0x1492 <vfprintf+0x1f6>
    1482:	60 81       	ld	r22, Z
    1484:	71 81       	ldd	r23, Z+1	; 0x01
    1486:	07 2e       	mov	r0, r23
    1488:	00 0c       	add	r0, r0
    148a:	88 0b       	sbc	r24, r24
    148c:	99 0b       	sbc	r25, r25
    148e:	0e 5f       	subi	r16, 0xFE	; 254
    1490:	1f 4f       	sbci	r17, 0xFF	; 255
    1492:	f3 2d       	mov	r31, r3
    1494:	ff 76       	andi	r31, 0x6F	; 111
    1496:	3f 2e       	mov	r3, r31
    1498:	97 ff       	sbrs	r25, 7
    149a:	09 c0       	rjmp	.+18     	; 0x14ae <vfprintf+0x212>
    149c:	90 95       	com	r25
    149e:	80 95       	com	r24
    14a0:	70 95       	com	r23
    14a2:	61 95       	neg	r22
    14a4:	7f 4f       	sbci	r23, 0xFF	; 255
    14a6:	8f 4f       	sbci	r24, 0xFF	; 255
    14a8:	9f 4f       	sbci	r25, 0xFF	; 255
    14aa:	f0 68       	ori	r31, 0x80	; 128
    14ac:	3f 2e       	mov	r3, r31
    14ae:	2a e0       	ldi	r18, 0x0A	; 10
    14b0:	30 e0       	ldi	r19, 0x00	; 0
    14b2:	a3 01       	movw	r20, r6
    14b4:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__ultoa_invert>
    14b8:	88 2e       	mov	r8, r24
    14ba:	86 18       	sub	r8, r6
    14bc:	45 c0       	rjmp	.+138    	; 0x1548 <vfprintf+0x2ac>
    14be:	85 37       	cpi	r24, 0x75	; 117
    14c0:	31 f4       	brne	.+12     	; 0x14ce <vfprintf+0x232>
    14c2:	23 2d       	mov	r18, r3
    14c4:	2f 7e       	andi	r18, 0xEF	; 239
    14c6:	b2 2e       	mov	r11, r18
    14c8:	2a e0       	ldi	r18, 0x0A	; 10
    14ca:	30 e0       	ldi	r19, 0x00	; 0
    14cc:	25 c0       	rjmp	.+74     	; 0x1518 <vfprintf+0x27c>
    14ce:	93 2d       	mov	r25, r3
    14d0:	99 7f       	andi	r25, 0xF9	; 249
    14d2:	b9 2e       	mov	r11, r25
    14d4:	8f 36       	cpi	r24, 0x6F	; 111
    14d6:	c1 f0       	breq	.+48     	; 0x1508 <vfprintf+0x26c>
    14d8:	18 f4       	brcc	.+6      	; 0x14e0 <vfprintf+0x244>
    14da:	88 35       	cpi	r24, 0x58	; 88
    14dc:	79 f0       	breq	.+30     	; 0x14fc <vfprintf+0x260>
    14de:	b5 c0       	rjmp	.+362    	; 0x164a <vfprintf+0x3ae>
    14e0:	80 37       	cpi	r24, 0x70	; 112
    14e2:	19 f0       	breq	.+6      	; 0x14ea <vfprintf+0x24e>
    14e4:	88 37       	cpi	r24, 0x78	; 120
    14e6:	21 f0       	breq	.+8      	; 0x14f0 <vfprintf+0x254>
    14e8:	b0 c0       	rjmp	.+352    	; 0x164a <vfprintf+0x3ae>
    14ea:	e9 2f       	mov	r30, r25
    14ec:	e0 61       	ori	r30, 0x10	; 16
    14ee:	be 2e       	mov	r11, r30
    14f0:	b4 fe       	sbrs	r11, 4
    14f2:	0d c0       	rjmp	.+26     	; 0x150e <vfprintf+0x272>
    14f4:	fb 2d       	mov	r31, r11
    14f6:	f4 60       	ori	r31, 0x04	; 4
    14f8:	bf 2e       	mov	r11, r31
    14fa:	09 c0       	rjmp	.+18     	; 0x150e <vfprintf+0x272>
    14fc:	34 fe       	sbrs	r3, 4
    14fe:	0a c0       	rjmp	.+20     	; 0x1514 <vfprintf+0x278>
    1500:	29 2f       	mov	r18, r25
    1502:	26 60       	ori	r18, 0x06	; 6
    1504:	b2 2e       	mov	r11, r18
    1506:	06 c0       	rjmp	.+12     	; 0x1514 <vfprintf+0x278>
    1508:	28 e0       	ldi	r18, 0x08	; 8
    150a:	30 e0       	ldi	r19, 0x00	; 0
    150c:	05 c0       	rjmp	.+10     	; 0x1518 <vfprintf+0x27c>
    150e:	20 e1       	ldi	r18, 0x10	; 16
    1510:	30 e0       	ldi	r19, 0x00	; 0
    1512:	02 c0       	rjmp	.+4      	; 0x1518 <vfprintf+0x27c>
    1514:	20 e1       	ldi	r18, 0x10	; 16
    1516:	32 e0       	ldi	r19, 0x02	; 2
    1518:	f8 01       	movw	r30, r16
    151a:	b7 fe       	sbrs	r11, 7
    151c:	07 c0       	rjmp	.+14     	; 0x152c <vfprintf+0x290>
    151e:	60 81       	ld	r22, Z
    1520:	71 81       	ldd	r23, Z+1	; 0x01
    1522:	82 81       	ldd	r24, Z+2	; 0x02
    1524:	93 81       	ldd	r25, Z+3	; 0x03
    1526:	0c 5f       	subi	r16, 0xFC	; 252
    1528:	1f 4f       	sbci	r17, 0xFF	; 255
    152a:	06 c0       	rjmp	.+12     	; 0x1538 <vfprintf+0x29c>
    152c:	60 81       	ld	r22, Z
    152e:	71 81       	ldd	r23, Z+1	; 0x01
    1530:	80 e0       	ldi	r24, 0x00	; 0
    1532:	90 e0       	ldi	r25, 0x00	; 0
    1534:	0e 5f       	subi	r16, 0xFE	; 254
    1536:	1f 4f       	sbci	r17, 0xFF	; 255
    1538:	a3 01       	movw	r20, r6
    153a:	0e 94 b3 0d 	call	0x1b66	; 0x1b66 <__ultoa_invert>
    153e:	88 2e       	mov	r8, r24
    1540:	86 18       	sub	r8, r6
    1542:	fb 2d       	mov	r31, r11
    1544:	ff 77       	andi	r31, 0x7F	; 127
    1546:	3f 2e       	mov	r3, r31
    1548:	36 fe       	sbrs	r3, 6
    154a:	0d c0       	rjmp	.+26     	; 0x1566 <vfprintf+0x2ca>
    154c:	23 2d       	mov	r18, r3
    154e:	2e 7f       	andi	r18, 0xFE	; 254
    1550:	a2 2e       	mov	r10, r18
    1552:	89 14       	cp	r8, r9
    1554:	58 f4       	brcc	.+22     	; 0x156c <vfprintf+0x2d0>
    1556:	34 fe       	sbrs	r3, 4
    1558:	0b c0       	rjmp	.+22     	; 0x1570 <vfprintf+0x2d4>
    155a:	32 fc       	sbrc	r3, 2
    155c:	09 c0       	rjmp	.+18     	; 0x1570 <vfprintf+0x2d4>
    155e:	83 2d       	mov	r24, r3
    1560:	8e 7e       	andi	r24, 0xEE	; 238
    1562:	a8 2e       	mov	r10, r24
    1564:	05 c0       	rjmp	.+10     	; 0x1570 <vfprintf+0x2d4>
    1566:	b8 2c       	mov	r11, r8
    1568:	a3 2c       	mov	r10, r3
    156a:	03 c0       	rjmp	.+6      	; 0x1572 <vfprintf+0x2d6>
    156c:	b8 2c       	mov	r11, r8
    156e:	01 c0       	rjmp	.+2      	; 0x1572 <vfprintf+0x2d6>
    1570:	b9 2c       	mov	r11, r9
    1572:	a4 fe       	sbrs	r10, 4
    1574:	0f c0       	rjmp	.+30     	; 0x1594 <vfprintf+0x2f8>
    1576:	fe 01       	movw	r30, r28
    1578:	e8 0d       	add	r30, r8
    157a:	f1 1d       	adc	r31, r1
    157c:	80 81       	ld	r24, Z
    157e:	80 33       	cpi	r24, 0x30	; 48
    1580:	21 f4       	brne	.+8      	; 0x158a <vfprintf+0x2ee>
    1582:	9a 2d       	mov	r25, r10
    1584:	99 7e       	andi	r25, 0xE9	; 233
    1586:	a9 2e       	mov	r10, r25
    1588:	09 c0       	rjmp	.+18     	; 0x159c <vfprintf+0x300>
    158a:	a2 fe       	sbrs	r10, 2
    158c:	06 c0       	rjmp	.+12     	; 0x159a <vfprintf+0x2fe>
    158e:	b3 94       	inc	r11
    1590:	b3 94       	inc	r11
    1592:	04 c0       	rjmp	.+8      	; 0x159c <vfprintf+0x300>
    1594:	8a 2d       	mov	r24, r10
    1596:	86 78       	andi	r24, 0x86	; 134
    1598:	09 f0       	breq	.+2      	; 0x159c <vfprintf+0x300>
    159a:	b3 94       	inc	r11
    159c:	a3 fc       	sbrc	r10, 3
    159e:	11 c0       	rjmp	.+34     	; 0x15c2 <vfprintf+0x326>
    15a0:	a0 fe       	sbrs	r10, 0
    15a2:	06 c0       	rjmp	.+12     	; 0x15b0 <vfprintf+0x314>
    15a4:	b2 14       	cp	r11, r2
    15a6:	88 f4       	brcc	.+34     	; 0x15ca <vfprintf+0x32e>
    15a8:	28 0c       	add	r2, r8
    15aa:	92 2c       	mov	r9, r2
    15ac:	9b 18       	sub	r9, r11
    15ae:	0e c0       	rjmp	.+28     	; 0x15cc <vfprintf+0x330>
    15b0:	b2 14       	cp	r11, r2
    15b2:	60 f4       	brcc	.+24     	; 0x15cc <vfprintf+0x330>
    15b4:	b6 01       	movw	r22, r12
    15b6:	80 e2       	ldi	r24, 0x20	; 32
    15b8:	90 e0       	ldi	r25, 0x00	; 0
    15ba:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    15be:	b3 94       	inc	r11
    15c0:	f7 cf       	rjmp	.-18     	; 0x15b0 <vfprintf+0x314>
    15c2:	b2 14       	cp	r11, r2
    15c4:	18 f4       	brcc	.+6      	; 0x15cc <vfprintf+0x330>
    15c6:	2b 18       	sub	r2, r11
    15c8:	02 c0       	rjmp	.+4      	; 0x15ce <vfprintf+0x332>
    15ca:	98 2c       	mov	r9, r8
    15cc:	21 2c       	mov	r2, r1
    15ce:	a4 fe       	sbrs	r10, 4
    15d0:	10 c0       	rjmp	.+32     	; 0x15f2 <vfprintf+0x356>
    15d2:	b6 01       	movw	r22, r12
    15d4:	80 e3       	ldi	r24, 0x30	; 48
    15d6:	90 e0       	ldi	r25, 0x00	; 0
    15d8:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    15dc:	a2 fe       	sbrs	r10, 2
    15de:	17 c0       	rjmp	.+46     	; 0x160e <vfprintf+0x372>
    15e0:	a1 fc       	sbrc	r10, 1
    15e2:	03 c0       	rjmp	.+6      	; 0x15ea <vfprintf+0x34e>
    15e4:	88 e7       	ldi	r24, 0x78	; 120
    15e6:	90 e0       	ldi	r25, 0x00	; 0
    15e8:	02 c0       	rjmp	.+4      	; 0x15ee <vfprintf+0x352>
    15ea:	88 e5       	ldi	r24, 0x58	; 88
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	b6 01       	movw	r22, r12
    15f0:	0c c0       	rjmp	.+24     	; 0x160a <vfprintf+0x36e>
    15f2:	8a 2d       	mov	r24, r10
    15f4:	86 78       	andi	r24, 0x86	; 134
    15f6:	59 f0       	breq	.+22     	; 0x160e <vfprintf+0x372>
    15f8:	a1 fe       	sbrs	r10, 1
    15fa:	02 c0       	rjmp	.+4      	; 0x1600 <vfprintf+0x364>
    15fc:	8b e2       	ldi	r24, 0x2B	; 43
    15fe:	01 c0       	rjmp	.+2      	; 0x1602 <vfprintf+0x366>
    1600:	80 e2       	ldi	r24, 0x20	; 32
    1602:	a7 fc       	sbrc	r10, 7
    1604:	8d e2       	ldi	r24, 0x2D	; 45
    1606:	b6 01       	movw	r22, r12
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    160e:	89 14       	cp	r8, r9
    1610:	38 f4       	brcc	.+14     	; 0x1620 <vfprintf+0x384>
    1612:	b6 01       	movw	r22, r12
    1614:	80 e3       	ldi	r24, 0x30	; 48
    1616:	90 e0       	ldi	r25, 0x00	; 0
    1618:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    161c:	9a 94       	dec	r9
    161e:	f7 cf       	rjmp	.-18     	; 0x160e <vfprintf+0x372>
    1620:	8a 94       	dec	r8
    1622:	f3 01       	movw	r30, r6
    1624:	e8 0d       	add	r30, r8
    1626:	f1 1d       	adc	r31, r1
    1628:	80 81       	ld	r24, Z
    162a:	b6 01       	movw	r22, r12
    162c:	90 e0       	ldi	r25, 0x00	; 0
    162e:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    1632:	81 10       	cpse	r8, r1
    1634:	f5 cf       	rjmp	.-22     	; 0x1620 <vfprintf+0x384>
    1636:	22 20       	and	r2, r2
    1638:	09 f4       	brne	.+2      	; 0x163c <vfprintf+0x3a0>
    163a:	42 ce       	rjmp	.-892    	; 0x12c0 <vfprintf+0x24>
    163c:	b6 01       	movw	r22, r12
    163e:	80 e2       	ldi	r24, 0x20	; 32
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	0e 94 77 0d 	call	0x1aee	; 0x1aee <fputc>
    1646:	2a 94       	dec	r2
    1648:	f6 cf       	rjmp	.-20     	; 0x1636 <vfprintf+0x39a>
    164a:	f6 01       	movw	r30, r12
    164c:	86 81       	ldd	r24, Z+6	; 0x06
    164e:	97 81       	ldd	r25, Z+7	; 0x07
    1650:	02 c0       	rjmp	.+4      	; 0x1656 <vfprintf+0x3ba>
    1652:	8f ef       	ldi	r24, 0xFF	; 255
    1654:	9f ef       	ldi	r25, 0xFF	; 255
    1656:	2b 96       	adiw	r28, 0x0b	; 11
    1658:	e2 e1       	ldi	r30, 0x12	; 18
    165a:	0c 94 2d 0e 	jmp	0x1c5a	; 0x1c5a <__epilogue_restores__>

0000165e <dtoa_prf>:
    165e:	a9 e0       	ldi	r26, 0x09	; 9
    1660:	b0 e0       	ldi	r27, 0x00	; 0
    1662:	e5 e3       	ldi	r30, 0x35	; 53
    1664:	fb e0       	ldi	r31, 0x0B	; 11
    1666:	0c 94 17 0e 	jmp	0x1c2e	; 0x1c2e <__prologue_saves__+0xc>
    166a:	6a 01       	movw	r12, r20
    166c:	12 2f       	mov	r17, r18
    166e:	b0 2e       	mov	r11, r16
    1670:	2b e3       	ldi	r18, 0x3B	; 59
    1672:	20 17       	cp	r18, r16
    1674:	20 f0       	brcs	.+8      	; 0x167e <dtoa_prf+0x20>
    1676:	ff 24       	eor	r15, r15
    1678:	f3 94       	inc	r15
    167a:	f0 0e       	add	r15, r16
    167c:	02 c0       	rjmp	.+4      	; 0x1682 <dtoa_prf+0x24>
    167e:	2c e3       	ldi	r18, 0x3C	; 60
    1680:	f2 2e       	mov	r15, r18
    1682:	0f 2d       	mov	r16, r15
    1684:	27 e0       	ldi	r18, 0x07	; 7
    1686:	ae 01       	movw	r20, r28
    1688:	4f 5f       	subi	r20, 0xFF	; 255
    168a:	5f 4f       	sbci	r21, 0xFF	; 255
    168c:	0e 94 89 0c 	call	0x1912	; 0x1912 <__ftoa_engine>
    1690:	bc 01       	movw	r22, r24
    1692:	49 81       	ldd	r20, Y+1	; 0x01
    1694:	84 2f       	mov	r24, r20
    1696:	89 70       	andi	r24, 0x09	; 9
    1698:	81 30       	cpi	r24, 0x01	; 1
    169a:	31 f0       	breq	.+12     	; 0x16a8 <dtoa_prf+0x4a>
    169c:	e1 fc       	sbrc	r14, 1
    169e:	06 c0       	rjmp	.+12     	; 0x16ac <dtoa_prf+0x4e>
    16a0:	e0 fe       	sbrs	r14, 0
    16a2:	06 c0       	rjmp	.+12     	; 0x16b0 <dtoa_prf+0x52>
    16a4:	90 e2       	ldi	r25, 0x20	; 32
    16a6:	05 c0       	rjmp	.+10     	; 0x16b2 <dtoa_prf+0x54>
    16a8:	9d e2       	ldi	r25, 0x2D	; 45
    16aa:	03 c0       	rjmp	.+6      	; 0x16b2 <dtoa_prf+0x54>
    16ac:	9b e2       	ldi	r25, 0x2B	; 43
    16ae:	01 c0       	rjmp	.+2      	; 0x16b2 <dtoa_prf+0x54>
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	5e 2d       	mov	r21, r14
    16b4:	50 71       	andi	r21, 0x10	; 16
    16b6:	43 ff       	sbrs	r20, 3
    16b8:	3c c0       	rjmp	.+120    	; 0x1732 <dtoa_prf+0xd4>
    16ba:	91 11       	cpse	r25, r1
    16bc:	02 c0       	rjmp	.+4      	; 0x16c2 <dtoa_prf+0x64>
    16be:	83 e0       	ldi	r24, 0x03	; 3
    16c0:	01 c0       	rjmp	.+2      	; 0x16c4 <dtoa_prf+0x66>
    16c2:	84 e0       	ldi	r24, 0x04	; 4
    16c4:	81 17       	cp	r24, r17
    16c6:	18 f4       	brcc	.+6      	; 0x16ce <dtoa_prf+0x70>
    16c8:	21 2f       	mov	r18, r17
    16ca:	28 1b       	sub	r18, r24
    16cc:	01 c0       	rjmp	.+2      	; 0x16d0 <dtoa_prf+0x72>
    16ce:	20 e0       	ldi	r18, 0x00	; 0
    16d0:	51 11       	cpse	r21, r1
    16d2:	0b c0       	rjmp	.+22     	; 0x16ea <dtoa_prf+0x8c>
    16d4:	f6 01       	movw	r30, r12
    16d6:	82 2f       	mov	r24, r18
    16d8:	30 e2       	ldi	r19, 0x20	; 32
    16da:	88 23       	and	r24, r24
    16dc:	19 f0       	breq	.+6      	; 0x16e4 <dtoa_prf+0x86>
    16de:	31 93       	st	Z+, r19
    16e0:	81 50       	subi	r24, 0x01	; 1
    16e2:	fb cf       	rjmp	.-10     	; 0x16da <dtoa_prf+0x7c>
    16e4:	c2 0e       	add	r12, r18
    16e6:	d1 1c       	adc	r13, r1
    16e8:	20 e0       	ldi	r18, 0x00	; 0
    16ea:	99 23       	and	r25, r25
    16ec:	29 f0       	breq	.+10     	; 0x16f8 <dtoa_prf+0x9a>
    16ee:	d6 01       	movw	r26, r12
    16f0:	9c 93       	st	X, r25
    16f2:	f6 01       	movw	r30, r12
    16f4:	31 96       	adiw	r30, 0x01	; 1
    16f6:	6f 01       	movw	r12, r30
    16f8:	c6 01       	movw	r24, r12
    16fa:	03 96       	adiw	r24, 0x03	; 3
    16fc:	e2 fe       	sbrs	r14, 2
    16fe:	0a c0       	rjmp	.+20     	; 0x1714 <dtoa_prf+0xb6>
    1700:	3e e4       	ldi	r19, 0x4E	; 78
    1702:	d6 01       	movw	r26, r12
    1704:	3c 93       	st	X, r19
    1706:	41 e4       	ldi	r20, 0x41	; 65
    1708:	11 96       	adiw	r26, 0x01	; 1
    170a:	4c 93       	st	X, r20
    170c:	11 97       	sbiw	r26, 0x01	; 1
    170e:	12 96       	adiw	r26, 0x02	; 2
    1710:	3c 93       	st	X, r19
    1712:	06 c0       	rjmp	.+12     	; 0x1720 <dtoa_prf+0xc2>
    1714:	3e e6       	ldi	r19, 0x6E	; 110
    1716:	f6 01       	movw	r30, r12
    1718:	30 83       	st	Z, r19
    171a:	41 e6       	ldi	r20, 0x61	; 97
    171c:	41 83       	std	Z+1, r20	; 0x01
    171e:	32 83       	std	Z+2, r19	; 0x02
    1720:	fc 01       	movw	r30, r24
    1722:	32 2f       	mov	r19, r18
    1724:	40 e2       	ldi	r20, 0x20	; 32
    1726:	33 23       	and	r19, r19
    1728:	09 f4       	brne	.+2      	; 0x172c <dtoa_prf+0xce>
    172a:	42 c0       	rjmp	.+132    	; 0x17b0 <dtoa_prf+0x152>
    172c:	41 93       	st	Z+, r20
    172e:	31 50       	subi	r19, 0x01	; 1
    1730:	fa cf       	rjmp	.-12     	; 0x1726 <dtoa_prf+0xc8>
    1732:	42 ff       	sbrs	r20, 2
    1734:	44 c0       	rjmp	.+136    	; 0x17be <dtoa_prf+0x160>
    1736:	91 11       	cpse	r25, r1
    1738:	02 c0       	rjmp	.+4      	; 0x173e <dtoa_prf+0xe0>
    173a:	83 e0       	ldi	r24, 0x03	; 3
    173c:	01 c0       	rjmp	.+2      	; 0x1740 <dtoa_prf+0xe2>
    173e:	84 e0       	ldi	r24, 0x04	; 4
    1740:	81 17       	cp	r24, r17
    1742:	18 f4       	brcc	.+6      	; 0x174a <dtoa_prf+0xec>
    1744:	21 2f       	mov	r18, r17
    1746:	28 1b       	sub	r18, r24
    1748:	01 c0       	rjmp	.+2      	; 0x174c <dtoa_prf+0xee>
    174a:	20 e0       	ldi	r18, 0x00	; 0
    174c:	51 11       	cpse	r21, r1
    174e:	0b c0       	rjmp	.+22     	; 0x1766 <dtoa_prf+0x108>
    1750:	f6 01       	movw	r30, r12
    1752:	82 2f       	mov	r24, r18
    1754:	30 e2       	ldi	r19, 0x20	; 32
    1756:	88 23       	and	r24, r24
    1758:	19 f0       	breq	.+6      	; 0x1760 <dtoa_prf+0x102>
    175a:	31 93       	st	Z+, r19
    175c:	81 50       	subi	r24, 0x01	; 1
    175e:	fb cf       	rjmp	.-10     	; 0x1756 <dtoa_prf+0xf8>
    1760:	c2 0e       	add	r12, r18
    1762:	d1 1c       	adc	r13, r1
    1764:	20 e0       	ldi	r18, 0x00	; 0
    1766:	99 23       	and	r25, r25
    1768:	29 f0       	breq	.+10     	; 0x1774 <dtoa_prf+0x116>
    176a:	d6 01       	movw	r26, r12
    176c:	9c 93       	st	X, r25
    176e:	f6 01       	movw	r30, r12
    1770:	31 96       	adiw	r30, 0x01	; 1
    1772:	6f 01       	movw	r12, r30
    1774:	c6 01       	movw	r24, r12
    1776:	03 96       	adiw	r24, 0x03	; 3
    1778:	e2 fe       	sbrs	r14, 2
    177a:	0b c0       	rjmp	.+22     	; 0x1792 <dtoa_prf+0x134>
    177c:	39 e4       	ldi	r19, 0x49	; 73
    177e:	d6 01       	movw	r26, r12
    1780:	3c 93       	st	X, r19
    1782:	3e e4       	ldi	r19, 0x4E	; 78
    1784:	11 96       	adiw	r26, 0x01	; 1
    1786:	3c 93       	st	X, r19
    1788:	11 97       	sbiw	r26, 0x01	; 1
    178a:	36 e4       	ldi	r19, 0x46	; 70
    178c:	12 96       	adiw	r26, 0x02	; 2
    178e:	3c 93       	st	X, r19
    1790:	07 c0       	rjmp	.+14     	; 0x17a0 <dtoa_prf+0x142>
    1792:	39 e6       	ldi	r19, 0x69	; 105
    1794:	f6 01       	movw	r30, r12
    1796:	30 83       	st	Z, r19
    1798:	3e e6       	ldi	r19, 0x6E	; 110
    179a:	31 83       	std	Z+1, r19	; 0x01
    179c:	36 e6       	ldi	r19, 0x66	; 102
    179e:	32 83       	std	Z+2, r19	; 0x02
    17a0:	fc 01       	movw	r30, r24
    17a2:	32 2f       	mov	r19, r18
    17a4:	40 e2       	ldi	r20, 0x20	; 32
    17a6:	33 23       	and	r19, r19
    17a8:	19 f0       	breq	.+6      	; 0x17b0 <dtoa_prf+0x152>
    17aa:	41 93       	st	Z+, r20
    17ac:	31 50       	subi	r19, 0x01	; 1
    17ae:	fb cf       	rjmp	.-10     	; 0x17a6 <dtoa_prf+0x148>
    17b0:	fc 01       	movw	r30, r24
    17b2:	e2 0f       	add	r30, r18
    17b4:	f1 1d       	adc	r31, r1
    17b6:	10 82       	st	Z, r1
    17b8:	8e ef       	ldi	r24, 0xFE	; 254
    17ba:	9f ef       	ldi	r25, 0xFF	; 255
    17bc:	a6 c0       	rjmp	.+332    	; 0x190a <dtoa_prf+0x2ac>
    17be:	21 e0       	ldi	r18, 0x01	; 1
    17c0:	30 e0       	ldi	r19, 0x00	; 0
    17c2:	91 11       	cpse	r25, r1
    17c4:	02 c0       	rjmp	.+4      	; 0x17ca <dtoa_prf+0x16c>
    17c6:	20 e0       	ldi	r18, 0x00	; 0
    17c8:	30 e0       	ldi	r19, 0x00	; 0
    17ca:	16 16       	cp	r1, r22
    17cc:	17 06       	cpc	r1, r23
    17ce:	1c f4       	brge	.+6      	; 0x17d6 <dtoa_prf+0x178>
    17d0:	fb 01       	movw	r30, r22
    17d2:	31 96       	adiw	r30, 0x01	; 1
    17d4:	02 c0       	rjmp	.+4      	; 0x17da <dtoa_prf+0x17c>
    17d6:	e1 e0       	ldi	r30, 0x01	; 1
    17d8:	f0 e0       	ldi	r31, 0x00	; 0
    17da:	2e 0f       	add	r18, r30
    17dc:	3f 1f       	adc	r19, r31
    17de:	bb 20       	and	r11, r11
    17e0:	21 f0       	breq	.+8      	; 0x17ea <dtoa_prf+0x18c>
    17e2:	eb 2d       	mov	r30, r11
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	31 96       	adiw	r30, 0x01	; 1
    17e8:	02 c0       	rjmp	.+4      	; 0x17ee <dtoa_prf+0x190>
    17ea:	e0 e0       	ldi	r30, 0x00	; 0
    17ec:	f0 e0       	ldi	r31, 0x00	; 0
    17ee:	2e 0f       	add	r18, r30
    17f0:	3f 1f       	adc	r19, r31
    17f2:	e1 2f       	mov	r30, r17
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	2e 17       	cp	r18, r30
    17f8:	3f 07       	cpc	r19, r31
    17fa:	1c f4       	brge	.+6      	; 0x1802 <dtoa_prf+0x1a4>
    17fc:	12 1b       	sub	r17, r18
    17fe:	21 2f       	mov	r18, r17
    1800:	01 c0       	rjmp	.+2      	; 0x1804 <dtoa_prf+0x1a6>
    1802:	20 e0       	ldi	r18, 0x00	; 0
    1804:	8e 2d       	mov	r24, r14
    1806:	88 71       	andi	r24, 0x18	; 24
    1808:	59 f4       	brne	.+22     	; 0x1820 <dtoa_prf+0x1c2>
    180a:	f6 01       	movw	r30, r12
    180c:	82 2f       	mov	r24, r18
    180e:	30 e2       	ldi	r19, 0x20	; 32
    1810:	88 23       	and	r24, r24
    1812:	19 f0       	breq	.+6      	; 0x181a <dtoa_prf+0x1bc>
    1814:	31 93       	st	Z+, r19
    1816:	81 50       	subi	r24, 0x01	; 1
    1818:	fb cf       	rjmp	.-10     	; 0x1810 <dtoa_prf+0x1b2>
    181a:	c2 0e       	add	r12, r18
    181c:	d1 1c       	adc	r13, r1
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	99 23       	and	r25, r25
    1822:	29 f0       	breq	.+10     	; 0x182e <dtoa_prf+0x1d0>
    1824:	d6 01       	movw	r26, r12
    1826:	9c 93       	st	X, r25
    1828:	f6 01       	movw	r30, r12
    182a:	31 96       	adiw	r30, 0x01	; 1
    182c:	6f 01       	movw	r12, r30
    182e:	51 11       	cpse	r21, r1
    1830:	0b c0       	rjmp	.+22     	; 0x1848 <dtoa_prf+0x1ea>
    1832:	f6 01       	movw	r30, r12
    1834:	82 2f       	mov	r24, r18
    1836:	90 e3       	ldi	r25, 0x30	; 48
    1838:	88 23       	and	r24, r24
    183a:	19 f0       	breq	.+6      	; 0x1842 <dtoa_prf+0x1e4>
    183c:	91 93       	st	Z+, r25
    183e:	81 50       	subi	r24, 0x01	; 1
    1840:	fb cf       	rjmp	.-10     	; 0x1838 <dtoa_prf+0x1da>
    1842:	c2 0e       	add	r12, r18
    1844:	d1 1c       	adc	r13, r1
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	0f 2d       	mov	r16, r15
    184a:	06 0f       	add	r16, r22
    184c:	9a 81       	ldd	r25, Y+2	; 0x02
    184e:	34 2f       	mov	r19, r20
    1850:	30 71       	andi	r19, 0x10	; 16
    1852:	44 ff       	sbrs	r20, 4
    1854:	03 c0       	rjmp	.+6      	; 0x185c <dtoa_prf+0x1fe>
    1856:	91 33       	cpi	r25, 0x31	; 49
    1858:	09 f4       	brne	.+2      	; 0x185c <dtoa_prf+0x1fe>
    185a:	01 50       	subi	r16, 0x01	; 1
    185c:	10 16       	cp	r1, r16
    185e:	24 f4       	brge	.+8      	; 0x1868 <dtoa_prf+0x20a>
    1860:	09 30       	cpi	r16, 0x09	; 9
    1862:	18 f0       	brcs	.+6      	; 0x186a <dtoa_prf+0x20c>
    1864:	08 e0       	ldi	r16, 0x08	; 8
    1866:	01 c0       	rjmp	.+2      	; 0x186a <dtoa_prf+0x20c>
    1868:	01 e0       	ldi	r16, 0x01	; 1
    186a:	ab 01       	movw	r20, r22
    186c:	77 ff       	sbrs	r23, 7
    186e:	02 c0       	rjmp	.+4      	; 0x1874 <dtoa_prf+0x216>
    1870:	40 e0       	ldi	r20, 0x00	; 0
    1872:	50 e0       	ldi	r21, 0x00	; 0
    1874:	fb 01       	movw	r30, r22
    1876:	e4 1b       	sub	r30, r20
    1878:	f5 0b       	sbc	r31, r21
    187a:	a1 e0       	ldi	r26, 0x01	; 1
    187c:	b0 e0       	ldi	r27, 0x00	; 0
    187e:	ac 0f       	add	r26, r28
    1880:	bd 1f       	adc	r27, r29
    1882:	ea 0f       	add	r30, r26
    1884:	fb 1f       	adc	r31, r27
    1886:	8e e2       	ldi	r24, 0x2E	; 46
    1888:	a8 2e       	mov	r10, r24
    188a:	4b 01       	movw	r8, r22
    188c:	80 1a       	sub	r8, r16
    188e:	91 08       	sbc	r9, r1
    1890:	0b 2d       	mov	r16, r11
    1892:	10 e0       	ldi	r17, 0x00	; 0
    1894:	11 95       	neg	r17
    1896:	01 95       	neg	r16
    1898:	11 09       	sbc	r17, r1
    189a:	4f 3f       	cpi	r20, 0xFF	; 255
    189c:	bf ef       	ldi	r27, 0xFF	; 255
    189e:	5b 07       	cpc	r21, r27
    18a0:	21 f4       	brne	.+8      	; 0x18aa <dtoa_prf+0x24c>
    18a2:	d6 01       	movw	r26, r12
    18a4:	ac 92       	st	X, r10
    18a6:	11 96       	adiw	r26, 0x01	; 1
    18a8:	6d 01       	movw	r12, r26
    18aa:	64 17       	cp	r22, r20
    18ac:	75 07       	cpc	r23, r21
    18ae:	2c f0       	brlt	.+10     	; 0x18ba <dtoa_prf+0x25c>
    18b0:	84 16       	cp	r8, r20
    18b2:	95 06       	cpc	r9, r21
    18b4:	14 f4       	brge	.+4      	; 0x18ba <dtoa_prf+0x25c>
    18b6:	81 81       	ldd	r24, Z+1	; 0x01
    18b8:	01 c0       	rjmp	.+2      	; 0x18bc <dtoa_prf+0x25e>
    18ba:	80 e3       	ldi	r24, 0x30	; 48
    18bc:	41 50       	subi	r20, 0x01	; 1
    18be:	51 09       	sbc	r21, r1
    18c0:	31 96       	adiw	r30, 0x01	; 1
    18c2:	d6 01       	movw	r26, r12
    18c4:	11 96       	adiw	r26, 0x01	; 1
    18c6:	7d 01       	movw	r14, r26
    18c8:	40 17       	cp	r20, r16
    18ca:	51 07       	cpc	r21, r17
    18cc:	24 f0       	brlt	.+8      	; 0x18d6 <dtoa_prf+0x278>
    18ce:	d6 01       	movw	r26, r12
    18d0:	8c 93       	st	X, r24
    18d2:	67 01       	movw	r12, r14
    18d4:	e2 cf       	rjmp	.-60     	; 0x189a <dtoa_prf+0x23c>
    18d6:	64 17       	cp	r22, r20
    18d8:	75 07       	cpc	r23, r21
    18da:	39 f4       	brne	.+14     	; 0x18ea <dtoa_prf+0x28c>
    18dc:	96 33       	cpi	r25, 0x36	; 54
    18de:	20 f4       	brcc	.+8      	; 0x18e8 <dtoa_prf+0x28a>
    18e0:	95 33       	cpi	r25, 0x35	; 53
    18e2:	19 f4       	brne	.+6      	; 0x18ea <dtoa_prf+0x28c>
    18e4:	31 11       	cpse	r19, r1
    18e6:	01 c0       	rjmp	.+2      	; 0x18ea <dtoa_prf+0x28c>
    18e8:	81 e3       	ldi	r24, 0x31	; 49
    18ea:	f6 01       	movw	r30, r12
    18ec:	80 83       	st	Z, r24
    18ee:	f7 01       	movw	r30, r14
    18f0:	82 2f       	mov	r24, r18
    18f2:	90 e2       	ldi	r25, 0x20	; 32
    18f4:	88 23       	and	r24, r24
    18f6:	19 f0       	breq	.+6      	; 0x18fe <dtoa_prf+0x2a0>
    18f8:	91 93       	st	Z+, r25
    18fa:	81 50       	subi	r24, 0x01	; 1
    18fc:	fb cf       	rjmp	.-10     	; 0x18f4 <dtoa_prf+0x296>
    18fe:	f7 01       	movw	r30, r14
    1900:	e2 0f       	add	r30, r18
    1902:	f1 1d       	adc	r31, r1
    1904:	10 82       	st	Z, r1
    1906:	80 e0       	ldi	r24, 0x00	; 0
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	29 96       	adiw	r28, 0x09	; 9
    190c:	ec e0       	ldi	r30, 0x0C	; 12
    190e:	0c 94 33 0e 	jmp	0x1c66	; 0x1c66 <__epilogue_restores__+0xc>

00001912 <__ftoa_engine>:
    1912:	28 30       	cpi	r18, 0x08	; 8
    1914:	08 f0       	brcs	.+2      	; 0x1918 <__ftoa_engine+0x6>
    1916:	27 e0       	ldi	r18, 0x07	; 7
    1918:	33 27       	eor	r19, r19
    191a:	da 01       	movw	r26, r20
    191c:	99 0f       	add	r25, r25
    191e:	31 1d       	adc	r19, r1
    1920:	87 fd       	sbrc	r24, 7
    1922:	91 60       	ori	r25, 0x01	; 1
    1924:	00 96       	adiw	r24, 0x00	; 0
    1926:	61 05       	cpc	r22, r1
    1928:	71 05       	cpc	r23, r1
    192a:	39 f4       	brne	.+14     	; 0x193a <__ftoa_engine+0x28>
    192c:	32 60       	ori	r19, 0x02	; 2
    192e:	2e 5f       	subi	r18, 0xFE	; 254
    1930:	3d 93       	st	X+, r19
    1932:	30 e3       	ldi	r19, 0x30	; 48
    1934:	2a 95       	dec	r18
    1936:	e1 f7       	brne	.-8      	; 0x1930 <__ftoa_engine+0x1e>
    1938:	08 95       	ret
    193a:	9f 3f       	cpi	r25, 0xFF	; 255
    193c:	30 f0       	brcs	.+12     	; 0x194a <__ftoa_engine+0x38>
    193e:	80 38       	cpi	r24, 0x80	; 128
    1940:	71 05       	cpc	r23, r1
    1942:	61 05       	cpc	r22, r1
    1944:	09 f0       	breq	.+2      	; 0x1948 <__ftoa_engine+0x36>
    1946:	3c 5f       	subi	r19, 0xFC	; 252
    1948:	3c 5f       	subi	r19, 0xFC	; 252
    194a:	3d 93       	st	X+, r19
    194c:	91 30       	cpi	r25, 0x01	; 1
    194e:	08 f0       	brcs	.+2      	; 0x1952 <__ftoa_engine+0x40>
    1950:	80 68       	ori	r24, 0x80	; 128
    1952:	91 1d       	adc	r25, r1
    1954:	df 93       	push	r29
    1956:	cf 93       	push	r28
    1958:	1f 93       	push	r17
    195a:	0f 93       	push	r16
    195c:	ff 92       	push	r15
    195e:	ef 92       	push	r14
    1960:	19 2f       	mov	r17, r25
    1962:	98 7f       	andi	r25, 0xF8	; 248
    1964:	96 95       	lsr	r25
    1966:	e9 2f       	mov	r30, r25
    1968:	96 95       	lsr	r25
    196a:	96 95       	lsr	r25
    196c:	e9 0f       	add	r30, r25
    196e:	ff 27       	eor	r31, r31
    1970:	e0 53       	subi	r30, 0x30	; 48
    1972:	ff 4f       	sbci	r31, 0xFF	; 255
    1974:	99 27       	eor	r25, r25
    1976:	33 27       	eor	r19, r19
    1978:	ee 24       	eor	r14, r14
    197a:	ff 24       	eor	r15, r15
    197c:	a7 01       	movw	r20, r14
    197e:	e7 01       	movw	r28, r14
    1980:	05 90       	lpm	r0, Z+
    1982:	08 94       	sec
    1984:	07 94       	ror	r0
    1986:	28 f4       	brcc	.+10     	; 0x1992 <__ftoa_engine+0x80>
    1988:	36 0f       	add	r19, r22
    198a:	e7 1e       	adc	r14, r23
    198c:	f8 1e       	adc	r15, r24
    198e:	49 1f       	adc	r20, r25
    1990:	51 1d       	adc	r21, r1
    1992:	66 0f       	add	r22, r22
    1994:	77 1f       	adc	r23, r23
    1996:	88 1f       	adc	r24, r24
    1998:	99 1f       	adc	r25, r25
    199a:	06 94       	lsr	r0
    199c:	a1 f7       	brne	.-24     	; 0x1986 <__ftoa_engine+0x74>
    199e:	05 90       	lpm	r0, Z+
    19a0:	07 94       	ror	r0
    19a2:	28 f4       	brcc	.+10     	; 0x19ae <__ftoa_engine+0x9c>
    19a4:	e7 0e       	add	r14, r23
    19a6:	f8 1e       	adc	r15, r24
    19a8:	49 1f       	adc	r20, r25
    19aa:	56 1f       	adc	r21, r22
    19ac:	c1 1d       	adc	r28, r1
    19ae:	77 0f       	add	r23, r23
    19b0:	88 1f       	adc	r24, r24
    19b2:	99 1f       	adc	r25, r25
    19b4:	66 1f       	adc	r22, r22
    19b6:	06 94       	lsr	r0
    19b8:	a1 f7       	brne	.-24     	; 0x19a2 <__ftoa_engine+0x90>
    19ba:	05 90       	lpm	r0, Z+
    19bc:	07 94       	ror	r0
    19be:	28 f4       	brcc	.+10     	; 0x19ca <__ftoa_engine+0xb8>
    19c0:	f8 0e       	add	r15, r24
    19c2:	49 1f       	adc	r20, r25
    19c4:	56 1f       	adc	r21, r22
    19c6:	c7 1f       	adc	r28, r23
    19c8:	d1 1d       	adc	r29, r1
    19ca:	88 0f       	add	r24, r24
    19cc:	99 1f       	adc	r25, r25
    19ce:	66 1f       	adc	r22, r22
    19d0:	77 1f       	adc	r23, r23
    19d2:	06 94       	lsr	r0
    19d4:	a1 f7       	brne	.-24     	; 0x19be <__ftoa_engine+0xac>
    19d6:	05 90       	lpm	r0, Z+
    19d8:	07 94       	ror	r0
    19da:	20 f4       	brcc	.+8      	; 0x19e4 <__ftoa_engine+0xd2>
    19dc:	49 0f       	add	r20, r25
    19de:	56 1f       	adc	r21, r22
    19e0:	c7 1f       	adc	r28, r23
    19e2:	d8 1f       	adc	r29, r24
    19e4:	99 0f       	add	r25, r25
    19e6:	66 1f       	adc	r22, r22
    19e8:	77 1f       	adc	r23, r23
    19ea:	88 1f       	adc	r24, r24
    19ec:	06 94       	lsr	r0
    19ee:	a9 f7       	brne	.-22     	; 0x19da <__ftoa_engine+0xc8>
    19f0:	84 91       	lpm	r24, Z
    19f2:	10 95       	com	r17
    19f4:	17 70       	andi	r17, 0x07	; 7
    19f6:	41 f0       	breq	.+16     	; 0x1a08 <__ftoa_engine+0xf6>
    19f8:	d6 95       	lsr	r29
    19fa:	c7 95       	ror	r28
    19fc:	57 95       	ror	r21
    19fe:	47 95       	ror	r20
    1a00:	f7 94       	ror	r15
    1a02:	e7 94       	ror	r14
    1a04:	1a 95       	dec	r17
    1a06:	c1 f7       	brne	.-16     	; 0x19f8 <__ftoa_engine+0xe6>
    1a08:	e6 e7       	ldi	r30, 0x76	; 118
    1a0a:	f0 e0       	ldi	r31, 0x00	; 0
    1a0c:	68 94       	set
    1a0e:	15 90       	lpm	r1, Z+
    1a10:	15 91       	lpm	r17, Z+
    1a12:	35 91       	lpm	r19, Z+
    1a14:	65 91       	lpm	r22, Z+
    1a16:	95 91       	lpm	r25, Z+
    1a18:	05 90       	lpm	r0, Z+
    1a1a:	7f e2       	ldi	r23, 0x2F	; 47
    1a1c:	73 95       	inc	r23
    1a1e:	e1 18       	sub	r14, r1
    1a20:	f1 0a       	sbc	r15, r17
    1a22:	43 0b       	sbc	r20, r19
    1a24:	56 0b       	sbc	r21, r22
    1a26:	c9 0b       	sbc	r28, r25
    1a28:	d0 09       	sbc	r29, r0
    1a2a:	c0 f7       	brcc	.-16     	; 0x1a1c <__ftoa_engine+0x10a>
    1a2c:	e1 0c       	add	r14, r1
    1a2e:	f1 1e       	adc	r15, r17
    1a30:	43 1f       	adc	r20, r19
    1a32:	56 1f       	adc	r21, r22
    1a34:	c9 1f       	adc	r28, r25
    1a36:	d0 1d       	adc	r29, r0
    1a38:	7e f4       	brtc	.+30     	; 0x1a58 <__ftoa_engine+0x146>
    1a3a:	70 33       	cpi	r23, 0x30	; 48
    1a3c:	11 f4       	brne	.+4      	; 0x1a42 <__ftoa_engine+0x130>
    1a3e:	8a 95       	dec	r24
    1a40:	e6 cf       	rjmp	.-52     	; 0x1a0e <__ftoa_engine+0xfc>
    1a42:	e8 94       	clt
    1a44:	01 50       	subi	r16, 0x01	; 1
    1a46:	30 f0       	brcs	.+12     	; 0x1a54 <__ftoa_engine+0x142>
    1a48:	08 0f       	add	r16, r24
    1a4a:	0a f4       	brpl	.+2      	; 0x1a4e <__ftoa_engine+0x13c>
    1a4c:	00 27       	eor	r16, r16
    1a4e:	02 17       	cp	r16, r18
    1a50:	08 f4       	brcc	.+2      	; 0x1a54 <__ftoa_engine+0x142>
    1a52:	20 2f       	mov	r18, r16
    1a54:	23 95       	inc	r18
    1a56:	02 2f       	mov	r16, r18
    1a58:	7a 33       	cpi	r23, 0x3A	; 58
    1a5a:	28 f0       	brcs	.+10     	; 0x1a66 <__ftoa_engine+0x154>
    1a5c:	79 e3       	ldi	r23, 0x39	; 57
    1a5e:	7d 93       	st	X+, r23
    1a60:	2a 95       	dec	r18
    1a62:	e9 f7       	brne	.-6      	; 0x1a5e <__ftoa_engine+0x14c>
    1a64:	10 c0       	rjmp	.+32     	; 0x1a86 <__ftoa_engine+0x174>
    1a66:	7d 93       	st	X+, r23
    1a68:	2a 95       	dec	r18
    1a6a:	89 f6       	brne	.-94     	; 0x1a0e <__ftoa_engine+0xfc>
    1a6c:	06 94       	lsr	r0
    1a6e:	97 95       	ror	r25
    1a70:	67 95       	ror	r22
    1a72:	37 95       	ror	r19
    1a74:	17 95       	ror	r17
    1a76:	17 94       	ror	r1
    1a78:	e1 18       	sub	r14, r1
    1a7a:	f1 0a       	sbc	r15, r17
    1a7c:	43 0b       	sbc	r20, r19
    1a7e:	56 0b       	sbc	r21, r22
    1a80:	c9 0b       	sbc	r28, r25
    1a82:	d0 09       	sbc	r29, r0
    1a84:	98 f0       	brcs	.+38     	; 0x1aac <__ftoa_engine+0x19a>
    1a86:	23 95       	inc	r18
    1a88:	7e 91       	ld	r23, -X
    1a8a:	73 95       	inc	r23
    1a8c:	7a 33       	cpi	r23, 0x3A	; 58
    1a8e:	08 f0       	brcs	.+2      	; 0x1a92 <__ftoa_engine+0x180>
    1a90:	70 e3       	ldi	r23, 0x30	; 48
    1a92:	7c 93       	st	X, r23
    1a94:	20 13       	cpse	r18, r16
    1a96:	b8 f7       	brcc	.-18     	; 0x1a86 <__ftoa_engine+0x174>
    1a98:	7e 91       	ld	r23, -X
    1a9a:	70 61       	ori	r23, 0x10	; 16
    1a9c:	7d 93       	st	X+, r23
    1a9e:	30 f0       	brcs	.+12     	; 0x1aac <__ftoa_engine+0x19a>
    1aa0:	83 95       	inc	r24
    1aa2:	71 e3       	ldi	r23, 0x31	; 49
    1aa4:	7d 93       	st	X+, r23
    1aa6:	70 e3       	ldi	r23, 0x30	; 48
    1aa8:	2a 95       	dec	r18
    1aaa:	e1 f7       	brne	.-8      	; 0x1aa4 <__ftoa_engine+0x192>
    1aac:	11 24       	eor	r1, r1
    1aae:	ef 90       	pop	r14
    1ab0:	ff 90       	pop	r15
    1ab2:	0f 91       	pop	r16
    1ab4:	1f 91       	pop	r17
    1ab6:	cf 91       	pop	r28
    1ab8:	df 91       	pop	r29
    1aba:	99 27       	eor	r25, r25
    1abc:	87 fd       	sbrc	r24, 7
    1abe:	90 95       	com	r25
    1ac0:	08 95       	ret

00001ac2 <strnlen_P>:
    1ac2:	fc 01       	movw	r30, r24
    1ac4:	05 90       	lpm	r0, Z+
    1ac6:	61 50       	subi	r22, 0x01	; 1
    1ac8:	70 40       	sbci	r23, 0x00	; 0
    1aca:	01 10       	cpse	r0, r1
    1acc:	d8 f7       	brcc	.-10     	; 0x1ac4 <strnlen_P+0x2>
    1ace:	80 95       	com	r24
    1ad0:	90 95       	com	r25
    1ad2:	8e 0f       	add	r24, r30
    1ad4:	9f 1f       	adc	r25, r31
    1ad6:	08 95       	ret

00001ad8 <strnlen>:
    1ad8:	fc 01       	movw	r30, r24
    1ada:	61 50       	subi	r22, 0x01	; 1
    1adc:	70 40       	sbci	r23, 0x00	; 0
    1ade:	01 90       	ld	r0, Z+
    1ae0:	01 10       	cpse	r0, r1
    1ae2:	d8 f7       	brcc	.-10     	; 0x1ada <strnlen+0x2>
    1ae4:	80 95       	com	r24
    1ae6:	90 95       	com	r25
    1ae8:	8e 0f       	add	r24, r30
    1aea:	9f 1f       	adc	r25, r31
    1aec:	08 95       	ret

00001aee <fputc>:
    1aee:	0f 93       	push	r16
    1af0:	1f 93       	push	r17
    1af2:	cf 93       	push	r28
    1af4:	df 93       	push	r29
    1af6:	fb 01       	movw	r30, r22
    1af8:	23 81       	ldd	r18, Z+3	; 0x03
    1afa:	21 fd       	sbrc	r18, 1
    1afc:	03 c0       	rjmp	.+6      	; 0x1b04 <fputc+0x16>
    1afe:	8f ef       	ldi	r24, 0xFF	; 255
    1b00:	9f ef       	ldi	r25, 0xFF	; 255
    1b02:	2c c0       	rjmp	.+88     	; 0x1b5c <fputc+0x6e>
    1b04:	22 ff       	sbrs	r18, 2
    1b06:	16 c0       	rjmp	.+44     	; 0x1b34 <fputc+0x46>
    1b08:	46 81       	ldd	r20, Z+6	; 0x06
    1b0a:	57 81       	ldd	r21, Z+7	; 0x07
    1b0c:	24 81       	ldd	r18, Z+4	; 0x04
    1b0e:	35 81       	ldd	r19, Z+5	; 0x05
    1b10:	42 17       	cp	r20, r18
    1b12:	53 07       	cpc	r21, r19
    1b14:	44 f4       	brge	.+16     	; 0x1b26 <fputc+0x38>
    1b16:	a0 81       	ld	r26, Z
    1b18:	b1 81       	ldd	r27, Z+1	; 0x01
    1b1a:	9d 01       	movw	r18, r26
    1b1c:	2f 5f       	subi	r18, 0xFF	; 255
    1b1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b20:	31 83       	std	Z+1, r19	; 0x01
    1b22:	20 83       	st	Z, r18
    1b24:	8c 93       	st	X, r24
    1b26:	26 81       	ldd	r18, Z+6	; 0x06
    1b28:	37 81       	ldd	r19, Z+7	; 0x07
    1b2a:	2f 5f       	subi	r18, 0xFF	; 255
    1b2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b2e:	37 83       	std	Z+7, r19	; 0x07
    1b30:	26 83       	std	Z+6, r18	; 0x06
    1b32:	14 c0       	rjmp	.+40     	; 0x1b5c <fputc+0x6e>
    1b34:	8b 01       	movw	r16, r22
    1b36:	ec 01       	movw	r28, r24
    1b38:	fb 01       	movw	r30, r22
    1b3a:	00 84       	ldd	r0, Z+8	; 0x08
    1b3c:	f1 85       	ldd	r31, Z+9	; 0x09
    1b3e:	e0 2d       	mov	r30, r0
    1b40:	09 95       	icall
    1b42:	89 2b       	or	r24, r25
    1b44:	e1 f6       	brne	.-72     	; 0x1afe <fputc+0x10>
    1b46:	d8 01       	movw	r26, r16
    1b48:	16 96       	adiw	r26, 0x06	; 6
    1b4a:	8d 91       	ld	r24, X+
    1b4c:	9c 91       	ld	r25, X
    1b4e:	17 97       	sbiw	r26, 0x07	; 7
    1b50:	01 96       	adiw	r24, 0x01	; 1
    1b52:	17 96       	adiw	r26, 0x07	; 7
    1b54:	9c 93       	st	X, r25
    1b56:	8e 93       	st	-X, r24
    1b58:	16 97       	sbiw	r26, 0x06	; 6
    1b5a:	ce 01       	movw	r24, r28
    1b5c:	df 91       	pop	r29
    1b5e:	cf 91       	pop	r28
    1b60:	1f 91       	pop	r17
    1b62:	0f 91       	pop	r16
    1b64:	08 95       	ret

00001b66 <__ultoa_invert>:
    1b66:	fa 01       	movw	r30, r20
    1b68:	aa 27       	eor	r26, r26
    1b6a:	28 30       	cpi	r18, 0x08	; 8
    1b6c:	51 f1       	breq	.+84     	; 0x1bc2 <__ultoa_invert+0x5c>
    1b6e:	20 31       	cpi	r18, 0x10	; 16
    1b70:	81 f1       	breq	.+96     	; 0x1bd2 <__ultoa_invert+0x6c>
    1b72:	e8 94       	clt
    1b74:	6f 93       	push	r22
    1b76:	6e 7f       	andi	r22, 0xFE	; 254
    1b78:	6e 5f       	subi	r22, 0xFE	; 254
    1b7a:	7f 4f       	sbci	r23, 0xFF	; 255
    1b7c:	8f 4f       	sbci	r24, 0xFF	; 255
    1b7e:	9f 4f       	sbci	r25, 0xFF	; 255
    1b80:	af 4f       	sbci	r26, 0xFF	; 255
    1b82:	b1 e0       	ldi	r27, 0x01	; 1
    1b84:	3e d0       	rcall	.+124    	; 0x1c02 <__ultoa_invert+0x9c>
    1b86:	b4 e0       	ldi	r27, 0x04	; 4
    1b88:	3c d0       	rcall	.+120    	; 0x1c02 <__ultoa_invert+0x9c>
    1b8a:	67 0f       	add	r22, r23
    1b8c:	78 1f       	adc	r23, r24
    1b8e:	89 1f       	adc	r24, r25
    1b90:	9a 1f       	adc	r25, r26
    1b92:	a1 1d       	adc	r26, r1
    1b94:	68 0f       	add	r22, r24
    1b96:	79 1f       	adc	r23, r25
    1b98:	8a 1f       	adc	r24, r26
    1b9a:	91 1d       	adc	r25, r1
    1b9c:	a1 1d       	adc	r26, r1
    1b9e:	6a 0f       	add	r22, r26
    1ba0:	71 1d       	adc	r23, r1
    1ba2:	81 1d       	adc	r24, r1
    1ba4:	91 1d       	adc	r25, r1
    1ba6:	a1 1d       	adc	r26, r1
    1ba8:	20 d0       	rcall	.+64     	; 0x1bea <__ultoa_invert+0x84>
    1baa:	09 f4       	brne	.+2      	; 0x1bae <__ultoa_invert+0x48>
    1bac:	68 94       	set
    1bae:	3f 91       	pop	r19
    1bb0:	2a e0       	ldi	r18, 0x0A	; 10
    1bb2:	26 9f       	mul	r18, r22
    1bb4:	11 24       	eor	r1, r1
    1bb6:	30 19       	sub	r19, r0
    1bb8:	30 5d       	subi	r19, 0xD0	; 208
    1bba:	31 93       	st	Z+, r19
    1bbc:	de f6       	brtc	.-74     	; 0x1b74 <__ultoa_invert+0xe>
    1bbe:	cf 01       	movw	r24, r30
    1bc0:	08 95       	ret
    1bc2:	46 2f       	mov	r20, r22
    1bc4:	47 70       	andi	r20, 0x07	; 7
    1bc6:	40 5d       	subi	r20, 0xD0	; 208
    1bc8:	41 93       	st	Z+, r20
    1bca:	b3 e0       	ldi	r27, 0x03	; 3
    1bcc:	0f d0       	rcall	.+30     	; 0x1bec <__ultoa_invert+0x86>
    1bce:	c9 f7       	brne	.-14     	; 0x1bc2 <__ultoa_invert+0x5c>
    1bd0:	f6 cf       	rjmp	.-20     	; 0x1bbe <__ultoa_invert+0x58>
    1bd2:	46 2f       	mov	r20, r22
    1bd4:	4f 70       	andi	r20, 0x0F	; 15
    1bd6:	40 5d       	subi	r20, 0xD0	; 208
    1bd8:	4a 33       	cpi	r20, 0x3A	; 58
    1bda:	18 f0       	brcs	.+6      	; 0x1be2 <__ultoa_invert+0x7c>
    1bdc:	49 5d       	subi	r20, 0xD9	; 217
    1bde:	31 fd       	sbrc	r19, 1
    1be0:	40 52       	subi	r20, 0x20	; 32
    1be2:	41 93       	st	Z+, r20
    1be4:	02 d0       	rcall	.+4      	; 0x1bea <__ultoa_invert+0x84>
    1be6:	a9 f7       	brne	.-22     	; 0x1bd2 <__ultoa_invert+0x6c>
    1be8:	ea cf       	rjmp	.-44     	; 0x1bbe <__ultoa_invert+0x58>
    1bea:	b4 e0       	ldi	r27, 0x04	; 4
    1bec:	a6 95       	lsr	r26
    1bee:	97 95       	ror	r25
    1bf0:	87 95       	ror	r24
    1bf2:	77 95       	ror	r23
    1bf4:	67 95       	ror	r22
    1bf6:	ba 95       	dec	r27
    1bf8:	c9 f7       	brne	.-14     	; 0x1bec <__ultoa_invert+0x86>
    1bfa:	00 97       	sbiw	r24, 0x00	; 0
    1bfc:	61 05       	cpc	r22, r1
    1bfe:	71 05       	cpc	r23, r1
    1c00:	08 95       	ret
    1c02:	9b 01       	movw	r18, r22
    1c04:	ac 01       	movw	r20, r24
    1c06:	0a 2e       	mov	r0, r26
    1c08:	06 94       	lsr	r0
    1c0a:	57 95       	ror	r21
    1c0c:	47 95       	ror	r20
    1c0e:	37 95       	ror	r19
    1c10:	27 95       	ror	r18
    1c12:	ba 95       	dec	r27
    1c14:	c9 f7       	brne	.-14     	; 0x1c08 <__ultoa_invert+0xa2>
    1c16:	62 0f       	add	r22, r18
    1c18:	73 1f       	adc	r23, r19
    1c1a:	84 1f       	adc	r24, r20
    1c1c:	95 1f       	adc	r25, r21
    1c1e:	a0 1d       	adc	r26, r0
    1c20:	08 95       	ret

00001c22 <__prologue_saves__>:
    1c22:	2f 92       	push	r2
    1c24:	3f 92       	push	r3
    1c26:	4f 92       	push	r4
    1c28:	5f 92       	push	r5
    1c2a:	6f 92       	push	r6
    1c2c:	7f 92       	push	r7
    1c2e:	8f 92       	push	r8
    1c30:	9f 92       	push	r9
    1c32:	af 92       	push	r10
    1c34:	bf 92       	push	r11
    1c36:	cf 92       	push	r12
    1c38:	df 92       	push	r13
    1c3a:	ef 92       	push	r14
    1c3c:	ff 92       	push	r15
    1c3e:	0f 93       	push	r16
    1c40:	1f 93       	push	r17
    1c42:	cf 93       	push	r28
    1c44:	df 93       	push	r29
    1c46:	cd b7       	in	r28, 0x3d	; 61
    1c48:	de b7       	in	r29, 0x3e	; 62
    1c4a:	ca 1b       	sub	r28, r26
    1c4c:	db 0b       	sbc	r29, r27
    1c4e:	0f b6       	in	r0, 0x3f	; 63
    1c50:	f8 94       	cli
    1c52:	de bf       	out	0x3e, r29	; 62
    1c54:	0f be       	out	0x3f, r0	; 63
    1c56:	cd bf       	out	0x3d, r28	; 61
    1c58:	09 94       	ijmp

00001c5a <__epilogue_restores__>:
    1c5a:	2a 88       	ldd	r2, Y+18	; 0x12
    1c5c:	39 88       	ldd	r3, Y+17	; 0x11
    1c5e:	48 88       	ldd	r4, Y+16	; 0x10
    1c60:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c62:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c64:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c66:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c68:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c6a:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c6c:	b9 84       	ldd	r11, Y+9	; 0x09
    1c6e:	c8 84       	ldd	r12, Y+8	; 0x08
    1c70:	df 80       	ldd	r13, Y+7	; 0x07
    1c72:	ee 80       	ldd	r14, Y+6	; 0x06
    1c74:	fd 80       	ldd	r15, Y+5	; 0x05
    1c76:	0c 81       	ldd	r16, Y+4	; 0x04
    1c78:	1b 81       	ldd	r17, Y+3	; 0x03
    1c7a:	aa 81       	ldd	r26, Y+2	; 0x02
    1c7c:	b9 81       	ldd	r27, Y+1	; 0x01
    1c7e:	ce 0f       	add	r28, r30
    1c80:	d1 1d       	adc	r29, r1
    1c82:	0f b6       	in	r0, 0x3f	; 63
    1c84:	f8 94       	cli
    1c86:	de bf       	out	0x3e, r29	; 62
    1c88:	0f be       	out	0x3f, r0	; 63
    1c8a:	cd bf       	out	0x3d, r28	; 61
    1c8c:	ed 01       	movw	r28, r26
    1c8e:	08 95       	ret

00001c90 <_exit>:
    1c90:	f8 94       	cli

00001c92 <__stop_program>:
    1c92:	ff cf       	rjmp	.-2      	; 0x1c92 <__stop_program>
